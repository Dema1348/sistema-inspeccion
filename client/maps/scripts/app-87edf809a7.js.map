{"version":3,"sources":["scripts/app.js"],"names":["angular","module","MsWidgetController","$scope","$element","flip","isFlippable","vm","flipped","toggleClass","isDefined","flippable","this","msWidgetDirective","restrict","scope","controller","transclude","compile","tElement","addClass","iElement","iAttrs","MsWidgetCtrl","transcludeFn","clone","empty","append","msWidgetFrontDirective","require","flipWidget","msWidgetBackDirective","$inject","directive","MsTimelineController","setScrollEl","scrollEl","getScrollEl","undefined","msTimelineDirective","msTimeline","loadMore","MsTimelineCtrl","onScroll","scrollTop","height","threshold","loadMoreEl","position","top","unregisterOnScroll","then","removeClass","registerOnScroll","remove","on","off","element","config","extend","$on","msTimelineItemDirective","$timeout","$q","init","find","event","args","cardEl","testForImage","itemLoaded","testForVisibility","deferred","defer","imgEl","length","resolve","promise","itemInViewport","itemReadyWatcher","$watch","current","old","equals","MsStepperController","setOrientation","orientation","registerMainForm","form","mainForm","registerStep","step","stepNumber","steps","stepTitle","stepTitleTranslate","push","sort","a","b","setupSteps","setCurrentStep","currentStepNumber","resetForm","x","$setPristine","$setUntouched","gotoFirstStep","isStepNumberValid","i","hide","show","j","gotoStep","isStepHidden","gotoPreviousStep","s","gotoNextStep","gotoLastStep","isFirstStep","isLastStep","isStepCurrent","isStepDisabled","disabled","isStepValid","isStepOptional","optionalStep","hideStep","filterHiddenStep","$valid","isUndefined","isFormValid","currentStep","msHorizontalStepperDirective","priority","bindToController","model","templateUrl","ctrls","FormCtrl","MsStepperCtrl","msHorizontalStepperStepDirective","msVerticalStepperDirective","msVerticalStepperStepDirective","stepInfo","MsStepper","msSplashScreenDirective","$animate","link","splashScreenRemoveEvent","leave","msSidenavHelperDirective","MdSidenavCtrl","isOpen","isLockedOpen","parent","MsShortcutsController","$cookies","$document","msNavigationService","loadShortcuts","response","shortcuts","results","resultsLoading","populateResults","flatNavigation","getFlatNavigation","uisref","query","filter","item","lowercase","title","search","hasShortcut","y","_id","selectedResultIndex","fromJson","get","icon","state","weight","children","_path","put","toJson","saveShortcuts","success","addShortcut","removeShortcut","splice","handleResultClick","absorbEvent","preventDefault","handleKeydown","keyCode","keys","indexOf","ensureSelectedResultIsVisible","handleMouseenter","index","ignoreMouseEvents","temporarilyIgnoreMouseEvents","cancel","mouseEventIgnoreTimeout","resultsEl","selectedItemEl","bottom","outerHeight","toggleMobileBar","mobileBarActive","queryOptions","debounce","sortableOptions","ghostClass","forceFallback","fallbackClass","onSort","msShortcutsDirective","MsSearchBarController","collapsed","onSearchEvaluated","$parent","$eval","onSearch","isArray","isPromise","isNull","expand","onExpand","isFunction","collapse","onCollapse","onResultClick","msSearchBarDirective","inputEl","bodyEl","focus","msScrollConfigProvider","configuration","defaultConfiguration","wheelSpeed","wheelPropagation","swipePropagation","minScrollbarLength","maxScrollbarLength","useBothWheelAxes","useKeyboard","suppressScrollX","suppressScrollY","scrollXMarginOffset","scrollYMarginOffset","stopPropagationOnClick","$get","getConfig","service","msScrollDirective","msScrollConfig","msUtils","fuseConfig","isMobile","updateScrollbar","PerfectScrollbar","update","options","msScroll","initialize","prop","destroy","provider","msResponsiveTableDirective","wrapper","after","msRandomClassDirective","msRandomClass","randomClass","Math","floor","random","msNavigationServiceProvider","saveItem","path","isString","$log","error","parts","split","id","_findOrCreateParent","updateItem","_getUiSref","isNumber","deleteItem","navigation","p","sortByWeight","_byWeight","pop","createParent","join","parseInt","stateParams","isObject","injector","clearNavigation","navigationScope","setActiveItem","node","activeItem","getActiveItem","getNavigation","root","_flattenNavigation","setNavigationScope","setFolded","status","folded","getFolded","setFoldedOpen","foldedOpen","getFoldedOpen","toggleFolded","flatNav","navToPush","copy","concat","MsNavigationController","toggleHorizontalMobileMenu","msNavigationDirective","$rootScope","$mdSidenav","$broadcast","setFoldExpander","$emit","removeFoldCollapser","foldExpanderEl","onFoldExpanderHover","setFoldCollapser","foldCollapserEl","onFoldCollapserHover","sidenav","close","MsNavigationNodeController","$state","hasChildren","group","collapsable","name","includes","params","$evalAsync","givenPathParts","activePathParts","toggleCollapsed","collapseEl","offsetHeight","animate","display","animateHeightClass","css","expandEl","visibility","getClass","isHidden","hidden","msNavigationNodeDirective","MsNavigationNodeCtrl","msNavigationItemDirective","msNavigationHorizontalDirective","MsNavigationHorizontalNodeController","isActive","msNavigationHorizontalNodeDirective","MsNavigationHorizontalNodeCtrl","msNavigationHorizontalItemDirective","$mdMedia","onClick","msNavFoldService","setFoldable","foldable","isNavFoldedOpen","toggleFold","openFolded","closeFolded","msNavIsFoldedDirective","isFoldedOpen","isFolded","fold","unfold","body","sidenavEl","openOverlay","closeOverlay","msNavIsFolded","MsNavController","isDisabled","disable","enable","setToggleItem","toggleItems","getLockedItems","lockedItems","setLockedItem","clearLockedItems","msNavDirective","$mdComponentRegistry","stateChangeSuccessEvent","when","msNavTitleDirective","msNavButtonDirective","msNavToggleDirective","tAttrs","attr","MsNavCtrl","toggle","isCollapsed","isExpanded","reject","elementToExpand","classes","expandAnimation","expanded","elementToCollapse","collapseAnimation","links","states","regExp","forEach","replace","locked","lockedItem","currentState","shouldExpand","factory","msMaterialColorPickerController","$mdColorPalette","$mdMenu","fuseGenerator","activateHueSelection","palette","hues","selectedPalette","selectedHues","selectColor","hue","updateSelectedColor","updateModel","removeColor","selectedColor","class","setSelectedColor","modelCtrl","$viewValue","msModelType","color","bgColorValue","rgba","palettes","value","fgColorValue","contrast","$selectedColor","$setViewValue","msMaterialColorPicker","ngModel","attrs","controllers","ctrl","el","nodeType","replaceWith","msMasonryController","$window","defaultOpts","watchContainerResize","waitImagesLoaded","callback","imagesLoaded","imgLoad","container","width","newValue","oldValue","reLayout","start","containerPos","getBoundingClientRect","updateColumnOptions","items","referenceArr","Array","apply","columnCount","map","xPos","yPos","column","refTop","columnWidth","respectItemOrder","min","round","transform","reLayoutTimeout","reLayoutDebounce","responsive","md","sm","xs","msMasonry","attributes","pre","post","msMasonryItem","newVal","oldVal","msInfoBarDirective","removeInfoBar","bodyClass","$destroy","MsFormWizardController","registerForm","forms","previousStep","selectedIndex","nextStep","firstStep","lastStep","totalSteps","currentStepInvalid","$invalid","previousStepInvalid","formsIncomplete","msFormWizardDirective","msFormWizardFormDirective","formCtrl","MsFormWizardCtrl","msDatepickerFixConfigProvider","defaultConfig","formatter","val","Date","parser","moment","add","utcOffset","toDate","msDatepickerFix","msDatepickerFixConfig","elem","$formatters","$parsers","msCardDirective","templatePath","card","template","cardTemplateLoaded","$stateProvider","$translatePartialLoaderProvider","url","views","main@","content@app.login","addPart","LoginController","authService","uiHelper","login","credentials","console","log","go","content@app","translate","HomeController","dtOptions","dom","pagingType","autoWidth","fuseThemingService","$mdTheming","getRegisteredPalettes","PALETTES","getRegisteredThemes","THEMES","setActiveTheme","themeName","themes","list","warn","active","theme","setThemesList","themeList","$mdThemingProvider","fusePalettes","fuseThemes","invoke","_$cookies","customTheme","getObject","alwaysWatchTheme","definePalette","primaryPalette","primary","accentPalette","accent","warnPalette","backgroundPalette","background","default","hue-1","hue-2","hue-3","pinkTheme","tealTheme","constant","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","contrastDarkColors","contrastStrongLightColors","fuseGeneratorService","fuseTheming","generate","registeredThemes","registeredPalettes","registeredTheme","colors","colorType","colorTypeName","levels","contrast1","contrast2","contrast3","contrast4","hue1","hue2","hue3","processAndStoreThemes","styleVars","colorTypes","colorLevelName","colorName","ucfirst","render","_themes","selectedTheme","cssTemplate","regex","RegExp","Object","matched","headEl","styleEl","html","_contrastLevel","contrastLevel","applyContrast","contrastLevels","white","1","2","3","4","black","string","charAt","toUpperCase","slice","MsThemeOptionsController","getActiveTheme","updateLayoutMode","layoutMode","updateLayoutStyle","layoutStyle","location","reload","layoutModes","label","layoutStyles","figure","msThemeOptions","toggleOptionsSidenav","exists","detectBrowser","searchString","data","dataString","dataProp","versionSearchString","versionSearch","identity","subString","searchVersion","substring","browserInfo","browserData","navigator","userAgent","vendor","opera","osData","platform","browser","version","appVersion","os","toLowerCase","guidGenerator","S4","toString","mobileDetect","mobile","toggleInArray","array","MobileDetect","msApiProvider","setBaseUrl","baseUrl","getBaseUrl","getApiObject","api","register","key","resource","paramDefaults","actions","$resource","action","parameters","actionParts","method","apiObject","resourceObject","request","apiResolverService","resourceParts","l","filterByTags","tags","filtered","match","every","tag","tagExists","itemTag","filterSingleByTags","itemTags","filterByPropIds","parameter","ids","filterByIds","toTrustedFilter","$sce","trustAsHtml","htmlToPlainTextFilter","text","String","nospaceFilter","humanizeDocFilter","doc","type","$1","altDate","diff","now","fromNow","format","calendar","hljsDirective","$interpolate","code","contents","codeElement","lines","line","trim","firstLineWhitespace","startingWhitespaceRegex","highlightedCode","hljs","highlight","language","lang","shouldInterpolate","contentParent","fuseConfigProvider","fuseConfiguration","disableCustomScrollbars","disableMdInkRippleOnMobile","disableCustomScrollbarsOnMobile","configName","setConfig","configValue","$mdToast","showToast","time","simple","textContent","hideDelay","ToolbarController","$translate","userStatus","userStatusOptions","customer","getCurrentCustomer","toggleSidenav","sidenavId","setUserStatus","logout","toggleMsNavigationFolded","exports","window","getHost","m","urlBase","authHeader","urlBaseHost","host","LoopBackResource","LoopBackAuth","$injector","R","prototype$__findById__accessTokens","fk","prototype$__destroyById__accessTokens","prototype$__updateById__accessTokens","prototype$__get__accessTokens","prototype$__create__accessTokens","prototype$__delete__accessTokens","prototype$__count__accessTokens","create","createMany","patchOrCreate","replaceOrCreate","upsertWithWhere","findById","replaceById","findOne","updateAll","deleteById","count","prototype$patchAttributes","createChangeStream","include","interceptor","accessToken","setUser","userId","user","rememberMe","save","clearUser","clearStorage","responseError","prototype$verify","confirm","resetPassword","changePassword","setPassword","getCurrent","currentUserId","currentUserData","__isGetCurrentUser__","getCachedCurrent","isAuthenticated","getCurrentId","modelName","self","props","load","storage","propsPrefix","err","localStorage","sessionStorage","prototype","accessTokenId","userData","$httpProvider","interceptors","headers","res","setAuthHeader","header","getAuthHeader","setUrlBase","getUrlBase","$save","result","upsert","call","$promise","Customer","newUser","getCurrentUser","NavigationController","msScrollOptions","MainController","targetScope","$id","runBlock","htmlClass","run","$ariaProvider","$logProvider","debugEnabled","tabindex","$location","stateChangeStartEvent","loadingProgress","restrictedPage","$","inArray","next","routeConfig","$urlRouterProvider","$locationProvider","html5Mode","otherwise","layouts","verticalNavigation","main","toolbar","contentOnly","contentWithToolbar","abstract","toolbar@app","navigation@app","IndexController","uiGmapGoogleMapApiProvider","LoopBackResourceProvider","BASEURL","configure","v","libraries","apiService","$templateCache"],"mappings":"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","file":"scripts/app-87edf809a7.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core',\n            [\n                'ngAnimate',\n                'ngAria',\n                'ngCookies',\n                'ngMessages',\n                'ngResource',\n                'ngSanitize',\n                'ngMaterial',\n                'pascalprecht.translate',\n                'ui.router'\n            ]);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsWidgetController', MsWidgetController)\n        .directive('msWidget', msWidgetDirective)\n        .directive('msWidgetFront', msWidgetFrontDirective)\n        .directive('msWidgetBack', msWidgetBackDirective);\n\n    /** @ngInject */\n    function MsWidgetController($scope, $element)\n    {\n        var vm = this;\n\n        // Data\n        vm.flipped = false;\n\n        // Methods\n        vm.flip = flip;\n\n        //////////\n\n        /**\n         * Flip the widget\n         */\n        function flip()\n        {\n            if ( !isFlippable() )\n            {\n                return;\n            }\n\n            // Toggle flipped status\n            vm.flipped = !vm.flipped;\n\n            // Toggle the 'flipped' class\n            $element.toggleClass('flipped', vm.flipped);\n        }\n\n        /**\n         * Check if widget is flippable\n         *\n         * @returns {boolean}\n         */\n        function isFlippable()\n        {\n            return (angular.isDefined($scope.flippable) && $scope.flippable === true);\n        }\n    }\n\n    /** @ngInject */\n    function msWidgetDirective()\n    {\n        return {\n            restrict  : 'E',\n            scope     : {\n                flippable: '=?'\n            },\n            controller: 'MsWidgetController',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    //////////\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msWidgetFrontDirective()\n    {\n        return {\n            restrict  : 'E',\n            require   : '^msWidget',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget-front');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    // Methods\n                    scope.flipWidget = MsWidgetCtrl.flip;\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msWidgetBackDirective()\n    {\n        return {\n            restrict  : 'E',\n            require   : '^msWidget',\n            transclude: true,\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-widget-back');\n\n                return function postLink(scope, iElement, iAttrs, MsWidgetCtrl, transcludeFn)\n                {\n                    // Custom transclusion\n                    transcludeFn(function (clone)\n                    {\n                        iElement.empty();\n                        iElement.append(clone);\n                    });\n\n                    // Methods\n                    scope.flipWidget = MsWidgetCtrl.flip;\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsTimelineController', MsTimelineController)\n        .directive('msTimeline', msTimelineDirective)\n        .directive('msTimelineItem', msTimelineItemDirective);\n\n    /** @ngInject */\n    function MsTimelineController()\n    {\n        var vm = this;\n\n        // Data\n        vm.scrollEl = undefined;\n\n        // Methods\n        vm.setScrollEl = setScrollEl;\n        vm.getScrollEl = getScrollEl;\n\n        //////////\n\n        /**\n         * Set scroll element\n         *\n         * @param scrollEl\n         */\n        function setScrollEl(scrollEl)\n        {\n            vm.scrollEl = scrollEl;\n        }\n\n        /**\n         * Get scroll element\n         *\n         * @returns {undefined|*}\n         */\n        function getScrollEl()\n        {\n            return vm.scrollEl;\n        }\n    }\n\n    /** @ngInject */\n    function msTimelineDirective()\n    {\n        return {\n            scope     : {\n                msTimeline: '=?',\n                loadMore  : '&?msTimelineLoadMore'\n            },\n            controller: 'MsTimelineController',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-timeline');\n\n                return function postLink(scope, iElement, iAttrs, MsTimelineCtrl)\n                {\n                    // Create an element for triggering the load more action and append it\n                    var loadMoreEl = angular.element('<div class=\"ms-timeline-loader md-accent-bg md-whiteframe-4dp\"><span class=\"spinner animate-rotate\"></span></div>');\n                    iElement.append(loadMoreEl);\n\n                    // Default config\n                    var config = {\n                        scrollEl: '#content'\n                    };\n\n                    // Extend the configuration\n                    config = angular.extend(config, scope.msTimeline, {});\n                    \n                    // Grab the scrollable element and store it in the controller for general use\n                    var scrollEl = angular.element(config.scrollEl);\n                    MsTimelineCtrl.setScrollEl(scrollEl);\n\n                    // Threshold\n                    var threshold = 144;\n\n                    // Register onScroll event for the first time\n                    registerOnScroll();\n\n                    /**\n                     * onScroll Event\n                     */\n                    function onScroll()\n                    {\n                        if ( scrollEl.scrollTop() + scrollEl.height() + threshold > loadMoreEl.position().top )\n                        {\n                            // Show the loader\n                            loadMoreEl.addClass('show');\n\n                            // Unregister scroll event to prevent triggering the function over and over again\n                            unregisterOnScroll();\n\n                            // Trigger load more event\n                            scope.loadMore().then(\n                                // Success\n                                function ()\n                                {\n                                    // Hide the loader\n                                    loadMoreEl.removeClass('show');\n\n                                    // Register the onScroll event again\n                                    registerOnScroll();\n                                },\n\n                                // Error\n                                function ()\n                                {\n                                    // Remove the loader completely\n                                    loadMoreEl.remove();\n                                }\n                            );\n                        }\n                    }\n\n                    /**\n                     * onScroll event registerer\n                     */\n                    function registerOnScroll()\n                    {\n                        scrollEl.on('scroll', onScroll);\n                    }\n\n                    /**\n                     * onScroll event unregisterer\n                     */\n                    function unregisterOnScroll()\n                    {\n                        scrollEl.off('scroll', onScroll);\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        unregisterOnScroll();\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msTimelineItemDirective($timeout, $q)\n    {\n        return {\n            scope  : true,\n            require: '^msTimeline',\n            compile: function (tElement)\n            {\n                tElement.addClass('ms-timeline-item').addClass('hidden');\n\n                return function postLink(scope, iElement, iAttrs, MsTimelineCtrl)\n                {\n                    var threshold = 72,\n                        itemLoaded = false,\n                        itemInViewport = false,\n                        scrollEl = MsTimelineCtrl.getScrollEl();\n\n                    //////////\n\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Check if the timeline item has ms-card\n                        if ( iElement.find('ms-card') )\n                        {\n                            // If the ms-card template loaded...\n                            scope.$on('msCard::cardTemplateLoaded', function (event, args)\n                            {\n                                var cardEl = angular.element(args[0]);\n\n                                // Test the card to see if there is any image on it\n                                testForImage(cardEl).then(function ()\n                                {\n                                    $timeout(function ()\n                                    {\n                                        itemLoaded = true;\n                                    });\n                                });\n                            });\n                        }\n                        else\n                        {\n                            // Test the element to see if there is any image on it\n                            testForImage(iElement).then(function ()\n                            {\n                                $timeout(function ()\n                                {\n                                    itemLoaded = true;\n                                });\n                            });\n                        }\n\n                        // Check if the loaded element also in the viewport\n                        scrollEl.on('scroll', testForVisibility);\n\n                        // Test for visibility for the first time without waiting for the scroll event\n                        testForVisibility();\n                    }\n\n                    // Item ready watcher\n                    var itemReadyWatcher = scope.$watch(\n                        function ()\n                        {\n                            return itemLoaded && itemInViewport;\n                        },\n                        function (current, old)\n                        {\n                            if ( angular.equals(current, old) )\n                            {\n                                return;\n                            }\n\n                            if ( current )\n                            {\n                                iElement.removeClass('hidden').addClass('animate');\n\n                                // Unbind itemReadyWatcher\n                                itemReadyWatcher();\n                            }\n                        }, true);\n\n                    /**\n                     * Test the given element for image\n                     *\n                     * @param element\n                     * @returns promise\n                     */\n                    function testForImage(element)\n                    {\n                        var deferred = $q.defer(),\n                            imgEl = element.find('img');\n\n                        if ( imgEl.length > 0 )\n                        {\n                            imgEl.on('load', function ()\n                            {\n                                deferred.resolve('Image is loaded');\n                            });\n                        }\n                        else\n                        {\n                            deferred.resolve('No images');\n                        }\n\n                        return deferred.promise;\n                    }\n\n                    /**\n                     * Test the element for visibility\n                     */\n                    function testForVisibility()\n                    {\n                        if ( scrollEl.scrollTop() + scrollEl.height() > iElement.position().top + threshold )\n                        {\n                            $timeout(function ()\n                            {\n                                itemInViewport = true;\n                            });\n\n                            // Unbind the scroll event\n                            scrollEl.off('scroll', testForVisibility);\n                        }\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsStepperController', MsStepperController)\n        .directive('msHorizontalStepper', msHorizontalStepperDirective)\n        .directive('msHorizontalStepperStep', msHorizontalStepperStepDirective)\n        .directive('msVerticalStepper', msVerticalStepperDirective)\n        .directive('msVerticalStepperStep', msVerticalStepperStepDirective);\n\n    /** @ngInject */\n    function MsStepperController($timeout)\n    {\n        var vm = this;\n\n        // Data\n        vm.mainForm = undefined;\n\n        vm.orientation = 'horizontal';\n        vm.steps = [];\n        vm.currentStep = undefined;\n        vm.currentStepNumber = 1;\n\n        // Methods\n        vm.setOrientation = setOrientation;\n        vm.registerMainForm = registerMainForm;\n        vm.registerStep = registerStep;\n        vm.setupSteps = setupSteps;\n        vm.resetForm = resetForm;\n\n        vm.setCurrentStep = setCurrentStep;\n\n        vm.gotoStep = gotoStep;\n        vm.gotoPreviousStep = gotoPreviousStep;\n        vm.gotoNextStep = gotoNextStep;\n        vm.gotoFirstStep = gotoFirstStep;\n        vm.gotoLastStep = gotoLastStep;\n\n        vm.isFirstStep = isFirstStep;\n        vm.isLastStep = isLastStep;\n\n        vm.isStepCurrent = isStepCurrent;\n        vm.isStepDisabled = isStepDisabled;\n        vm.isStepOptional = isStepOptional;\n        vm.isStepHidden = isStepHidden;\n        vm.filterHiddenStep = filterHiddenStep;\n        vm.isStepValid = isStepValid;\n        vm.isStepNumberValid = isStepNumberValid;\n\n        vm.isFormValid = isFormValid;\n\n        //////////\n\n        /**\n         * Set the orientation of the stepper\n         *\n         * @param orientation\n         */\n        function setOrientation(orientation)\n        {\n            vm.orientation = orientation || 'horizontal';\n        }\n\n        /**\n         * Register the main form\n         *\n         * @param form\n         */\n        function registerMainForm(form)\n        {\n            vm.mainForm = form;\n        }\n\n        /**\n         * Register a step\n         *\n         * @param element\n         * @param scope\n         * @param form\n         */\n        function registerStep(element, scope, form)\n        {\n            var step = {\n                element           : element,\n                scope             : scope,\n                form              : form,\n                stepNumber        : scope.step || (vm.steps.length + 1),\n                stepTitle         : scope.stepTitle,\n                stepTitleTranslate: scope.stepTitleTranslate\n            };\n\n            // Push the step into steps array\n            vm.steps.push(step);\n\n            // Sort steps by stepNumber\n            vm.steps.sort(function (a, b)\n            {\n                return a.stepNumber - b.stepNumber;\n            });\n\n            return step;\n        }\n\n        /**\n         * Setup steps for the first time\n         */\n        function setupSteps()\n        {\n            vm.setCurrentStep(vm.currentStepNumber);\n        }\n\n        /**\n         * Reset steps and the main form\n         */\n        function resetForm()\n        {\n            // Timeout is required here because we need to\n            // let form model to reset before setting the\n            // statuses\n            $timeout(function ()\n            {\n                // Reset all the steps\n                for ( var x = 0; x < vm.steps.length; x++ )\n                {\n                    vm.steps[x].form.$setPristine();\n                    vm.steps[x].form.$setUntouched();\n                }\n\n                // Reset the main form\n                vm.mainForm.$setPristine();\n                vm.mainForm.$setUntouched();\n\n                // Go to first step\n                gotoFirstStep();\n            });\n        }\n\n        /**\n         * Set current step\n         *\n         * @param stepNumber\n         */\n        function setCurrentStep(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return;\n            }\n\n            // Update the current step number\n            vm.currentStepNumber = stepNumber;\n\n            if ( vm.orientation === 'horizontal' )\n            {\n                // Hide all steps\n                for ( var i = 0; i < vm.steps.length; i++ )\n                {\n                    vm.steps[i].element.hide();\n                }\n\n                // Show the current step\n                vm.steps[vm.currentStepNumber - 1].element.show();\n            }\n            else if ( vm.orientation === 'vertical' )\n            {\n                // Hide all step content\n                for ( var j = 0; j < vm.steps.length; j++ )\n                {\n                    vm.steps[j].element.find('.ms-stepper-step-content').hide();\n                }\n\n                // Show the current step content\n                vm.steps[vm.currentStepNumber - 1].element.find('.ms-stepper-step-content').show();\n            }\n        }\n\n        /**\n         * Go to a step\n         *\n         * @param stepNumber\n         */\n        function gotoStep(stepNumber)\n        {\n            // If the step we are about to go\n            // is hidden, bail...\n            if ( isStepHidden(stepNumber) )\n            {\n                return;\n            }\n\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the previous step\n         */\n        function gotoPreviousStep()\n        {\n            var stepNumber = vm.currentStepNumber - 1;\n\n            // Test the previous steps and make sure we\n            // will land to the one that is not hidden\n            for ( var s = stepNumber; s >= 1; s-- )\n            {\n                if ( !isStepHidden(s) )\n                {\n                    stepNumber = s;\n                    break;\n                }\n            }\n\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the next step\n         */\n        function gotoNextStep()\n        {\n            var stepNumber = vm.currentStepNumber + 1;\n\n            // Test the following steps and make sure we\n            // will land to the one that is not hidden\n            for ( var s = stepNumber; s <= vm.steps.length; s++ )\n            {\n                if ( !isStepHidden(s) )\n                {\n                    stepNumber = s;\n                    break;\n                }\n            }\n\n            vm.setCurrentStep(stepNumber);\n        }\n\n        /**\n         * Go to the first step\n         */\n        function gotoFirstStep()\n        {\n            vm.setCurrentStep(1);\n        }\n\n        /**\n         * Go to the last step\n         */\n        function gotoLastStep()\n        {\n            vm.setCurrentStep(vm.steps.length);\n        }\n\n        /**\n         * Check if the current step is the first step\n         *\n         * @returns {boolean}\n         */\n        function isFirstStep()\n        {\n            return vm.currentStepNumber === 1;\n        }\n\n        /**\n         * Check if the current step is the last step\n         *\n         * @returns {boolean}\n         */\n        function isLastStep()\n        {\n            return vm.currentStepNumber === vm.steps.length;\n        }\n\n        /**\n         * Check if the given step is the current one\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepCurrent(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return vm.currentStepNumber === stepNumber;\n        }\n\n        /**\n         * Check if the given step should be disabled\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepDisabled(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            var disabled = false;\n\n            for ( var i = 1; i < stepNumber; i++ )\n            {\n                if ( !isStepValid(i) )\n                {\n                    disabled = true;\n                    break;\n                }\n            }\n\n            return disabled;\n        }\n\n        /**\n         * Check if the given step is optional\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepOptional(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return vm.steps[stepNumber - 1].scope.optionalStep;\n        }\n\n        /**\n         * Check if the given step is hidden\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepHidden(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            return !!vm.steps[stepNumber - 1].scope.hideStep;\n        }\n\n        /**\n         * Check if the given step is hidden as a filter\n         *\n         * @param step\n         * @returns {boolean}\n         */\n        function filterHiddenStep(step)\n        {\n            return !isStepHidden(step.stepNumber);\n        }\n\n        /**\n         * Check if the given step is valid\n         *\n         * @param stepNumber\n         * @returns {null|boolean}\n         */\n        function isStepValid(stepNumber)\n        {\n            // If the stepNumber is not a valid step number, bail...\n            if ( !isStepNumberValid(stepNumber) )\n            {\n                return null;\n            }\n\n            // If the step is optional, always return true\n            if ( isStepOptional(stepNumber) )\n            {\n                return true;\n            }\n\n            return vm.steps[stepNumber - 1].form.$valid;\n        }\n\n        /**\n         * Check if the given step number is a valid step number\n         *\n         * @param stepNumber\n         * @returns {boolean}\n         */\n        function isStepNumberValid(stepNumber)\n        {\n            return !(angular.isUndefined(stepNumber) || stepNumber < 1 || stepNumber > vm.steps.length);\n        }\n\n        /**\n         * Check if the entire form is valid\n         *\n         * @returns {boolean}\n         */\n        function isFormValid()\n        {\n            return vm.mainForm.$valid;\n        }\n    }\n\n    /** @ngInject */\n    function msHorizontalStepperDirective()\n    {\n        return {\n            restrict        : 'A',\n            scope           : {},\n            require         : ['form', 'msHorizontalStepper'],\n            priority        : 1001,\n            controller      : 'MsStepperController as MsStepper',\n            bindToController: {\n                model: '=ngModel'\n            },\n            transclude      : true,\n            templateUrl     : 'app/core/directives/ms-stepper/templates/horizontal/horizontal.html',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-stepper');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Register the main form and setup\n                    // the steps for the first time\n                    MsStepperCtrl.setOrientation('horizontal');\n                    MsStepperCtrl.registerMainForm(FormCtrl);\n                    MsStepperCtrl.setupSteps();\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msHorizontalStepperStepDirective()\n    {\n        return {\n            restrict: 'E',\n            require : ['form', '^msHorizontalStepper'],\n            priority: 1000,\n            scope   : {\n                step              : '=?',\n                stepTitle         : '=?',\n                stepTitleTranslate: '=?',\n                optionalStep      : '=?',\n                hideStep          : '=?'\n            },\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-stepper-step');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Is it an optional step?\n                    scope.optionalStep = angular.isDefined(iAttrs.optionalStep);\n\n                    // Register the step\n                    MsStepperCtrl.registerStep(iElement, scope, FormCtrl);\n\n                    // Hide the step by default\n                    iElement.hide();\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msVerticalStepperDirective($timeout)\n    {\n        return {\n            restrict        : 'A',\n            scope           : {},\n            require         : ['form', 'msVerticalStepper'],\n            priority        : 1001,\n            controller      : 'MsStepperController as MsStepper',\n            bindToController: {\n                model: '=ngModel'\n            },\n            transclude      : true,\n            templateUrl     : 'app/core/directives/ms-stepper/templates/vertical/vertical.html',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-stepper');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Register the main form and setup\n                    // the steps for the first time\n\n                    // Timeout is required in vertical stepper\n                    // as we are using transclusion in steps.\n                    // We have to wait for them to be transcluded\n                    // and registered to the controller\n                    $timeout(function ()\n                    {\n                        MsStepperCtrl.setOrientation('vertical');\n                        MsStepperCtrl.registerMainForm(FormCtrl);\n                        MsStepperCtrl.setupSteps();\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msVerticalStepperStepDirective()\n    {\n        return {\n            restrict   : 'E',\n            require    : ['form', '^msVerticalStepper'],\n            priority   : 1000,\n            scope      : {\n                step              : '=?',\n                stepTitle         : '=?',\n                stepTitleTranslate: '=?',\n                optionalStep      : '=?',\n                hideStep          : '=?'\n            },\n            transclude : true,\n            templateUrl: 'app/core/directives/ms-stepper/templates/vertical/step/vertical-step.html',\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-stepper-step');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var FormCtrl = ctrls[0],\n                        MsStepperCtrl = ctrls[1];\n\n                    // Is it an optional step?\n                    scope.optionalStep = angular.isDefined(iAttrs.optionalStep);\n\n                    // Register the step\n                    scope.stepInfo = MsStepperCtrl.registerStep(iElement, scope, FormCtrl);\n\n                    // Expose the controller to the scope\n                    scope.MsStepper = MsStepperCtrl;\n\n                    // Hide the step content by default\n                    iElement.find('.ms-stepper-step-content').hide();\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSplashScreen', msSplashScreenDirective);\n\n    /** @ngInject */\n    function msSplashScreenDirective($animate)\n    {\n        return {\n            restrict: 'E',\n            link    : function (scope, iElement)\n            {\n                var splashScreenRemoveEvent = scope.$on('msSplashScreen::remove', function ()\n                {\n                    $animate.leave(iElement).then(function ()\n                    {\n                        // De-register scope event\n                        splashScreenRemoveEvent();\n\n                        // Null-ify everything else\n                        scope = iElement = null;\n                    });\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msSidenavHelper', msSidenavHelperDirective);\n\n    /** @ngInject */\n    function msSidenavHelperDirective()\n    {\n        return {\n            restrict: 'A',\n            require : '^mdSidenav',\n            link    : function (scope, iElement, iAttrs, MdSidenavCtrl)\n            {\n                // Watch md-sidenav open & locked open statuses\n                // and add class to the \".page-layout\" if only\n                // the sidenav open and NOT locked open\n                scope.$watch(function ()\n                {\n                    return MdSidenavCtrl.isOpen() && !MdSidenavCtrl.isLockedOpen();\n                }, function (current)\n                {\n                    if ( angular.isUndefined(current) )\n                    {\n                        return;\n                    }\n\n                    iElement.parent().toggleClass('full-height', current);\n                    angular.element('html').toggleClass('sidenav-open', current);\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsShortcutsController', MsShortcutsController)\n        .directive('msShortcuts', msShortcutsDirective);\n\n    /** @ngInject */\n    function MsShortcutsController($scope, $cookies, $document, $timeout, $q, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.query = '';\n        vm.queryOptions = {\n            debounce: 300\n        };\n        vm.resultsLoading = false;\n        vm.selectedResultIndex = 0;\n        vm.ignoreMouseEvents = false;\n        vm.mobileBarActive = false;\n\n        vm.results = null;\n        vm.shortcuts = [];\n\n        vm.sortableOptions = {\n            ghostClass   : 'ghost',\n            forceFallback: true,\n            fallbackClass: 'dragging',\n            onSort       : function ()\n            {\n                vm.saveShortcuts();\n            }\n        };\n\n        // Methods\n        vm.populateResults = populateResults;\n        vm.loadShortcuts = loadShortcuts;\n        vm.saveShortcuts = saveShortcuts;\n        vm.addShortcut = addShortcut;\n        vm.removeShortcut = removeShortcut;\n        vm.handleResultClick = handleResultClick;\n\n        vm.absorbEvent = absorbEvent;\n        vm.handleKeydown = handleKeydown;\n        vm.handleMouseenter = handleMouseenter;\n        vm.temporarilyIgnoreMouseEvents = temporarilyIgnoreMouseEvents;\n        vm.ensureSelectedResultIsVisible = ensureSelectedResultIsVisible;\n        vm.toggleMobileBar = toggleMobileBar;\n\n        //////////\n\n        init();\n\n        function init()\n        {\n            // Load the shortcuts\n            vm.loadShortcuts().then(\n                // Success\n                function (response)\n                {\n                    vm.shortcuts = response;\n\n                    // Add shortcuts as results by default\n                    if ( vm.shortcuts.length > 0 )\n                    {\n                        vm.results = response;\n                    }\n                }\n            );\n\n            // Watch the model changes to trigger the search\n            $scope.$watch('MsShortcuts.query', function (current, old)\n            {\n                if ( angular.isUndefined(current) )\n                {\n                    return;\n                }\n\n                if ( angular.equals(current, old) )\n                {\n                    return;\n                }\n\n                // Show the loader\n                vm.resultsLoading = true;\n\n                // Populate the results\n                vm.populateResults().then(\n                    // Success\n                    function (response)\n                    {\n                        vm.results = response;\n                    },\n                    // Error\n                    function ()\n                    {\n                        vm.results = [];\n                    }\n                ).finally(\n                    function ()\n                    {\n                        // Hide the loader\n                        vm.resultsLoading = false;\n                    }\n                );\n            });\n        }\n\n        /**\n         * Populate the results\n         */\n        function populateResults()\n        {\n            var results = [],\n                flatNavigation = msNavigationService.getFlatNavigation(),\n                deferred = $q.defer();\n\n            // Iterate through the navigation array and\n            // make sure it doesn't have any groups or\n            // none ui-sref items\n            for ( var x = 0; x < flatNavigation.length; x++ )\n            {\n                if ( flatNavigation[x].uisref )\n                {\n                    results.push(flatNavigation[x]);\n                }\n            }\n\n            // If there is a query, filter the results\n            if ( vm.query )\n            {\n                results = results.filter(function (item)\n                {\n                    if ( angular.lowercase(item.title).search(angular.lowercase(vm.query)) > -1 )\n                    {\n                        return true;\n                    }\n                });\n\n                // Iterate through one last time and\n                // add required properties to items\n                for ( var i = 0; i < results.length; i++ )\n                {\n                    // Add false to hasShortcut by default\n                    results[i].hasShortcut = false;\n\n                    // Test if the item is in the shortcuts list\n                    for ( var y = 0; y < vm.shortcuts.length; y++ )\n                    {\n                        if ( vm.shortcuts[y]._id === results[i]._id )\n                        {\n                            results[i].hasShortcut = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                // If the query is empty, that means\n                // there is nothing to search for so\n                // we will populate the results with\n                // current shortcuts if there is any\n                if ( vm.shortcuts.length > 0 )\n                {\n                    results = vm.shortcuts;\n                }\n            }\n\n            // Reset the selected result\n            vm.selectedResultIndex = 0;\n\n            // Fake the service delay\n            $timeout(function ()\n            {\n                // Resolve the promise\n                deferred.resolve(results);\n            }, 250);\n\n            // Return a promise\n            return deferred.promise;\n        }\n\n        /**\n         * Load shortcuts\n         */\n        function loadShortcuts()\n        {\n            var deferred = $q.defer();\n\n            // For the demo purposes, we will\n            // load the shortcuts from the cookies.\n            // But here you can make an API call\n            // to load them from the DB.\n            var shortcuts = angular.fromJson($cookies.get('FUSE.shortcuts'));\n\n            // No cookie available. Generate one\n            // for the demo purposes...\n            if ( angular.isUndefined(shortcuts) )\n            {\n                shortcuts = [\n                    {\n                        'title'      : 'Sample',\n                        'icon'       : 'icon-tile-four',\n                        'state'      : 'app.sample',\n                        'weight'     : 1,\n                        'children'   : [],\n                        '_id'        : 'sample',\n                        '_path'      : 'apps.sample',\n                        'uisref'     : 'app.sample',\n                        'hasShortcut': true\n                    }\n                ];\n\n                $cookies.put('FUSE.shortcuts', angular.toJson(shortcuts));\n            }\n\n            // Resolve the promise\n            deferred.resolve(shortcuts);\n\n            return deferred.promise;\n        }\n\n        /**\n         * Save the shortcuts\n         */\n        function saveShortcuts()\n        {\n            var deferred = $q.defer();\n\n            // For the demo purposes, we will\n            // keep the shortcuts in the cookies.\n            // But here you can make an API call\n            // to save them to the DB.\n            $cookies.put('FUSE.shortcuts', angular.toJson(vm.shortcuts));\n\n            // Fake the service delay\n            $timeout(function ()\n            {\n                deferred.resolve({'success': true});\n            }, 250);\n\n            return deferred.promise;\n        }\n\n        /**\n         * Add item as shortcut\n         *\n         * @param item\n         */\n        function addShortcut(item)\n        {\n            // Update the hasShortcut status\n            item.hasShortcut = true;\n\n            // Add as a shortcut\n            vm.shortcuts.push(item);\n\n            // Save the shortcuts\n            vm.saveShortcuts();\n        }\n\n        /**\n         * Remove item from shortcuts\n         *\n         * @param item\n         */\n        function removeShortcut(item)\n        {\n            // Update the hasShortcut status\n            item.hasShortcut = false;\n\n            // Remove the shortcut\n            for ( var x = 0; x < vm.shortcuts.length; x++ )\n            {\n                if ( vm.shortcuts[x]._id === item._id )\n                {\n                    // Remove the x-th item from the array\n                    vm.shortcuts.splice(x, 1);\n\n                    // If we aren't searching for anything...\n                    if ( !vm.query )\n                    {\n                        // If all the shortcuts have been removed,\n                        // null-ify the results\n                        if ( vm.shortcuts.length === 0 )\n                        {\n                            vm.results = null;\n                        }\n                        // Otherwise update the selected index\n                        else\n                        {\n                            if ( x >= vm.shortcuts.length )\n                            {\n                                vm.selectedResultIndex = vm.shortcuts.length - 1;\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Save the shortcuts\n            vm.saveShortcuts();\n        }\n\n        /**\n         * Handle the result click\n         *\n         * @param item\n         */\n        function handleResultClick(item)\n        {\n            // Add or remove the shortcut\n            if ( item.hasShortcut )\n            {\n                vm.removeShortcut(item);\n            }\n            else\n            {\n                vm.addShortcut(item);\n            }\n        }\n\n        /**\n         * Absorb the given event\n         *\n         * @param event\n         */\n        function absorbEvent(event)\n        {\n            event.preventDefault();\n        }\n\n        /**\n         * Handle keydown\n         *\n         * @param event\n         */\n        function handleKeydown(event)\n        {\n            var keyCode = event.keyCode,\n                keys = [38, 40];\n\n            // Prevent the default action if\n            // one of the keys are pressed that\n            // we are listening\n            if ( keys.indexOf(keyCode) > -1 )\n            {\n                event.preventDefault();\n            }\n\n            switch ( keyCode )\n            {\n                // Enter\n                case 13:\n\n                    // Trigger result click\n                    vm.handleResultClick(vm.results[vm.selectedResultIndex]);\n\n                    break;\n\n                // Up Arrow\n                case 38:\n\n                    // Decrease the selected result index\n                    if ( vm.selectedResultIndex - 1 >= 0 )\n                    {\n                        // Decrease the selected index\n                        vm.selectedResultIndex--;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                // Down Arrow\n                case 40:\n\n                    // Increase the selected result index\n                    if ( vm.selectedResultIndex + 1 < vm.results.length )\n                    {\n                        // Increase the selected index\n                        vm.selectedResultIndex++;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        /**\n         * Handle mouseenter\n         *\n         * @param index\n         */\n        function handleMouseenter(index)\n        {\n            if ( vm.ignoreMouseEvents )\n            {\n                return;\n            }\n\n            // Update the selected result index\n            // with the given index\n            vm.selectedResultIndex = index;\n        }\n\n        /**\n         * Set a variable for a limited time\n         * to make other functions to ignore\n         * the mouse events\n         */\n        function temporarilyIgnoreMouseEvents()\n        {\n            // Set the variable\n            vm.ignoreMouseEvents = true;\n\n            // Cancel the previous timeout\n            $timeout.cancel(vm.mouseEventIgnoreTimeout);\n\n            // Set the timeout\n            vm.mouseEventIgnoreTimeout = $timeout(function ()\n            {\n                vm.ignoreMouseEvents = false;\n            }, 250);\n        }\n\n        /**\n         * Ensure the selected result will\n         * always be visible on the results\n         * area\n         */\n        function ensureSelectedResultIsVisible()\n        {\n            var resultsEl = $document.find('#ms-shortcut-add-menu').find('.results'),\n                selectedItemEl = angular.element(resultsEl.find('.result')[vm.selectedResultIndex]);\n\n            if ( resultsEl && selectedItemEl )\n            {\n                var top = selectedItemEl.position().top - 8,\n                    bottom = selectedItemEl.position().top + selectedItemEl.outerHeight() + 8;\n\n                // Start ignoring mouse events\n                vm.temporarilyIgnoreMouseEvents();\n\n                if ( resultsEl.scrollTop() > top )\n                {\n                    resultsEl.scrollTop(top);\n                }\n\n                if ( bottom > (resultsEl.height() + resultsEl.scrollTop()) )\n                {\n                    resultsEl.scrollTop(bottom - resultsEl.height());\n                }\n            }\n        }\n\n        /**\n         * Toggle mobile bar\n         */\n        function toggleMobileBar()\n        {\n            vm.mobileBarActive = !vm.mobileBarActive;\n        }\n    }\n\n    /** @ngInject */\n    function msShortcutsDirective()\n    {\n        return {\n            restrict        : 'E',\n            scope           : {},\n            require         : 'msShortcuts',\n            controller      : 'MsShortcutsController as MsShortcuts',\n            bindToController: {},\n            templateUrl     : 'app/core/directives/ms-shortcuts/ms-shortcuts.html',\n            compile         : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-shortcuts');\n\n                return function postLink(scope, iElement)\n                {\n                    // Data\n\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsSearchBarController', MsSearchBarController)\n        .directive('msSearchBar', msSearchBarDirective);\n\n    /** @ngInject */\n    function MsSearchBarController($scope, $element, $timeout)\n    {\n        var vm = this;\n\n        // Data\n        vm.collapsed = true;\n        vm.query = '';\n        vm.queryOptions = {\n            debounce: vm.debounce || 0\n        };\n        vm.resultsLoading = false;\n        vm.results = null;\n        vm.selectedResultIndex = 0;\n        vm.ignoreMouseEvents = false;\n\n        // Methods\n        vm.populateResults = populateResults;\n\n        vm.expand = expand;\n        vm.collapse = collapse;\n\n        vm.absorbEvent = absorbEvent;\n        vm.handleKeydown = handleKeydown;\n        vm.handleMouseenter = handleMouseenter;\n        vm.temporarilyIgnoreMouseEvents = temporarilyIgnoreMouseEvents;\n        vm.handleResultClick = handleResultClick;\n        vm.ensureSelectedResultIsVisible = ensureSelectedResultIsVisible;\n\n        //////////\n\n        init();\n\n        function init()\n        {\n            // Watch the model changes to trigger the search\n            $scope.$watch('MsSearchBar.query', function (current, old)\n            {\n                if ( angular.isUndefined(current) )\n                {\n                    return;\n                }\n\n                if ( angular.equals(current, old) )\n                {\n                    return;\n                }\n\n                if ( vm.collapsed )\n                {\n                    return;\n                }\n\n                // Evaluate the onSearch function to access the\n                // function itself\n                var onSearchEvaluated = $scope.$parent.$eval(vm.onSearch, {query: current}),\n                    isArray = angular.isArray(onSearchEvaluated),\n                    isPromise = (onSearchEvaluated && !!onSearchEvaluated.then);\n\n                if ( isArray )\n                {\n                    // Populate the results\n                    vm.populateResults(onSearchEvaluated);\n                }\n\n                if ( isPromise )\n                {\n                    // Show the loader\n                    vm.resultsLoading = true;\n\n                    onSearchEvaluated.then(\n                        // Success\n                        function (response)\n                        {\n                            // Populate the results\n                            vm.populateResults(response);\n                        },\n                        // Error\n                        function ()\n                        {\n                            // Assign an empty array to show\n                            // the no-results screen\n                            vm.populateResults([]);\n                        }\n                    ).finally(function ()\n                        {\n                            // Hide the loader\n                            vm.resultsLoading = false;\n                        }\n                    );\n                }\n            });\n        }\n\n        /**\n         * Populate the results\n         *\n         * @param results\n         */\n        function populateResults(results)\n        {\n            // Before doing anything,\n            // make sure the search bar is expanded\n            if ( vm.collapsed )\n            {\n                return;\n            }\n\n            var isArray = angular.isArray(results),\n                isNull = results === null;\n\n            // Only accept arrays and null values\n            if ( !isArray && !isNull )\n            {\n                return;\n            }\n\n            // Reset the selected result\n            vm.selectedResultIndex = 0;\n\n            // Populate the results\n            vm.results = results;\n        }\n\n        /**\n         * Expand\n         */\n        function expand()\n        {\n            // Set collapsed status\n            vm.collapsed = false;\n\n            // Call expand on scope\n            $scope.expand();\n\n            // Callback\n            if ( vm.onExpand && angular.isFunction(vm.onExpand) )\n            {\n                vm.onExpand();\n            }\n        }\n\n        /**\n         * Collapse\n         */\n        function collapse()\n        {\n            // Empty the query\n            vm.query = '';\n\n            // Empty results to hide the results view\n            vm.populateResults(null);\n\n            // Set collapsed status\n            vm.collapsed = true;\n\n            // Call collapse on scope\n            $scope.collapse();\n\n            // Callback\n            if ( vm.onCollapse && angular.isFunction(vm.onCollapse) )\n            {\n                vm.onCollapse();\n            }\n        }\n\n        /**\n         * Absorb the given event\n         *\n         * @param event\n         */\n        function absorbEvent(event)\n        {\n            event.preventDefault();\n        }\n\n        /**\n         * Handle keydown\n         *\n         * @param event\n         */\n        function handleKeydown(event)\n        {\n            var keyCode = event.keyCode,\n                keys = [27, 38, 40];\n\n            // Prevent the default action if\n            // one of the keys are pressed that\n            // we are listening\n            if ( keys.indexOf(keyCode) > -1 )\n            {\n                event.preventDefault();\n            }\n\n            switch ( keyCode )\n            {\n                // Enter\n                case 13:\n\n                    // Trigger result click\n                    vm.handleResultClick(vm.results[vm.selectedResultIndex]);\n\n                    break;\n\n                // Escape\n                case 27:\n\n                    // Collapse the search bar\n                    vm.collapse();\n\n                    break;\n\n                // Up Arrow\n                case 38:\n\n                    // Decrease the selected result index\n                    if ( vm.selectedResultIndex - 1 >= 0 )\n                    {\n                        // Decrease the selected index\n                        vm.selectedResultIndex--;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                // Down Arrow\n                case 40:\n\n                    if ( !vm.results )\n                    {\n                        return;\n                    }\n\n                    // Increase the selected result index\n                    if ( vm.selectedResultIndex + 1 < vm.results.length )\n                    {\n                        // Increase the selected index\n                        vm.selectedResultIndex++;\n\n                        // Make sure the selected result is in the view\n                        vm.ensureSelectedResultIsVisible();\n                    }\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        /**\n         * Handle mouseenter\n         *\n         * @param index\n         */\n        function handleMouseenter(index)\n        {\n            if ( vm.ignoreMouseEvents )\n            {\n                return;\n            }\n\n            // Update the selected result index\n            // with the given index\n            vm.selectedResultIndex = index;\n        }\n\n        /**\n         * Set a variable for a limited time\n         * to make other functions to ignore\n         * the mouse events\n         */\n        function temporarilyIgnoreMouseEvents()\n        {\n            // Set the variable\n            vm.ignoreMouseEvents = true;\n\n            // Cancel the previous timeout\n            $timeout.cancel(vm.mouseEventIgnoreTimeout);\n\n            // Set the timeout\n            vm.mouseEventIgnoreTimeout = $timeout(function ()\n            {\n                vm.ignoreMouseEvents = false;\n            }, 250);\n        }\n\n        /**\n         * Handle the result click\n         *\n         * @param item\n         */\n        function handleResultClick(item)\n        {\n            if ( vm.onResultClick )\n            {\n                vm.onResultClick({item: item});\n            }\n\n            // Collapse the search bar\n            vm.collapse();\n        }\n\n        /**\n         * Ensure the selected result will\n         * always be visible on the results\n         * area\n         */\n        function ensureSelectedResultIsVisible()\n        {\n            var resultsEl = $element.find('.ms-search-bar-results'),\n                selectedItemEl = angular.element(resultsEl.find('.result')[vm.selectedResultIndex]);\n\n            if ( resultsEl && selectedItemEl )\n            {\n                var top = selectedItemEl.position().top - 8,\n                    bottom = selectedItemEl.position().top + selectedItemEl.outerHeight() + 8;\n\n                // Start ignoring mouse events\n                vm.temporarilyIgnoreMouseEvents();\n\n                if ( resultsEl.scrollTop() > top )\n                {\n                    resultsEl.scrollTop(top);\n                }\n\n                if ( bottom > (resultsEl.height() + resultsEl.scrollTop()) )\n                {\n                    resultsEl.scrollTop(bottom - resultsEl.height());\n                }\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msSearchBarDirective($document)\n    {\n        return {\n            restrict        : 'E',\n            scope           : {},\n            require         : 'msSearchBar',\n            controller      : 'MsSearchBarController as MsSearchBar',\n            bindToController: {\n                debounce     : '=?',\n                onSearch     : '@',\n                onResultClick: '&?',\n                onExpand     : '&?',\n                onCollapse   : '&?'\n            },\n            templateUrl     : 'app/core/directives/ms-search-bar/ms-search-bar.html',\n            compile         : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-search-bar');\n\n                return function postLink(scope, iElement)\n                {\n                    // Data\n                    var inputEl,\n                        bodyEl = $document.find('body');\n\n                    // Methods\n                    scope.collapse = collapse;\n                    scope.expand = expand;\n\n                    //////////\n\n                    // Initialize\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Grab the input element\n                        inputEl = iElement.find('#ms-search-bar-input');\n                    }\n\n                    /**\n                     * Expand action\n                     */\n                    function expand()\n                    {\n                        // Add expanded class\n                        iElement.addClass('expanded');\n\n                        // Add helper class to the body\n                        bodyEl.addClass('ms-search-bar-expanded');\n\n                        // Focus on the input\n                        inputEl.focus();\n                    }\n\n                    /**\n                     * Collapse action\n                     */\n                    function collapse()\n                    {\n                        // Remove expanded class\n                        iElement.removeClass('expanded');\n\n                        // Remove helper class from the body\n                        bodyEl.removeClass('ms-search-bar-expanded');\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msScrollConfig', msScrollConfigProvider)\n        .directive('msScroll', msScrollDirective);\n\n    /** @ngInject */\n    function msScrollConfigProvider()\n    {\n        // Default configuration\n        var defaultConfiguration = {\n            wheelSpeed            : 1,\n            wheelPropagation      : false,\n            swipePropagation      : true,\n            minScrollbarLength    : null,\n            maxScrollbarLength    : null,\n            useBothWheelAxes      : false,\n            useKeyboard           : true,\n            suppressScrollX       : false,\n            suppressScrollY       : false,\n            scrollXMarginOffset   : 0,\n            scrollYMarginOffset   : 0,\n            stopPropagationOnClick: true\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            defaultConfiguration = angular.extend({}, defaultConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getConfig: getConfig\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Return the config\n             */\n            function getConfig()\n            {\n                return defaultConfiguration;\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msScrollDirective($timeout, msScrollConfig, msUtils, fuseConfig)\n    {\n        return {\n            restrict: 'AE',\n            compile : function (tElement)\n            {\n                // Do not replace scrollbars if\n                // 'disableCustomScrollbars' config enabled\n                if ( fuseConfig.getConfig('disableCustomScrollbars') )\n                {\n                    return;\n                }\n\n                // Do not replace scrollbars on mobile devices\n                // if 'disableCustomScrollbarsOnMobile' config enabled\n                if ( fuseConfig.getConfig('disableCustomScrollbarsOnMobile') && msUtils.isMobile() )\n                {\n                    return;\n                }\n\n                // Add class\n                tElement.addClass('ms-scroll');\n\n                return function postLink(scope, iElement, iAttrs)\n                {\n                    var options = {};\n\n                    // If options supplied, evaluate the given\n                    // value. This is because we don't want to\n                    // have an isolated scope but still be able\n                    // to use scope variables.\n                    // We don't want an isolated scope because\n                    // we should be able to use this everywhere\n                    // especially with other directives\n                    if ( iAttrs.msScroll )\n                    {\n                        options = scope.$eval(iAttrs.msScroll);\n                    }\n\n                    // Extend the given config with the ones from provider\n                    options = angular.extend({}, msScrollConfig.getConfig(), options);\n\n                    // Initialize the scrollbar\n                    $timeout(function ()\n                    {\n                        PerfectScrollbar.initialize(iElement[0], options);\n                    }, 0);\n\n                    // Update the scrollbar on element mouseenter\n                    iElement.on('mouseenter', updateScrollbar);\n\n                    // Watch scrollHeight and update\n                    // the scrollbar if it changes\n                    scope.$watch(function ()\n                    {\n                        return iElement.prop('scrollHeight');\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        updateScrollbar();\n                    });\n\n                    // Watch scrollWidth and update\n                    // the scrollbar if it changes\n                    scope.$watch(function ()\n                    {\n                        return iElement.prop('scrollWidth');\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        updateScrollbar();\n                    });\n\n                    /**\n                     * Update the scrollbar\n                     */\n                    function updateScrollbar()\n                    {\n                        PerfectScrollbar.update(iElement[0]);\n                    }\n\n                    // Cleanup on destroy\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('mouseenter');\n                        PerfectScrollbar.destroy(iElement[0]);\n                    });\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msResponsiveTable', msResponsiveTableDirective);\n\n    /** @ngInject */\n    function msResponsiveTableDirective()\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, iElement)\n            {\n                // Wrap the table\n                var wrapper = angular.element('<div class=\"ms-responsive-table-wrapper\"></div>');\n                iElement.after(wrapper);\n                wrapper.append(iElement);\n\n                //////////\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msRandomClass', msRandomClassDirective);\n\n    /** @ngInject */\n    function msRandomClassDirective()\n    {\n        return {\n            restrict: 'A',\n            scope   : {\n                msRandomClass: '='\n            },\n            link    : function (scope, iElement)\n            {\n                var randomClass = scope.msRandomClass[Math.floor(Math.random() * (scope.msRandomClass.length))];\n                iElement.addClass(randomClass);\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msNavigationService', msNavigationServiceProvider)\n        .controller('MsNavigationController', MsNavigationController)\n        // Vertical\n        .directive('msNavigation', msNavigationDirective)\n        .controller('MsNavigationNodeController', MsNavigationNodeController)\n        .directive('msNavigationNode', msNavigationNodeDirective)\n        .directive('msNavigationItem', msNavigationItemDirective)\n        //Horizontal\n        .directive('msNavigationHorizontal', msNavigationHorizontalDirective)\n        .controller('MsNavigationHorizontalNodeController', MsNavigationHorizontalNodeController)\n        .directive('msNavigationHorizontalNode', msNavigationHorizontalNodeDirective)\n        .directive('msNavigationHorizontalItem', msNavigationHorizontalItemDirective);\n\n    /** @ngInject */\n    function msNavigationServiceProvider()\n    {\n        // Inject $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        // Navigation array\n        var navigation = [];\n\n        var service = this;\n\n        // Methods\n        service.saveItem = saveItem;\n        service.deleteItem = deleteItem;\n        service.sortByWeight = sortByWeight;\n\n        //////////\n\n        /**\n         * Create or update the navigation item\n         *\n         * @param path\n         * @param item\n         */\n        function saveItem(path, item)\n        {\n            if ( !angular.isString(path) )\n            {\n                $log.error('path must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            var parts = path.split('.');\n\n            // Generate the object id from the parts\n            var id = parts[parts.length - 1];\n\n            // Get the parent item from the parts\n            var parent = _findOrCreateParent(parts);\n\n            // Decide if we are going to update or create\n            var updateItem = false;\n\n            for ( var i = 0; i < parent.length; i++ )\n            {\n                if ( parent[i]._id === id )\n                {\n                    updateItem = parent[i];\n\n                    break;\n                }\n            }\n\n            // Update\n            if ( updateItem )\n            {\n                angular.extend(updateItem, item);\n\n                // Add proper ui-sref\n                updateItem.uisref = _getUiSref(updateItem);\n            }\n            // Create\n            else\n            {\n                // Create an empty children array in the item\n                item.children = [];\n\n                // Add the default weight if not provided or if it's not a number\n                if ( angular.isUndefined(item.weight) || !angular.isNumber(item.weight) )\n                {\n                    item.weight = 1;\n                }\n\n                // Add the item id\n                item._id = id;\n\n                // Add the item path\n                item._path = path;\n\n                // Add proper ui-sref\n                item.uisref = _getUiSref(item);\n\n                // Push the item into the array\n                parent.push(item);\n            }\n        }\n\n        /**\n         * Delete navigation item\n         *\n         * @param path\n         */\n        function deleteItem(path)\n        {\n            if ( !angular.isString(path) )\n            {\n                $log.error('path must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            // Locate the item by using given path\n            var item = navigation,\n                parts = path.split('.');\n\n            for ( var p = 0; p < parts.length; p++ )\n            {\n                var id = parts[p];\n\n                for ( var i = 0; i < item.length; i++ )\n                {\n                    if ( item[i]._id === id )\n                    {\n                        // If we have a matching path,\n                        // we have found our object:\n                        // remove it.\n                        if ( item[i]._path === path )\n                        {\n                            item.splice(i, 1);\n                            return true;\n                        }\n\n                        // Otherwise grab the children of\n                        // the current item and continue\n                        item = item[i].children;\n                        break;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Sort the navigation items by their weights\n         *\n         * @param parent\n         */\n        function sortByWeight(parent)\n        {\n            // If parent not provided, sort the root items\n            if ( !parent )\n            {\n                parent = navigation;\n                parent.sort(_byWeight);\n            }\n\n            // Sort the children\n            for ( var i = 0; i < parent.length; i++ )\n            {\n                var children = parent[i].children;\n\n                if ( children.length > 1 )\n                {\n                    children.sort(_byWeight);\n                }\n\n                if ( children.length > 0 )\n                {\n                    sortByWeight(children);\n                }\n            }\n        }\n\n        /* ----------------- */\n        /* Private Functions */\n        /* ----------------- */\n\n        /**\n         * Find or create parent\n         *\n         * @param parts\n         * @returns {Array|Boolean}\n         * @private\n         */\n        function _findOrCreateParent(parts)\n        {\n            // Store the main navigation\n            var parent = navigation;\n\n            // If it's going to be a root item\n            // return the navigation itself\n            if ( parts.length === 1 )\n            {\n                return parent;\n            }\n\n            // Remove the last element from the parts as\n            // we don't need that to figure out the parent\n            parts.pop();\n\n            // Find and return the parent\n            for ( var i = 0; i < parts.length; i++ )\n            {\n                var _id = parts[i],\n                    createParent = true;\n\n                for ( var p = 0; p < parent.length; p++ )\n                {\n                    if ( parent[p]._id === _id )\n                    {\n                        parent = parent[p].children;\n                        createParent = false;\n\n                        break;\n                    }\n                }\n\n                // If there is no parent found, create one, push\n                // it into the current parent and assign it as a\n                // new parent\n                if ( createParent )\n                {\n                    var item = {\n                        _id     : _id,\n                        _path   : parts.join('.'),\n                        title   : _id,\n                        weight  : 1,\n                        children: []\n                    };\n\n                    parent.push(item);\n                    parent = item.children;\n                }\n            }\n\n            return parent;\n        }\n\n        /**\n         * Sort by weight\n         *\n         * @param x\n         * @param y\n         * @returns {number}\n         * @private\n         */\n        function _byWeight(x, y)\n        {\n            return parseInt(x.weight) - parseInt(y.weight);\n        }\n\n        /**\n         * Setup the ui-sref using state & state parameters\n         *\n         * @param item\n         * @returns {string}\n         * @private\n         */\n        function _getUiSref(item)\n        {\n            var uisref = '';\n\n            if ( angular.isDefined(item.state) )\n            {\n                uisref = item.state;\n\n                if ( angular.isDefined(item.stateParams) && angular.isObject(item.stateParams) )\n                {\n                    uisref = uisref + '(' + angular.toJson(item.stateParams) + ')';\n                }\n            }\n\n            return uisref;\n        }\n\n        /* ----------------- */\n        /* Service           */\n        /* ----------------- */\n\n        this.$get = function ()\n        {\n            var activeItem = null,\n                navigationScope = null,\n                folded = null,\n                foldedOpen = null;\n\n            var service = {\n                saveItem          : saveItem,\n                deleteItem        : deleteItem,\n                sort              : sortByWeight,\n                clearNavigation   : clearNavigation,\n                setActiveItem     : setActiveItem,\n                getActiveItem     : getActiveItem,\n                getNavigation     : getNavigation,\n                getFlatNavigation : getFlatNavigation,\n                setNavigationScope: setNavigationScope,\n                setFolded         : setFolded,\n                getFolded         : getFolded,\n                setFoldedOpen     : setFoldedOpen,\n                getFoldedOpen     : getFoldedOpen,\n                toggleFolded      : toggleFolded\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Clear the entire navigation\n             */\n            function clearNavigation()\n            {\n                // Clear the navigation array\n                navigation = [];\n\n                // Clear the vm.navigation from main controller\n                if ( navigationScope )\n                {\n                    navigationScope.vm.navigation = navigation;\n                }\n            }\n\n            /**\n             * Set active item\n             *\n             * @param node\n             * @param scope\n             */\n            function setActiveItem(node, scope)\n            {\n                activeItem = {\n                    node : node,\n                    scope: scope\n                };\n            }\n\n            /**\n             * Return active item\n             */\n            function getActiveItem()\n            {\n                return activeItem;\n            }\n\n            /**\n             * Return navigation array\n             *\n             * @param root\n             * @returns Array\n             */\n            function getNavigation(root)\n            {\n                if ( root )\n                {\n                    for ( var i = 0; i < navigation.length; i++ )\n                    {\n                        if ( navigation[i]._id === root )\n                        {\n                            return [navigation[i]];\n                        }\n                    }\n\n                    return null;\n                }\n\n                return navigation;\n            }\n\n            /**\n             * Return flat navigation array\n             *\n             * @param root\n             * @returns Array\n             */\n            function getFlatNavigation(root)\n            {\n                // Get the correct navigation array\n                var navigation = getNavigation(root);\n\n                // Flatten the navigation object\n                return _flattenNavigation(navigation);\n            }\n\n            /**\n             * Store navigation's scope for later use\n             *\n             * @param scope\n             */\n            function setNavigationScope(scope)\n            {\n                navigationScope = scope;\n            }\n\n            /**\n             * Set folded status\n             *\n             * @param status\n             */\n            function setFolded(status)\n            {\n                folded = status;\n            }\n\n            /**\n             * Return folded status\n             *\n             * @returns {*}\n             */\n            function getFolded()\n            {\n                return folded;\n            }\n\n            /**\n             * Set folded open status\n             *\n             * @param status\n             */\n            function setFoldedOpen(status)\n            {\n                foldedOpen = status;\n            }\n\n            /**\n             * Return folded open status\n             *\n             * @returns {*}\n             */\n            function getFoldedOpen()\n            {\n                return foldedOpen;\n            }\n\n\n            /**\n             * Toggle fold on stored navigation's scope\n             */\n            function toggleFolded()\n            {\n                navigationScope.toggleFolded();\n            }\n\n            /**\n             * Flatten the given navigation\n             *\n             * @param navigation\n             * @private\n             */\n            function _flattenNavigation(navigation)\n            {\n                var flatNav = [];\n\n                for ( var x = 0; x < navigation.length; x++ )\n                {\n                    // Copy and clear the children of the\n                    // navigation that we want to push\n                    var navToPush = angular.copy(navigation[x]);\n                    navToPush.children = [];\n\n                    // Push the item\n                    flatNav.push(navToPush);\n\n                    // If there are child items in this navigation,\n                    // do some nested function magic\n                    if ( navigation[x].children.length > 0 )\n                    {\n                        flatNav = flatNav.concat(_flattenNavigation(navigation[x].children));\n                    }\n                }\n\n                return flatNav;\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationController($scope, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        if ( $scope.root )\n        {\n            vm.navigation = msNavigationService.getNavigation($scope.root);\n        }\n        else\n        {\n            vm.navigation = msNavigationService.getNavigation();\n        }\n\n        // Methods\n        vm.toggleHorizontalMobileMenu = toggleHorizontalMobileMenu;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Sort the navigation before doing anything else\n            msNavigationService.sort();\n        }\n\n        /**\n         * Toggle horizontal mobile menu\n         */\n        function toggleHorizontalMobileMenu()\n        {\n            angular.element('body').toggleClass('ms-navigation-horizontal-mobile-menu-active');\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationDirective($rootScope, $timeout, $mdSidenav, msNavigationService)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                folded: '=',\n                root  : '@'\n            },\n            controller : 'MsNavigationController as vm',\n            templateUrl: 'app/core/directives/ms-navigation/templates/vertical.html',\n            transclude : true,\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-navigation');\n\n                return function postLink(scope, iElement)\n                {\n                    var bodyEl = angular.element('body'),\n                        foldExpanderEl = angular.element('<div id=\"ms-navigation-fold-expander\"></div>'),\n                        foldCollapserEl = angular.element('<div id=\"ms-navigation-fold-collapser\"></div>'),\n                        sidenav = $mdSidenav('navigation');\n\n                    // Store the navigation in the service for public access\n                    msNavigationService.setNavigationScope(scope);\n\n                    // Initialize\n                    init();\n\n                    /**\n                     * Initialize\n                     */\n                    function init()\n                    {\n                        // Set the folded status for the first time.\n                        // First, we have to check if we have a folded\n                        // status available in the service already. This\n                        // will prevent navigation to act weird if we already\n                        // set the fold status, remove the navigation and\n                        // then re-initialize it, which happens if we\n                        // change to a view without a navigation and then\n                        // come back with history.back() function.\n\n                        // If the service didn't initialize before, set\n                        // the folded status from scope, otherwise we\n                        // won't touch anything because the folded status\n                        // already set in the service...\n                        if ( msNavigationService.getFolded() === null )\n                        {\n                            msNavigationService.setFolded(scope.folded);\n                        }\n\n                        if ( msNavigationService.getFolded() )\n                        {\n                            // Collapse everything.\n                            // This must be inside a $timeout because by the\n                            // time we call this, the 'msNavigation::collapse'\n                            // event listener is not registered yet. $timeout\n                            // will ensure that it will be called after it is\n                            // registered.\n                            $timeout(function ()\n                            {\n                                $rootScope.$broadcast('msNavigation::collapse');\n                            });\n\n                            // Add class to the body\n                            bodyEl.addClass('ms-navigation-folded');\n\n                            // Set fold expander\n                            setFoldExpander();\n                        }\n                    }\n\n                    // Sidenav locked open status watcher\n                    scope.$watch(function ()\n                    {\n                        return sidenav.isLockedOpen();\n                    }, function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        var folded = msNavigationService.getFolded();\n\n                        if ( folded )\n                        {\n                            if ( current )\n                            {\n                                // Collapse everything\n                                $rootScope.$broadcast('msNavigation::collapse');\n                            }\n                            else\n                            {\n                                // Expand the active one and its parents\n                                var activeItem = msNavigationService.getActiveItem();\n                                if ( activeItem )\n                                {\n                                    activeItem.scope.$emit('msNavigation::stateMatched');\n                                }\n                            }\n                        }\n                    });\n\n                    // Folded status watcher\n                    scope.$watch('folded', function (current, old)\n                    {\n                        if ( angular.isUndefined(current) || angular.equals(current, old) )\n                        {\n                            return;\n                        }\n\n                        setFolded(current);\n                    });\n\n                    /**\n                     * Set folded status\n                     *\n                     * @param folded\n                     */\n                    function setFolded(folded)\n                    {\n                        // Store folded status on the service for global access\n                        msNavigationService.setFolded(folded);\n\n                        if ( folded )\n                        {\n                            // Collapse everything\n                            $rootScope.$broadcast('msNavigation::collapse');\n\n                            // Add class to the body\n                            bodyEl.addClass('ms-navigation-folded');\n\n                            // Set fold expander\n                            setFoldExpander();\n                        }\n                        else\n                        {\n                            // Expand the active one and its parents\n                            var activeItem = msNavigationService.getActiveItem();\n                            if ( activeItem )\n                            {\n                                activeItem.scope.$emit('msNavigation::stateMatched');\n                            }\n\n                            // Remove body class\n                            bodyEl.removeClass('ms-navigation-folded ms-navigation-folded-open');\n\n                            // Remove fold collapser\n                            removeFoldCollapser();\n                        }\n                    }\n\n                    /**\n                     * Set fold expander\n                     */\n                    function setFoldExpander()\n                    {\n                        iElement.parent().append(foldExpanderEl);\n\n                        // Let everything settle for a moment\n                        // before registering the event listener\n                        $timeout(function ()\n                        {\n                            foldExpanderEl.on('mouseenter touchstart', onFoldExpanderHover);\n                        });\n                    }\n\n                    /**\n                     * Set fold collapser\n                     */\n                    function setFoldCollapser()\n                    {\n                        bodyEl.find('#main').append(foldCollapserEl);\n                        foldCollapserEl.on('mouseenter touchstart', onFoldCollapserHover);\n                    }\n\n                    /**\n                     * Remove fold collapser\n                     */\n                    function removeFoldCollapser()\n                    {\n                        foldCollapserEl.remove();\n                    }\n\n                    /**\n                     * onHover event of foldExpander\n                     */\n                    function onFoldExpanderHover(event)\n                    {\n                        if ( event )\n                        {\n                            event.preventDefault();\n                        }\n\n                        // Set folded open status\n                        msNavigationService.setFoldedOpen(true);\n\n                        // Expand the active one and its parents\n                        var activeItem = msNavigationService.getActiveItem();\n                        if ( activeItem )\n                        {\n                            activeItem.scope.$emit('msNavigation::stateMatched');\n                        }\n\n                        // Add class to the body\n                        bodyEl.addClass('ms-navigation-folded-open');\n\n                        // Remove the fold opener\n                        foldExpanderEl.remove();\n\n                        // Set fold collapser\n                        setFoldCollapser();\n                    }\n\n                    /**\n                     * onHover event of foldCollapser\n                     */\n                    function onFoldCollapserHover(event)\n                    {\n                        if ( event )\n                        {\n                            event.preventDefault();\n                        }\n\n                        // Set folded open status\n                        msNavigationService.setFoldedOpen(false);\n\n                        // Collapse everything\n                        $rootScope.$broadcast('msNavigation::collapse');\n\n                        // Remove body class\n                        bodyEl.removeClass('ms-navigation-folded-open');\n\n                        // Remove the fold collapser\n                        foldCollapserEl.remove();\n\n                        // Set fold expander\n                        setFoldExpander();\n                    }\n\n                    /**\n                     * Public access for toggling folded status externally\n                     */\n                    scope.toggleFolded = function ()\n                    {\n                        var folded = msNavigationService.getFolded();\n\n                        setFolded(!folded);\n                    };\n\n                    /**\n                     * On $stateChangeStart\n                     */\n                    scope.$on('$stateChangeStart', function ()\n                    {\n                        // Close the sidenav\n                        sidenav.close();\n                    });\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        foldCollapserEl.off('mouseenter touchstart');\n                        foldExpanderEl.off('mouseenter touchstart');\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationNodeController($scope, $element, $rootScope, $animate, $state, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.element = $element;\n        vm.node = $scope.node;\n        vm.hasChildren = undefined;\n        vm.collapsed = undefined;\n        vm.collapsable = undefined;\n        vm.group = undefined;\n        vm.animateHeightClass = 'animate-height';\n\n        // Methods\n        vm.toggleCollapsed = toggleCollapsed;\n        vm.collapse = collapse;\n        vm.expand = expand;\n        vm.getClass = getClass;\n        vm.isHidden = isHidden;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Setup the initial values\n\n            // Has children?\n            vm.hasChildren = vm.node.children.length > 0;\n\n            // Is group?\n            vm.group = !!(angular.isDefined(vm.node.group) && vm.node.group === true);\n\n            // Is collapsable?\n            if ( !vm.hasChildren || vm.group )\n            {\n                vm.collapsable = false;\n            }\n            else\n            {\n                vm.collapsable = !!(angular.isUndefined(vm.node.collapsable) || typeof vm.node.collapsable !== 'boolean' || vm.node.collapsable === true);\n            }\n\n            // Is collapsed?\n            if ( !vm.collapsable )\n            {\n                vm.collapsed = false;\n            }\n            else\n            {\n                vm.collapsed = !!(angular.isUndefined(vm.node.collapsed) || typeof vm.node.collapsed !== 'boolean' || vm.node.collapsed === true);\n            }\n\n            // Expand all parents if we have a matching state or\n            // the current state is a child of the node's state\n            if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n            {\n                // If state params are defined, make sure they are\n                // equal, otherwise do not set the active item\n                if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                {\n                    return;\n                }\n\n                $scope.$emit('msNavigation::stateMatched');\n\n                // Also store the current active menu item\n                msNavigationService.setActiveItem(vm.node, $scope);\n            }\n\n            $scope.$on('msNavigation::stateMatched', function ()\n            {\n                // Expand if the current scope is collapsable and is collapsed\n                if ( vm.collapsable && vm.collapsed )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.collapsed = false;\n                    });\n                }\n            });\n\n            // Listen for collapse event\n            $scope.$on('msNavigation::collapse', function (event, path)\n            {\n                if ( vm.collapsed || !vm.collapsable )\n                {\n                    return;\n                }\n\n                // If there is no path defined, collapse\n                if ( angular.isUndefined(path) )\n                {\n                    vm.collapse();\n                }\n                // If there is a path defined, do not collapse\n                // the items that are inside that path. This will\n                // prevent parent items from collapsing\n                else\n                {\n                    var givenPathParts = path.split('.'),\n                        activePathParts = [];\n\n                    var activeItem = msNavigationService.getActiveItem();\n                    if ( activeItem )\n                    {\n                        activePathParts = activeItem.node._path.split('.');\n                    }\n\n                    // Test for given path\n                    if ( givenPathParts.indexOf(vm.node._id) > -1 )\n                    {\n                        return;\n                    }\n\n                    // Test for active path\n                    if ( activePathParts.indexOf(vm.node._id) > -1 )\n                    {\n                        return;\n                    }\n\n                    vm.collapse();\n                }\n            });\n\n            // Listen for $stateChangeSuccess event\n            $scope.$on('$stateChangeSuccess', function ()\n            {\n                if ( vm.node.state === $state.current.name )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Update active item on state change\n                    msNavigationService.setActiveItem(vm.node, $scope);\n\n                    // Collapse everything except the one we're using\n                    $rootScope.$broadcast('msNavigation::collapse', vm.node._path);\n                }\n\n                // Expand the parents if we the current\n                // state is a child of the node's state\n                if ( $state.includes(vm.node.state) )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Emit the stateMatched\n                    $scope.$emit('msNavigation::stateMatched');\n                }\n            });\n        }\n\n        /**\n         * Toggle collapsed\n         */\n        function toggleCollapsed()\n        {\n            if ( vm.collapsed )\n            {\n                vm.expand();\n            }\n            else\n            {\n                vm.collapse();\n            }\n        }\n\n        /**\n         * Collapse\n         */\n        function collapse()\n        {\n            // Grab the element that we are going to collapse\n            var collapseEl = vm.element.children('ul');\n\n            // Grab the height\n            var height = collapseEl[0].offsetHeight;\n\n            $scope.$evalAsync(function ()\n            {\n                // Set collapsed status\n                vm.collapsed = true;\n\n                // Add collapsing class to the node\n                vm.element.addClass('collapsing');\n\n                // Animate the height\n                $animate.animate(collapseEl,\n                    {\n                        'display': 'block',\n                        'height' : height + 'px'\n                    },\n                    {\n                        'height': '0px'\n                    },\n                    vm.animateHeightClass\n                ).then(\n                    function ()\n                    {\n                        // Clear the inline styles after animation done\n                        collapseEl.css({\n                            'display': '',\n                            'height' : ''\n                        });\n\n                        // Clear collapsing class from the node\n                        vm.element.removeClass('collapsing');\n                    }\n                );\n\n                // Broadcast the collapse event so child items can also be collapsed\n                $scope.$broadcast('msNavigation::collapse');\n            });\n        }\n\n        /**\n         * Expand\n         */\n        function expand()\n        {\n            // Grab the element that we are going to expand\n            var expandEl = vm.element.children('ul');\n\n            // Move the element out of the dom flow and\n            // make it block so we can get its height\n            expandEl.css({\n                'position'  : 'absolute',\n                'visibility': 'hidden',\n                'display'   : 'block',\n                'height'    : 'auto'\n            });\n\n            // Grab the height\n            var height = expandEl[0].offsetHeight;\n\n            // Reset the style modifications\n            expandEl.css({\n                'position'  : '',\n                'visibility': '',\n                'display'   : '',\n                'height'    : ''\n            });\n\n            $scope.$evalAsync(function ()\n            {\n                // Set collapsed status\n                vm.collapsed = false;\n\n                // Add expanding class to the node\n                vm.element.addClass('expanding');\n\n                // Animate the height\n                $animate.animate(expandEl,\n                    {\n                        'display': 'block',\n                        'height' : '0px'\n                    },\n                    {\n                        'height': height + 'px'\n                    },\n                    vm.animateHeightClass\n                ).then(\n                    function ()\n                    {\n                        // Clear the inline styles after animation done\n                        expandEl.css({\n                            'height': ''\n                        });\n\n                        // Clear expanding class from the node\n                        vm.element.removeClass('expanding');\n                    }\n                );\n\n                // If item expanded, broadcast the collapse event from rootScope so that the other expanded items\n                // can be collapsed. This is necessary for keeping only one parent expanded at any time\n                $rootScope.$broadcast('msNavigation::collapse', vm.node._path);\n            });\n        }\n\n        /**\n         * Return the class\n         *\n         * @returns {*}\n         */\n        function getClass()\n        {\n            return vm.node.class;\n        }\n\n        /**\n         * Check if node should be hidden\n         *\n         * @returns {boolean}\n         */\n        function isHidden()\n        {\n            if ( angular.isDefined(vm.node.hidden) && angular.isFunction(vm.node.hidden) )\n            {\n                return vm.node.hidden();\n            }\n\n            return false;\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationNodeDirective()\n    {\n        return {\n            restrict        : 'A',\n            bindToController: {\n                node: '=msNavigationNode'\n            },\n            controller      : 'MsNavigationNodeController as vm',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-navigation-node');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationNodeCtrl)\n                {\n                    // Add custom classes\n                    iElement.addClass(MsNavigationNodeCtrl.getClass());\n\n                    // Add group class if it's a group\n                    if ( MsNavigationNodeCtrl.group )\n                    {\n                        iElement.addClass('group');\n                    }\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationItemDirective()\n    {\n        return {\n            restrict: 'A',\n            require : '^msNavigationNode',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-navigation-item');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationNodeCtrl)\n                {\n                    // If the item is collapsable...\n                    if ( MsNavigationNodeCtrl.collapsable )\n                    {\n                        iElement.on('click', MsNavigationNodeCtrl.toggleCollapsed);\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('click');\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalDirective(msNavigationService)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {\n                root: '@'\n            },\n            controller : 'MsNavigationController as vm',\n            templateUrl: 'app/core/directives/ms-navigation/templates/horizontal.html',\n            transclude : true,\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal');\n\n                return function postLink(scope)\n                {\n                    // Store the navigation in the service for public access\n                    msNavigationService.setNavigationScope(scope);\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function MsNavigationHorizontalNodeController($scope, $element, $rootScope, $state, msNavigationService)\n    {\n        var vm = this;\n\n        // Data\n        vm.element = $element;\n        vm.node = $scope.node;\n        vm.hasChildren = undefined;\n        vm.group = undefined;\n\n        // Methods\n        vm.getClass = getClass;\n\n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Setup the initial values\n\n            // Is active\n            vm.isActive = false;\n\n            // Has children?\n            vm.hasChildren = vm.node.children.length > 0;\n\n            // Is group?\n            vm.group = !!(angular.isDefined(vm.node.group) && vm.node.group === true);\n\n            // Mark all parents as active if we have a matching state\n            // or the current state is a child of the node's state\n            if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n            {\n                // If state params are defined, make sure they are\n                // equal, otherwise do not set the active item\n                if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                {\n                    return;\n                }\n\n                $scope.$emit('msNavigation::stateMatched');\n\n                // Also store the current active menu item\n                msNavigationService.setActiveItem(vm.node, $scope);\n            }\n\n            $scope.$on('msNavigation::stateMatched', function ()\n            {\n                // Mark as active if has children\n                if ( vm.hasChildren )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = true;\n                    });\n                }\n            });\n\n            // Listen for clearActive event\n            $scope.$on('msNavigation::clearActive', function ()\n            {\n                if ( !vm.hasChildren )\n                {\n                    return;\n                }\n\n                var activePathParts = [];\n\n                var activeItem = msNavigationService.getActiveItem();\n                if ( activeItem )\n                {\n                    activePathParts = activeItem.node._path.split('.');\n                }\n\n                // Test for active path\n                if ( activePathParts.indexOf(vm.node._id) > -1 )\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = true;\n                    });\n                }\n                else\n                {\n                    $scope.$evalAsync(function ()\n                    {\n                        vm.isActive = false;\n                    });\n                }\n\n            });\n\n            // Listen for $stateChangeSuccess event\n            $scope.$on('$stateChangeSuccess', function ()\n            {\n                if ( vm.node.state === $state.current.name || $state.includes(vm.node.state) )\n                {\n                    // If state params are defined, make sure they are\n                    // equal, otherwise do not set the active item\n                    if ( angular.isDefined(vm.node.stateParams) && angular.isDefined($state.params) && !angular.equals(vm.node.stateParams, $state.params) )\n                    {\n                        return;\n                    }\n\n                    // Update active item on state change\n                    msNavigationService.setActiveItem(vm.node, $scope);\n\n                    // Clear all active states except the one we're using\n                    $rootScope.$broadcast('msNavigation::clearActive');\n                }\n            });\n        }\n\n        /**\n         * Return the class\n         *\n         * @returns {*}\n         */\n        function getClass()\n        {\n            return vm.node.class;\n        }\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalNodeDirective()\n    {\n        return {\n            restrict        : 'A',\n            bindToController: {\n                node: '=msNavigationHorizontalNode'\n            },\n            controller      : 'MsNavigationHorizontalNodeController as vm',\n            compile         : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal-node');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationHorizontalNodeCtrl)\n                {\n                    // Add custom classes\n                    iElement.addClass(MsNavigationHorizontalNodeCtrl.getClass());\n\n                    // Add group class if it's a group\n                    if ( MsNavigationHorizontalNodeCtrl.group )\n                    {\n                        iElement.addClass('group');\n                    }\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavigationHorizontalItemDirective($mdMedia)\n    {\n        return {\n            restrict: 'A',\n            require : '^msNavigationHorizontalNode',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-navigation-horizontal-item');\n\n                return function postLink(scope, iElement, iAttrs, MsNavigationHorizontalNodeCtrl)\n                {\n                    iElement.on('click', onClick);\n\n                    function onClick()\n                    {\n                        if ( !MsNavigationHorizontalNodeCtrl.hasChildren || $mdMedia('gt-md') )\n                        {\n                            return;\n                        }\n\n                        iElement.toggleClass('expanded');\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.off('click');\n                    });\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('msNavFoldService', msNavFoldService)\n        .directive('msNavIsFolded', msNavIsFoldedDirective)\n        .controller('MsNavController', MsNavController)\n        .directive('msNav', msNavDirective)\n        .directive('msNavTitle', msNavTitleDirective)\n        .directive('msNavButton', msNavButtonDirective)\n        .directive('msNavToggle', msNavToggleDirective);\n\n    /** @ngInject */\n    function msNavFoldService()\n    {\n        var foldable = {};\n\n        var service = {\n            setFoldable    : setFoldable,\n            isNavFoldedOpen: isNavFoldedOpen,\n            toggleFold     : toggleFold,\n            openFolded     : openFolded,\n            closeFolded    : closeFolded\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Set the foldable\n         *\n         * @param scope\n         * @param element\n         */\n        function setFoldable(scope, element)\n        {\n            foldable = {\n                'scope'  : scope,\n                'element': element\n            };\n        }\n\n        /**\n         * Is folded open\n         */\n        function isNavFoldedOpen()\n        {\n            return foldable.scope.isNavFoldedOpen();\n        }\n\n        /**\n         * Toggle fold\n         */\n        function toggleFold()\n        {\n            foldable.scope.toggleFold();\n        }\n\n        /**\n         * Open folded navigation\n         */\n        function openFolded()\n        {\n            foldable.scope.openFolded();\n        }\n\n        /**\n         * Close folded navigation\n         */\n        function closeFolded()\n        {\n            foldable.scope.closeFolded();\n        }\n    }\n\n    /** @ngInject */\n    function msNavIsFoldedDirective($document, $rootScope, msNavFoldService)\n    {\n        return {\n            restrict: 'A',\n            link    : function (scope, iElement, iAttrs)\n            {\n                var isFolded = (iAttrs.msNavIsFolded === 'true'),\n                    isFoldedOpen = false,\n                    body = angular.element($document[0].body),\n                    openOverlay = angular.element('<div id=\"ms-nav-fold-open-overlay\"></div>'),\n                    closeOverlay = angular.element('<div id=\"ms-nav-fold-close-overlay\"></div>'),\n                    sidenavEl = iElement.parent();\n\n                // Initialize the service\n                msNavFoldService.setFoldable(scope, iElement, isFolded);\n\n                // Set the fold status for the first time\n                if ( isFolded )\n                {\n                    fold();\n                }\n                else\n                {\n                    unfold();\n                }\n\n                /**\n                 * Is nav folded open\n                 */\n                function isNavFoldedOpen()\n                {\n                    return isFoldedOpen;\n                }\n\n                /**\n                 * Toggle fold\n                 */\n                function toggleFold()\n                {\n                    isFolded = !isFolded;\n\n                    if ( isFolded )\n                    {\n                        fold();\n                    }\n                    else\n                    {\n                        unfold();\n                    }\n                }\n\n                /**\n                 * Fold the navigation\n                 */\n                function fold()\n                {\n                    // Add classes\n                    body.addClass('ms-nav-folded');\n\n                    // Collapse everything and scroll to the top\n                    $rootScope.$broadcast('msNav::forceCollapse');\n                    iElement.scrollTop(0);\n\n                    // Append the openOverlay to the element\n                    sidenavEl.append(openOverlay);\n\n                    // Event listeners\n                    openOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        openFolded(event);\n                        isFoldedOpen = true;\n                    });\n                }\n\n                /**\n                 * Open folded navigation\n                 */\n                function openFolded(event)\n                {\n                    if ( angular.isDefined(event) )\n                    {\n                        event.preventDefault();\n                    }\n\n                    body.addClass('ms-nav-folded-open');\n\n                    // Update the location\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    // Remove open overlay\n                    sidenavEl.find(openOverlay).remove();\n\n                    // Append close overlay and bind its events\n                    sidenavEl.parent().append(closeOverlay);\n                    closeOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        closeFolded(event);\n                        isFoldedOpen = false;\n                    });\n                }\n\n                /**\n                 * Close folded navigation\n                 */\n                function closeFolded(event)\n                {\n                    if ( angular.isDefined(event) )\n                    {\n                        event.preventDefault();\n                    }\n\n                    // Collapse everything and scroll to the top\n                    $rootScope.$broadcast('msNav::forceCollapse');\n                    iElement.scrollTop(0);\n\n                    body.removeClass('ms-nav-folded-open');\n\n                    // Remove close overlay\n                    sidenavEl.parent().find(closeOverlay).remove();\n\n                    // Append open overlay and bind its events\n                    sidenavEl.append(openOverlay);\n                    openOverlay.on('mouseenter touchstart', function (event)\n                    {\n                        openFolded(event);\n                        isFoldedOpen = true;\n                    });\n                }\n\n                /**\n                 * Unfold the navigation\n                 */\n                function unfold()\n                {\n                    body.removeClass('ms-nav-folded ms-nav-folded-open');\n\n                    // Update the location\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    iElement.off('mouseenter mouseleave');\n                }\n\n                // Expose functions to the scope\n                scope.toggleFold = toggleFold;\n                scope.openFolded = openFolded;\n                scope.closeFolded = closeFolded;\n                scope.isNavFoldedOpen = isNavFoldedOpen;\n\n                // Cleanup\n                scope.$on('$destroy', function ()\n                {\n                    openOverlay.off('mouseenter touchstart');\n                    closeOverlay.off('mouseenter touchstart');\n                    iElement.off('mouseenter mouseleave');\n                });\n            }\n        };\n    }\n\n\n    /** @ngInject */\n    function MsNavController()\n    {\n        var vm = this,\n            disabled = false,\n            toggleItems = [],\n            lockedItems = [];\n\n        // Data\n\n        // Methods\n        vm.isDisabled = isDisabled;\n        vm.enable = enable;\n        vm.disable = disable;\n        vm.setToggleItem = setToggleItem;\n        vm.getLockedItems = getLockedItems;\n        vm.setLockedItem = setLockedItem;\n        vm.clearLockedItems = clearLockedItems;\n\n        //////////\n\n        /**\n         * Is navigation disabled\n         *\n         * @returns {boolean}\n         */\n        function isDisabled()\n        {\n            return disabled;\n        }\n\n        /**\n         * Disable the navigation\n         */\n        function disable()\n        {\n            disabled = true;\n        }\n\n        /**\n         * Enable the navigation\n         */\n        function enable()\n        {\n            disabled = false;\n        }\n\n        /**\n         * Set toggle item\n         *\n         * @param element\n         * @param scope\n         */\n        function setToggleItem(element, scope)\n        {\n            toggleItems.push({\n                'element': element,\n                'scope'  : scope\n            });\n        }\n\n        /**\n         * Get locked items\n         *\n         * @returns {Array}\n         */\n        function getLockedItems()\n        {\n            return lockedItems;\n        }\n\n        /**\n         * Set locked item\n         *\n         * @param element\n         * @param scope\n         */\n        function setLockedItem(element, scope)\n        {\n            lockedItems.push({\n                'element': element,\n                'scope'  : scope\n            });\n        }\n\n        /**\n         * Clear locked items list\n         */\n        function clearLockedItems()\n        {\n            lockedItems = [];\n        }\n    }\n\n    /** @ngInject */\n    function msNavDirective($rootScope, $mdComponentRegistry, msNavFoldService)\n    {\n        return {\n            restrict  : 'E',\n            scope     : {},\n            controller: 'MsNavController',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-nav');\n\n                return function postLink(scope)\n                {\n                    // Update toggle status according to the ui-router current state\n                    $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                    // Update toggles on state changes\n                    var stateChangeSuccessEvent = $rootScope.$on('$stateChangeSuccess', function ()\n                    {\n                        $rootScope.$broadcast('msNav::expandMatchingToggles');\n\n                        // Close navigation sidenav on stateChangeSuccess\n                        $mdComponentRegistry.when('navigation').then(function (navigation)\n                        {\n                            navigation.close();\n\n                            if ( msNavFoldService.isNavFoldedOpen() )\n                            {\n                                msNavFoldService.closeFolded();\n                            }\n                        });\n                    });\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        stateChangeSuccessEvent();\n                    });\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavTitleDirective()\n    {\n        return {\n            restrict: 'A',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-nav-title');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavButtonDirective()\n    {\n        return {\n            restrict: 'AE',\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-nav-button');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msNavToggleDirective($rootScope, $q, $animate, $state)\n    {\n        return {\n            restrict: 'A',\n            require : '^msNav',\n            scope   : true,\n            compile : function (tElement, tAttrs)\n            {\n                tElement.addClass('ms-nav-toggle');\n\n                // Add collapsed attr\n                if ( angular.isUndefined(tAttrs.collapsed) )\n                {\n                    tAttrs.collapsed = true;\n                }\n\n                tElement.attr('collapsed', tAttrs.collapsed);\n\n                return function postLink(scope, iElement, iAttrs, MsNavCtrl)\n                {\n                    var classes = {\n                        expanded         : 'expanded',\n                        expandAnimation  : 'expand-animation',\n                        collapseAnimation: 'collapse-animation'\n                    };\n\n                    // Store all related states\n                    var links = iElement.find('a');\n                    var states = [];\n                    var regExp = /\\(.*\\)/g;\n\n                    angular.forEach(links, function (link)\n                    {\n                        var state = angular.element(link).attr('ui-sref');\n\n                        if ( angular.isUndefined(state) )\n                        {\n                            return;\n                        }\n\n                        // Remove any parameter definition from the state name before storing it\n                        state = state.replace(regExp, '');\n\n                        states.push(state);\n                    });\n\n                    // Store toggle-able element and its scope in the main nav controller\n                    MsNavCtrl.setToggleItem(iElement, scope);\n\n                    // Click handler\n                    iElement.children('.ms-nav-button').on('click', toggle);\n\n                    // Toggle function\n                    function toggle()\n                    {\n                        // If navigation is disabled, do nothing...\n                        if ( MsNavCtrl.isDisabled() )\n                        {\n                            return;\n                        }\n\n                        // Disable the entire navigation to prevent spamming\n                        MsNavCtrl.disable();\n\n                        if ( isCollapsed() )\n                        {\n                            // Clear the locked items list\n                            MsNavCtrl.clearLockedItems();\n\n                            // Emit pushToLockedList event\n                            scope.$emit('msNav::pushToLockedList');\n\n                            // Collapse everything but locked items\n                            $rootScope.$broadcast('msNav::collapse');\n\n                            // Expand and then...\n                            expand().then(function ()\n                            {\n                                // Enable the entire navigation after animations completed\n                                MsNavCtrl.enable();\n                            });\n                        }\n                        else\n                        {\n                            // Collapse with all children\n                            scope.$broadcast('msNav::forceCollapse');\n                        }\n                    }\n\n                    // Cleanup\n                    scope.$on('$destroy', function ()\n                    {\n                        iElement.children('.ms-nav-button').off('click');\n                    });\n\n                    /*---------------------*/\n                    /* Scope Events        */\n                    /*---------------------*/\n\n                    /**\n                     * Collapse everything but locked items\n                     */\n                    scope.$on('msNav::collapse', function ()\n                    {\n                        // Only collapse toggles that are not locked\n                        var lockedItems = MsNavCtrl.getLockedItems();\n                        var locked = false;\n\n                        angular.forEach(lockedItems, function (lockedItem)\n                        {\n                            if ( angular.equals(lockedItem.scope, scope) )\n                            {\n                                locked = true;\n                            }\n                        });\n\n                        if ( locked )\n                        {\n                            return;\n                        }\n\n                        // Collapse and then...\n                        collapse().then(function ()\n                        {\n                            // Enable the entire navigation after animations completed\n                            MsNavCtrl.enable();\n                        });\n                    });\n\n                    /**\n                     * Collapse everything\n                     */\n                    scope.$on('msNav::forceCollapse', function ()\n                    {\n                        // Collapse and then...\n                        collapse().then(function ()\n                        {\n                            // Enable the entire navigation after animations completed\n                            MsNavCtrl.enable();\n                        });\n                    });\n\n                    /**\n                     * Expand toggles that match with the current states\n                     */\n                    scope.$on('msNav::expandMatchingToggles', function ()\n                    {\n                        var currentState = $state.current.name;\n                        var shouldExpand = false;\n\n                        angular.forEach(states, function (state)\n                        {\n                            if ( currentState === state )\n                            {\n                                shouldExpand = true;\n                            }\n                        });\n\n                        if ( shouldExpand )\n                        {\n                            expand();\n                        }\n                        else\n                        {\n                            collapse();\n                        }\n                    });\n\n                    /**\n                     * Add toggle to the locked list\n                     */\n                    scope.$on('msNav::pushToLockedList', function ()\n                    {\n                        // Set expanded item on main nav controller\n                        MsNavCtrl.setLockedItem(iElement, scope);\n                    });\n\n                    /*---------------------*/\n                    /* Internal functions  */\n                    /*---------------------*/\n\n                    /**\n                     * Is element collapsed\n                     *\n                     * @returns {bool}\n                     */\n                    function isCollapsed()\n                    {\n                        return iElement.attr('collapsed') === 'true';\n                    }\n\n                    /**\n                     * Is element expanded\n                     *\n                     * @returns {bool}\n                     */\n                    function isExpanded()\n                    {\n                        return !isCollapsed();\n                    }\n\n                    /**\n                     * Expand the toggle\n                     *\n                     * @returns $promise\n                     */\n                    function expand()\n                    {\n                        // Create a new deferred object\n                        var deferred = $q.defer();\n\n                        // If the menu item is already expanded, do nothing..\n                        if ( isExpanded() )\n                        {\n                            // Reject the deferred object\n                            deferred.reject({'error': true});\n\n                            // Return the promise\n                            return deferred.promise;\n                        }\n\n                        // Set element attr\n                        iElement.attr('collapsed', false);\n\n                        // Grab the element to expand\n                        var elementToExpand = angular.element(iElement.find('ms-nav-toggle-items')[0]);\n\n                        // Move the element out of the dom flow and\n                        // make it block so we can get its height\n                        elementToExpand.css({\n                            'position'  : 'absolute',\n                            'visibility': 'hidden',\n                            'display'   : 'block',\n                            'height'    : 'auto'\n                        });\n\n                        // Grab the height\n                        var height = elementToExpand[0].offsetHeight;\n\n                        // Reset the style modifications\n                        elementToExpand.css({\n                            'position'  : '',\n                            'visibility': '',\n                            'display'   : '',\n                            'height'    : ''\n                        });\n\n                        // Animate the height\n                        scope.$evalAsync(function ()\n                        {\n                            $animate.animate(elementToExpand,\n                                {\n                                    'display': 'block',\n                                    'height' : '0px'\n                                },\n                                {\n                                    'height': height + 'px'\n                                },\n                                classes.expandAnimation\n                            ).then(\n                                function ()\n                                {\n                                    // Add expanded class\n                                    elementToExpand.addClass(classes.expanded);\n\n                                    // Clear the inline styles after animation done\n                                    elementToExpand.css({'height': ''});\n\n                                    // Resolve the deferred object\n                                    deferred.resolve({'success': true});\n                                }\n                            );\n                        });\n\n                        // Return the promise\n                        return deferred.promise;\n                    }\n\n                    /**\n                     * Collapse the toggle\n                     *\n                     * @returns $promise\n                     */\n                    function collapse()\n                    {\n                        // Create a new deferred object\n                        var deferred = $q.defer();\n\n                        // If the menu item is already collapsed, do nothing..\n                        if ( isCollapsed() )\n                        {\n                            // Reject the deferred object\n                            deferred.reject({'error': true});\n\n                            // Return the promise\n                            return deferred.promise;\n                        }\n\n                        // Set element attr\n                        iElement.attr('collapsed', true);\n\n                        // Grab the element to collapse\n                        var elementToCollapse = angular.element(iElement.find('ms-nav-toggle-items')[0]);\n\n                        // Grab the height\n                        var height = elementToCollapse[0].offsetHeight;\n\n                        // Animate the height\n                        scope.$evalAsync(function ()\n                        {\n                            $animate.animate(elementToCollapse,\n                                {\n                                    'height': height + 'px'\n                                },\n                                {\n                                    'height': '0px'\n                                },\n                                classes.collapseAnimation\n                            ).then(\n                                function ()\n                                {\n                                    // Remove expanded class\n                                    elementToCollapse.removeClass(classes.expanded);\n\n                                    // Clear the inline styles after animation done\n                                    elementToCollapse.css({\n                                        'display': '',\n                                        'height' : ''\n                                    });\n\n                                    // Resolve the deferred object\n                                    deferred.resolve({'success': true});\n                                }\n                            );\n                        });\n\n                        // Return the promise\n                        return deferred.promise;\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('msMaterialColorPickerController', msMaterialColorPickerController)\n        .directive('msMaterialColorPicker', msMaterialColorPicker);\n\n    /** @ngInject */\n    function msMaterialColorPickerController($scope, $mdColorPalette, $mdMenu, fuseGenerator)\n    {\n        var vm = this;\n        vm.palettes = $mdColorPalette; // Material Color Palette\n        vm.selectedPalette = false;\n        vm.selectedHues = false;\n        $scope.$selectedColor = {};\n\n        // Methods\n        vm.activateHueSelection = activateHueSelection;\n        vm.selectColor = selectColor;\n        vm.removeColor = removeColor;\n\n        /**\n         * Initialize / Watch model changes\n         */\n        $scope.$watch('ngModel', setSelectedColor);\n\n        /**\n         * Activate Hue Selection\n         * @param palette\n         * @param hues\n         */\n        function activateHueSelection(palette, hues)\n        {\n            vm.selectedPalette = palette;\n            vm.selectedHues = hues;\n        }\n\n        /**\n         * Select Color\n         * @type {selectColor}\n         */\n        function selectColor(palette, hue)\n        {\n            // Update Selected Color\n            updateSelectedColor(palette, hue);\n\n            // Update Model Value\n            updateModel();\n\n            // Hide The picker\n            $mdMenu.hide();\n        }\n\n        function removeColor()\n        {\n            vm.selectedColor = {\n                palette: '',\n                hue    : '',\n                class  : ''\n            };\n\n            activateHueSelection(false, false);\n\n            updateModel();\n        }\n\n        /**\n         * Set SelectedColor by model type\n         */\n        function setSelectedColor()\n        {\n            if ( !vm.modelCtrl.$viewValue || vm.modelCtrl.$viewValue === '' )\n            {\n                removeColor();\n                return;\n            }\n\n            var palette, hue;\n\n            // If ModelType Class\n            if ( vm.msModelType === 'class' )\n            {\n                var color = vm.modelCtrl.$viewValue.split('-');\n                if ( color.length >= 5 )\n                {\n                    palette = color[1] + '-' + color[2];\n                    hue = color[3];\n                }\n                else\n                {\n                    palette = color[1];\n                    hue = color[2];\n                }\n            }\n\n            // If ModelType Object\n            else if ( vm.msModelType === 'obj' )\n            {\n                palette = vm.modelCtrl.$viewValue.palette;\n                hue = vm.modelCtrl.$viewValue.hue || 500;\n            }\n\n            // Update Selected Color\n            updateSelectedColor(palette, hue);\n        }\n\n        /**\n         * Update Selected Color\n         * @param palette\n         * @param hue\n         */\n        function updateSelectedColor(palette, hue)\n        {\n            vm.selectedColor = {\n                palette     : palette,\n                hue         : hue,\n                class       : 'md-' + palette + '-' + hue + '-bg',\n                bgColorValue: fuseGenerator.rgba(vm.palettes[palette][hue].value),\n                fgColorValue: fuseGenerator.rgba(vm.palettes[palette][hue].contrast)\n            };\n\n            // If Model object not Equals the selectedColor update it\n            // it can be happen when the model only have pallete and hue values\n            if ( vm.msModelType === 'obj' && !angular.equals(vm.selectedColor, vm.modelCtrl.$viewValue) )\n            {\n                // Update Model Value\n                updateModel();\n            }\n\n            activateHueSelection(palette, vm.palettes[palette]);\n\n            $scope.$selectedColor = vm.selectedColor;\n        }\n\n        /**\n         * Update Model Value by model type\n         */\n        function updateModel()\n        {\n            if ( vm.msModelType === 'class' )\n            {\n                vm.modelCtrl.$setViewValue(vm.selectedColor.class);\n            }\n            else if ( vm.msModelType === 'obj' )\n            {\n                vm.modelCtrl.$setViewValue(vm.selectedColor);\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msMaterialColorPicker()\n    {\n        return {\n            require    : ['msMaterialColorPicker', 'ngModel'],\n            restrict   : 'E',\n            scope      : {\n                ngModel    : '=',\n                msModelType: '@?'\n            },\n            controller : 'msMaterialColorPickerController as vm',\n            transclude : true,\n            templateUrl: 'app/core/directives/ms-material-color-picker/ms-material-color-picker.html',\n            link       : function (scope, element, attrs, controllers, transclude)\n            {\n                var ctrl = controllers[0];\n\n                /**\n                 *  Pass model controller to directive controller\n                 */\n                ctrl.modelCtrl = controllers[1];\n\n                /**\n                 * ModelType: 'obj', 'class'(default)\n                 * @type {string|string}\n                 */\n                ctrl.msModelType = scope.msModelType || 'class';\n\n                transclude(scope, function (clone)\n                {\n                    clone = clone.filter(function (i, el)\n                    {\n                        return ( el.nodeType === 1 ) ? true : false;\n                    });\n\n                    if ( clone.length )\n                    {\n                        element.find('ms-color-picker-button').replaceWith(clone);\n                    }\n                });\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('msMasonryController', msMasonryController)\n        .directive('msMasonry', msMasonry)\n        .directive('msMasonryItem', msMasonryItem);\n\n    /** @ngInject */\n    function msMasonryController($scope, $window, $mdMedia, $timeout)\n    {\n        var vm = this,\n            defaultOpts = {\n                columnCount     : 5,\n                respectItemOrder: false,\n                reLayoutDebounce: 400,\n                responsive      : {\n                    md: 3,\n                    sm: 2,\n                    xs: 1\n                }\n            },\n            reLayoutTimeout = true;\n\n        vm.options = null;\n        vm.container = [];\n        vm.containerPos = '';\n        vm.columnWidth = '';\n        vm.items = [];\n\n        // Methods\n        vm.reLayout = reLayout;\n        vm.initialize = initialize;\n        vm.waitImagesLoaded = waitImagesLoaded;\n\n        function initialize()\n        {\n            vm.options = !vm.options ? defaultOpts : angular.extend(defaultOpts, vm.options);\n\n\n            watchContainerResize();\n        }\n\n        $scope.$on('msMasonry:relayout', function ()\n        {\n            reLayout();\n        });\n\n        function waitImagesLoaded(element, callback)\n        {\n            if ( typeof imagesLoaded !== 'undefined' )\n            {\n                var imgLoad = $window.imagesLoaded(element);\n\n                imgLoad.on('done', function ()\n                {\n                    callback();\n                });\n            }\n            else\n            {\n                callback();\n            }\n        }\n\n        function watchContainerResize()\n        {\n            $scope.$watch(\n                function ()\n                {\n                    return vm.container.width();\n                },\n                function (newValue, oldValue)\n                {\n                    if ( newValue !== oldValue )\n                    {\n                        reLayout();\n                    }\n                }\n            );\n        }\n\n        function reLayout()\n        {\n            // Debounce for relayout\n            if ( reLayoutTimeout )\n            {\n                $timeout.cancel(reLayoutTimeout);\n            }\n\n            reLayoutTimeout = $timeout(function ()\n            {\n                start();\n\n                $scope.$broadcast('msMasonry:relayoutFinished');\n\n            }, vm.options.reLayoutDebounce);\n\n            // Start relayout\n            function start()\n            {\n                vm.containerPos = vm.container[0].getBoundingClientRect();\n\n                updateColumnOptions();\n\n                $scope.$broadcast('msMasonry:relayoutStarted');\n\n                vm.items = vm.container.find('ms-masonry-item');\n\n                //initialize lastRowBottomArr\n                var referenceArr = Array.apply(null, new Array(vm.columnCount)).map(function ()\n                {\n                    return 0;\n                });\n\n                // set item positions\n                for ( var i = 0; i < vm.items.length; i++ )\n                {\n                    var item = vm.items[i],\n                        xPos, yPos, column, refTop;\n\n                    item = angular.element(item);\n\n                    if ( item.scope() )\n                    {\n                        item.scope().$broadcast('msMasonryItem:startReLayout');\n                    }\n\n                    item.css({'width': vm.columnWidth});\n\n                    if ( vm.options.respectItemOrder )\n                    {\n                        column = i % vm.columnCount;\n                        refTop = referenceArr[column];\n                    }\n                    else\n                    {\n                        refTop = Math.min.apply(Math, referenceArr);\n                        column = referenceArr.indexOf(refTop);\n                    }\n\n                    referenceArr[column] = refTop + item[0].getBoundingClientRect().height;\n\n                    xPos = Math.round(column * vm.columnWidth);\n                    yPos = refTop;\n\n                    item.css({'transform': 'translate3d(' + xPos + 'px,' + yPos + 'px,0px)'});\n                    item.addClass('placed');\n\n                    if ( item.scope() )\n                    {\n                        item.scope().$broadcast('msMasonryItem:finishReLayout');\n                    }\n                }\n            }\n        }\n\n        function updateColumnOptions()\n        {\n            vm.columnCount = vm.options.columnCount;\n\n            if ( $mdMedia('gt-md') )\n            {\n                vm.columnCount = vm.options.columnCount;\n            }\n            else if ( $mdMedia('md') )\n            {\n                vm.columnCount = (vm.columnCount > vm.options.responsive.md ? vm.options.responsive.md : vm.columnCount);\n            }\n            else if ( $mdMedia('sm') )\n            {\n                vm.columnCount = (vm.columnCount > vm.options.responsive.sm ? vm.options.responsive.sm : vm.columnCount);\n            }\n            else\n            {\n                vm.columnCount = vm.options.responsive.xs;\n            }\n\n            vm.columnWidth = vm.containerPos.width / vm.columnCount;\n\n        }\n    }\n\n    /** @ngInject */\n    function msMasonry($timeout)\n    {\n        return {\n            restrict  : 'AEC',\n            controller: 'msMasonryController',\n            compile   : compile\n        };\n        function compile(element, attributes)\n        {\n            return {\n                pre : function preLink(scope, iElement, iAttrs, controller)\n                {\n                    controller.options = angular.fromJson(attributes.options || '{}');\n                    controller.container = element;\n                },\n                post: function postLink(scope, iElement, iAttrs, controller)\n                {\n                    $timeout(function ()\n                    {\n                        controller.initialize();\n                    });\n                }\n            };\n        }\n    }\n\n    /** @ngInject */\n    function msMasonryItem()\n    {\n        return {\n            restrict: 'AEC',\n            require : '^msMasonry',\n            priority: 1,\n            link    : link\n        };\n\n        function link(scope, element, attributes, controller)\n        {\n            controller.waitImagesLoaded(element, function ()\n            {\n                controller.reLayout();\n\n            });\n\n            scope.$on('msMasonryItem:finishReLayout', function ()\n            {\n                scope.$watch(function ()\n                {\n                    return element.height();\n                }, function (newVal, oldVal)\n                {\n                    if ( newVal !== oldVal )\n                    {\n                        controller.reLayout();\n                    }\n                });\n            });\n\n            element.on('$destroy', function ()\n            {\n                controller.reLayout();\n            });\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msInfoBar', msInfoBarDirective);\n\n    /** @ngInject */\n    function msInfoBarDirective($document)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {},\n            transclude : true,\n            templateUrl: 'app/core/directives/ms-info-bar/ms-info-bar.html',\n            link       : function (scope, iElement)\n            {\n                var body = $document.find('body'),\n                    bodyClass = 'ms-info-bar-active';\n\n                // Add body class\n                body.addClass(bodyClass);\n\n                /**\n                 * Remove the info bar\n                 */\n                function removeInfoBar()\n                {\n                    body.removeClass(bodyClass);\n                    iElement.remove();\n                    scope.$destroy();\n                }\n\n                // Expose functions\n                scope.removeInfoBar = removeInfoBar;\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsFormWizardController', MsFormWizardController)\n        .directive('msFormWizard', msFormWizardDirective)\n        .directive('msFormWizardForm', msFormWizardFormDirective);\n\n    /** @ngInject */\n    function MsFormWizardController()\n    {\n        var vm = this;\n\n        // Data\n        vm.forms = [];\n        vm.selectedIndex = 0;\n\n        // Methods\n        vm.registerForm = registerForm;\n\n        vm.previousStep = previousStep;\n        vm.nextStep = nextStep;\n        vm.firstStep = firstStep;\n        vm.lastStep = lastStep;\n\n        vm.totalSteps = totalSteps;\n        vm.isFirstStep = isFirstStep;\n        vm.isLastStep = isLastStep;\n\n        vm.currentStepInvalid = currentStepInvalid;\n        vm.previousStepInvalid = previousStepInvalid;\n        vm.formsIncomplete = formsIncomplete;\n        vm.resetForm = resetForm;\n\n        //////////\n\n        /**\n         * Register form\n         *\n         * @param form\n         */\n        function registerForm(form)\n        {\n            vm.forms.push(form);\n        }\n\n        /**\n         * Go to previous step\n         */\n        function previousStep()\n        {\n            if ( isFirstStep() )\n            {\n                return;\n            }\n\n            vm.selectedIndex--;\n        }\n\n        /**\n         * Go to next step\n         */\n        function nextStep()\n        {\n            if ( isLastStep() )\n            {\n                return;\n            }\n\n            vm.selectedIndex++;\n        }\n\n        /**\n         * Go to first step\n         */\n        function firstStep()\n        {\n            vm.selectedIndex = 0;\n        }\n\n        /**\n         * Go to last step\n         */\n        function lastStep()\n        {\n            vm.selectedIndex = totalSteps() - 1;\n        }\n\n        /**\n         * Return total steps\n         *\n         * @returns {int}\n         */\n        function totalSteps()\n        {\n            return vm.forms.length;\n        }\n\n        /**\n         * Is first step?\n         *\n         * @returns {boolean}\n         */\n        function isFirstStep()\n        {\n            return vm.selectedIndex === 0;\n        }\n\n        /**\n         * Is last step?\n         *\n         * @returns {boolean}\n         */\n        function isLastStep()\n        {\n            return vm.selectedIndex === totalSteps() - 1;\n        }\n\n        /**\n         * Is current step invalid?\n         *\n         * @returns {boolean}\n         */\n        function currentStepInvalid()\n        {\n            return angular.isDefined(vm.forms[vm.selectedIndex]) && vm.forms[vm.selectedIndex].$invalid;\n        }\n\n        /**\n         * Is previous step invalid?\n         *\n         * @returns {boolean}\n         */\n        function previousStepInvalid()\n        {\n            return vm.selectedIndex > 0 && angular.isDefined(vm.forms[vm.selectedIndex - 1]) && vm.forms[vm.selectedIndex - 1].$invalid;\n        }\n\n        /**\n         * Check if there is any incomplete forms\n         *\n         * @returns {boolean}\n         */\n        function formsIncomplete()\n        {\n            for ( var x = 0; x < vm.forms.length; x++ )\n            {\n                if ( vm.forms[x].$invalid )\n                {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Reset form\n         */\n        function resetForm()\n        {\n            // Go back to the first step\n            vm.selectedIndex = 0;\n\n            // Make sure all the forms are back in the $pristine & $untouched status\n            for ( var x = 0; x < vm.forms.length; x++ )\n            {\n                vm.forms[x].$setPristine();\n                vm.forms[x].$setUntouched();\n            }\n        }\n    }\n\n    /** @ngInject */\n    function msFormWizardDirective()\n    {\n        return {\n            restrict  : 'E',\n            scope     : true,\n            controller: 'MsFormWizardController as msWizard',\n            compile   : function (tElement)\n            {\n                tElement.addClass('ms-form-wizard');\n\n                return function postLink()\n                {\n\n                };\n            }\n        };\n    }\n\n    /** @ngInject */\n    function msFormWizardFormDirective()\n    {\n        return {\n            restrict: 'A',\n            require : ['form', '^msFormWizard'],\n            compile : function (tElement)\n            {\n                tElement.addClass('ms-form-wizard-form');\n\n                return function postLink(scope, iElement, iAttrs, ctrls)\n                {\n                    var formCtrl = ctrls[0],\n                        MsFormWizardCtrl = ctrls[1];\n\n                    MsFormWizardCtrl.registerForm(formCtrl);\n                };\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msDatepickerFixConfig', msDatepickerFixConfigProvider)\n        .directive('msDatepickerFix', msDatepickerFix);\n\n    /** @ngInject */\n    function msDatepickerFixConfigProvider()\n    {\n        var service = this;\n\n        // Default configuration\n        var defaultConfig = {\n            // To view\n            formatter: function (val)\n            {\n                if ( !val )\n                {\n                    return '';\n                }\n\n                return val === '' ? val : new Date(val);\n            },\n            // To model\n            parser   : function (val)\n            {\n                if ( !val )\n                {\n                    return '';\n                }\n\n                return moment(val).add(moment(val).utcOffset(), 'm').toDate();\n            }\n        };\n\n        // Methods\n        service.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            defaultConfig = angular.extend({}, defaultConfig, configuration);\n        }\n\n        /**\n         * Service\n         */\n        service.$get = function ()\n        {\n            return defaultConfig;\n        };\n    }\n\n    /** @ngInject */\n    function msDatepickerFix(msDatepickerFixConfig)\n    {\n        return {\n            require : 'ngModel',\n            priority: 1,\n            link    : function (scope, elem, attrs, ngModel)\n            {\n                ngModel.$formatters.push(msDatepickerFixConfig.formatter); // to view\n                ngModel.$parsers.push(msDatepickerFixConfig.parser); // to model\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('msCard', msCardDirective);\n\n    /** @ngInject */\n    function msCardDirective()\n    {\n        return {\n            restrict: 'E',\n            scope   : {\n                templatePath: '=template',\n                card        : '=ngModel',\n                vm          : '=viewModel'\n            },\n            template: '<div class=\"ms-card-content-wrapper\" ng-include=\"templatePath\" onload=\"cardTemplateLoaded()\"></div>',\n            compile : function (tElement)\n            {\n                // Add class\n                tElement.addClass('ms-card');\n\n                return function postLink(scope, iElement)\n                {\n                    // Methods\n                    scope.cardTemplateLoaded = cardTemplateLoaded;\n\n                    //////////\n\n                    /**\n                     * Emit cardTemplateLoaded event\n                     */\n                    function cardTemplateLoaded()\n                    {\n                        scope.$emit('msCard::cardTemplateLoaded', iElement);\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.login', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($stateProvider, $translatePartialLoaderProvider, msNavigationServiceProvider)\n    {\n        // State\n        $stateProvider.state('app.login', {\n            url      : '/login',\n            views    : {\n                'main@'                       : {\n                    templateUrl: 'app/core/layouts/content-only.html',\n                    controller : 'MainController as vm'\n                },\n                'content@app.login': {\n                    templateUrl: 'app/main/login/login.html',\n                    controller : 'LoginController as vm'\n                }\n            },\n            bodyClass: 'login'\n        });\n\n        // Translation\n        $translatePartialLoaderProvider.addPart('app/main/login');\n\n\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.login')\n        .controller('LoginController', LoginController);\n\n    /** @ngInject */\n    function LoginController($state,authService,uiHelper)\n    {\n        var vm = this;\n        vm.login=login;\n        vm.form={};\n\n\n        function login(credentials) {\n            console.log(credentials);\n             $state.go(\"app.home\");\n            // authService.login(credentials).then(function (response) {\n            //     vm.loginForm.$commitViewValue();\n            //     vm.loginForm.$setUntouched();\n            //     vm.loginForm.$setPristine();\n            //     vm.login = {};\n            //     $state.go(\"app.home\");\n            // })\n            // .catch(function (response) {\n            //      console.log(response);\n            //      //uiHelper.showToast(response.data.error.message);\n            // }).finally(function () {\n\n            // });\n\n\n        }\n\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.home', [\n                // 3rd Party Dependencies\n                'datatables'\n            ])\n        .config(config);\n\n    /** @ngInject */\n    function config($stateProvider, $translatePartialLoaderProvider, msNavigationServiceProvider)\n    {\n        // State\n        $stateProvider\n            .state('app.home', {\n                url    : '/home',\n                views  : {\n                    'content@app': {\n                        templateUrl: 'app/main/home/home.html',\n                        controller : 'HomeController as vm'\n                    }\n                }\n            });\n\n        // Translation\n        $translatePartialLoaderProvider.addPart('app/main/home');\n\n\n                // Navigation\n        msNavigationServiceProvider.saveItem('app', {\n            title : 'Mantenedores',\n            group : true,\n            weight: 1\n        });\n\n        msNavigationServiceProvider.saveItem('app.home', {\n            title    : 'Autos',\n            icon     : 'icon-car',\n            state    : 'app.home',\n            translate: 'HOME.TITLE_NAV',\n            weight   : 1\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.home')\n        .controller('HomeController', HomeController);\n\n    /** @ngInject */\n    function HomeController()\n    {\n        var vm = this;\n        vm.dtOptions = {\n            dom       : '<\"top\"f>rt<\"bottom\"<\"left\"<\"length\"l>><\"right\"<\"info\"i><\"pagination\"p>>>',\n            pagingType: 'simple',\n            autoWidth : false,\n            responsive: true\n        };\n\n       \n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .service('fuseTheming', fuseThemingService);\n\n    /** @ngInject */\n    function fuseThemingService($cookies, $log, $mdTheming)\n    {\n        var service = {\n            getRegisteredPalettes: getRegisteredPalettes,\n            getRegisteredThemes  : getRegisteredThemes,\n            setActiveTheme       : setActiveTheme,\n            setThemesList        : setThemesList,\n            themes               : {\n                list  : {},\n                active: {\n                    'name' : '',\n                    'theme': {}\n                }\n            }\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Get registered palettes\n         *\n         * @returns {*}\n         */\n        function getRegisteredPalettes()\n        {\n            return $mdTheming.PALETTES;\n        }\n\n        /**\n         * Get registered themes\n         *\n         * @returns {*}\n         */\n        function getRegisteredThemes()\n        {\n            return $mdTheming.THEMES;\n        }\n\n        /**\n         * Set active theme\n         *\n         * @param themeName\n         */\n        function setActiveTheme(themeName)\n        {\n            // If theme does not exist, fallback to the default theme\n            if ( angular.isUndefined(service.themes.list[themeName]) )\n            {\n                // If there is no theme called \"default\"...\n                if ( angular.isUndefined(service.themes.list.default) )\n                {\n                    $log.error('You must have at least one theme named \"default\"');\n                    return;\n                }\n\n                $log.warn('The theme \"' + themeName + '\" does not exist! Falling back to the \"default\" theme.');\n\n                // Otherwise set theme to default theme\n                service.themes.active.name = 'default';\n                service.themes.active.theme = service.themes.list.default;\n                $cookies.put('selectedTheme', service.themes.active.name);\n\n                return;\n            }\n\n            service.themes.active.name = themeName;\n            service.themes.active.theme = service.themes.list[themeName];\n            $cookies.put('selectedTheme', themeName);\n        }\n\n        /**\n         * Set available themes list\n         *\n         * @param themeList\n         */\n        function setThemesList(themeList)\n        {\n            service.themes.list = themeList;\n        }\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .config(config);\n\n    /** @ngInject */\n    function config($mdThemingProvider, fusePalettes, fuseThemes)\n    {\n        // Inject Cookies Service\n        var $cookies;\n        angular.injector(['ngCookies']).invoke([\n            '$cookies', function (_$cookies)\n            {\n                $cookies = _$cookies;\n            }\n        ]);\n\n        // Check if custom theme exist in cookies\n        var customTheme = $cookies.getObject('customTheme');\n        if ( customTheme )\n        {\n            fuseThemes['custom'] = customTheme;\n        }\n\n        $mdThemingProvider.alwaysWatchTheme(true);\n\n        // Define custom palettes\n        angular.forEach(fusePalettes, function (palette)\n        {\n            $mdThemingProvider.definePalette(palette.name, palette.options);\n        });\n\n        // Register custom themes\n        angular.forEach(fuseThemes, function (theme, themeName)\n        {\n            $mdThemingProvider.theme(themeName)\n                .primaryPalette(theme.primary.name, theme.primary.hues)\n                .accentPalette(theme.accent.name, theme.accent.hues)\n                .warnPalette(theme.warn.name, theme.warn.hues)\n                .backgroundPalette(theme.background.name, theme.background.hues);\n        });\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    var fuseThemes = {\n        default  : {\n            primary   : {\n                name: 'fuse-paleblue',\n                hues: {\n                    'default': '700',\n                    'hue-1'  : '500',\n                    'hue-2'  : '600',\n                    'hue-3'  : '400'\n                }\n            },\n            accent    : {\n                name: 'light-blue',\n                hues: {\n                    'default': '600',\n                    'hue-1'  : '400',\n                    'hue-2'  : '700',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {\n                name: 'red'\n            },\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : 'A100',\n                    'hue-2'  : '100',\n                    'hue-3'  : '300'\n                }\n            }\n        },\n        'pinkTheme': {\n            primary   : {\n                name: 'blue-grey',\n                hues: {\n                    'default': '800',\n                    'hue-1'  : '600',\n                    'hue-2'  : '400',\n                    'hue-3'  : 'A100'\n                }\n            },\n            accent    : {\n                name: 'pink',\n                hues: {\n                    'default': '400',\n                    'hue-1'  : '300',\n                    'hue-2'  : '600',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {\n                name: 'blue'\n            },\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : 'A100',\n                    'hue-2'  : '100',\n                    'hue-3'  : '300'\n                }\n            }\n        },\n        'tealTheme': {\n            primary   : {\n                name: 'fuse-blue',\n                hues: {\n                    'default': '900',\n                    'hue-1'  : '600',\n                    'hue-2'  : '500',\n                    'hue-3'  : 'A100'\n                }\n            },\n            accent    : {\n                name: 'teal',\n                hues: {\n                    'default': '500',\n                    'hue-1'  : '400',\n                    'hue-2'  : '600',\n                    'hue-3'  : 'A100'\n                }\n            },\n            warn      : {\n                name: 'deep-orange'\n            },\n            background: {\n                name: 'grey',\n                hues: {\n                    'default': 'A100',\n                    'hue-1'  : 'A100',\n                    'hue-2'  : '100',\n                    'hue-3'  : '300'\n                }\n            }\n        }\n    };\n\n    angular\n        .module('app.core')\n        .constant('fuseThemes', fuseThemes);\n})();\n(function () {\n    'use strict';\n\n    var fusePalettes = [\n        {\n            name: 'fuse-blue',\n            options: {\n                '50': '#ebf1fa',\n                '100': '#c2d4ef',\n                '200': '#9ab8e5',\n                '300': '#78a0dc',\n                '400': '#5688d3',\n                '500': '#3470ca',\n                '600': '#2e62b1',\n                '700': '#275498',\n                '800': '#21467e',\n                '900': '#1a3865',\n                'A100': '#c2d4ef',\n                'A200': '#9ab8e5',\n                'A400': '#5688d3',\n                'A700': '#275498',\n                'contrastDefaultColor': 'light',\n                'contrastDarkColors': '50 100 200 A100',\n                'contrastStrongLightColors': '300 400'\n            }\n        },\n        {\n            name: 'fuse-paleblue',\n            options: {\n                '50': '#ececee',\n                '100': '#c5c6cb',\n                '200': '#9ea1a9',\n                '300': '#7d818c',\n                '400': '#5c616f',\n                '500': '#3c4252',\n                '600': '#353a48',\n                '700': '#2d323e',\n                '800': '#262933',\n                '900': '#1e2129',\n                'A100': '#c5c6cb',\n                'A200': '#9ea1a9',\n                'A400': '#5c616f',\n                'A700': '#2d323e',\n                'contrastDefaultColor': 'light',\n                'contrastDarkColors': '50 100 200 A100',\n                'contrastStrongLightColors': '300 400'\n            }\n        }\n    ];\n\n    angular\n        .module('app.core')\n        .constant('fusePalettes', fusePalettes);\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('fuseGenerator', fuseGeneratorService);\n\n    /** @ngInject */\n    function fuseGeneratorService($cookies, $log, fuseTheming)\n    {\n        // Storage for simplified themes object\n        var themes = {};\n\n        var service = {\n            generate: generate,\n            rgba    : rgba\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Generate less variables for each theme from theme's\n         * palette by using material color naming conventions\n         */\n        function generate()\n        {\n            // Get registered themes and palettes and copy\n            // them so we don't modify the original objects\n            var registeredThemes = angular.copy(fuseTheming.getRegisteredThemes());\n            var registeredPalettes = angular.copy(fuseTheming.getRegisteredPalettes());\n\n            // First, create a simplified object that stores\n            // all registered themes and their colors\n\n            // Iterate through registered themes\n            angular.forEach(registeredThemes, function (registeredTheme)\n            {\n                themes[registeredTheme.name] = {};\n\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(registeredTheme.colors, function (colorType, colorTypeName)\n                {\n                    themes[registeredTheme.name][colorTypeName] = {\n                        'name'  : colorType.name,\n                        'levels': {\n                            'default': {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues.default].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues.default].contrast, 4)\n                            },\n                            'hue1'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-1']].contrast, 4)\n                            },\n                            'hue2'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-2']].contrast, 4)\n                            },\n                            'hue3'   : {\n                                'color'    : rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].value),\n                                'contrast1': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 1),\n                                'contrast2': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 2),\n                                'contrast3': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 3),\n                                'contrast4': rgba(registeredPalettes[colorType.name][colorType.hues['hue-3']].contrast, 4)\n                            }\n                        }\n                    };\n                });\n            });\n\n            // Process themes one more time and then store them in the service for external use\n            processAndStoreThemes(themes);\n\n            // Iterate through simplified themes\n            // object and create style variables\n            var styleVars = {};\n\n            // Iterate through registered themes\n            angular.forEach(themes, function (theme, themeName)\n            {\n                styleVars = {};\n                styleVars['@themeName'] = themeName;\n\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(theme, function (colorTypes, colorTypeName)\n                {\n                    // Iterate through color levels (default, hue1, hue2 & hue3)\n                    angular.forEach(colorTypes.levels, function (colors, colorLevelName)\n                    {\n                        // Iterate through color name (color, contrast1, contrast2, contrast3 & contrast4)\n                        angular.forEach(colors, function (color, colorName)\n                        {\n                            styleVars['@' + colorTypeName + ucfirst(colorLevelName) + ucfirst(colorName)] = color;\n                        });\n                    });\n                });\n\n                // Render styles\n                render(styleVars);\n            });\n        }\n\n        // ---------------------------\n        //  INTERNAL HELPER FUNCTIONS\n        // ---------------------------\n\n        /**\n         * Process and store themes for global use\n         *\n         * @param _themes\n         */\n        function processAndStoreThemes(_themes)\n        {\n            // Here we will go through every registered theme one more time\n            // and try to simplify their objects as much as possible for\n            // easier access to their properties.\n            var themes = angular.copy(_themes);\n\n            // Iterate through themes\n            angular.forEach(themes, function (theme)\n            {\n                // Iterate through color types (primary, accent, warn & background)\n                angular.forEach(theme, function (colorType, colorTypeName)\n                {\n                    theme[colorTypeName] = colorType.levels;\n                    theme[colorTypeName].color = colorType.levels.default.color;\n                    theme[colorTypeName].contrast1 = colorType.levels.default.contrast1;\n                    theme[colorTypeName].contrast2 = colorType.levels.default.contrast2;\n                    theme[colorTypeName].contrast3 = colorType.levels.default.contrast3;\n                    theme[colorTypeName].contrast4 = colorType.levels.default.contrast4;\n                    delete theme[colorTypeName].default;\n                });\n            });\n\n            // Store themes and set selected theme for the first time\n            fuseTheming.setThemesList(themes);\n\n            // Remember selected theme.\n            var selectedTheme = $cookies.get('selectedTheme');\n\n            if ( selectedTheme )\n            {\n                fuseTheming.setActiveTheme(selectedTheme);\n            }\n            else\n            {\n                fuseTheming.setActiveTheme('default');\n            }\n        }\n\n\n        /**\n         * Render css files\n         *\n         * @param styleVars\n         */\n        function render(styleVars)\n        {\n            var cssTemplate = '/* Content hack because they wont fix */\\n/* https://github.com/angular/material/pull/8067 */\\n[md-theme=\"@themeName\"] md-content.md-hue-1,\\nmd-content.md-@themeName-theme.md-hue-1 {\\n    color: @backgroundHue1Contrast1;\\n    background-color: @backgroundHue1Color;\\n}\\n\\n[md-theme=\"@themeName\"] md-content.md-hue-2,\\nmd-content.md-@themeName-theme.md-hue-2 {\\n    color: @backgroundHue2Contrast1;\\n    background-color: @backgroundHue2Color;\\n}\\n\\n[md-theme=\"@themeName\"] md-content.md-hue-3,\\n md-content.md-@themeName-theme.md-hue-3 {\\n    color: @backgroundHue3Contrast1;\\n    background-color: @backgroundHue3Color;\\n}\\n\\n/* Text Colors */\\n[md-theme=\"@themeName\"] a {\\n    color: @accentDefaultColor;\\n}\\n\\n[md-theme=\"@themeName\"] .secondary-text,\\n[md-theme=\"@themeName\"] .icon {\\n    color: @backgroundDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .hint-text,\\n[md-theme=\"@themeName\"] .disabled-text {\\n    color: @backgroundDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .fade-text,\\n[md-theme=\"@themeName\"] .divider {\\n    color: @backgroundDefaultContrast4;\\n}\\n\\n/* Primary */\\n[md-theme=\"@themeName\"] .md-primary-bg {\\n    background-color: @primaryDefaultColor;\\n    color: @primaryDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .icon {\\n    color: @primaryDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .disabled-text {\\n    color: @primaryDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg .divider {\\n    color: @primaryDefaultContrast4;\\n}\\n\\n/* Primary, Hue-1 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 {\\n    background-color: @primaryHue1Color;\\n    color: @primaryHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .icon {\\n    color: @primaryHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .disabled-text {\\n    color: @primaryHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-1 .divider {\\n    color: @primaryHue1Contrast4;\\n}\\n\\n/* Primary, Hue-2 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 {\\n    background-color: @primaryHue2Color;\\n    color: @primaryHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .icon {\\n    color: @primaryHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .disabled-text {\\n    color: @primaryHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-2 .divider {\\n    color: @primaryHue2Contrast4;\\n}\\n\\n/* Primary, Hue-3 */\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 {\\n    background-color: @primaryHue3Color;\\n    color: @primaryHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .icon {\\n    color: @primaryHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .disabled-text {\\n    color: @primaryHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-primary-bg.md-hue-3 .divider {\\n    color: @primaryHue3Contrast4;\\n}\\n\\n/* Primary foreground */\\n[md-theme=\"@themeName\"] .md-primary-fg {\\n    color: @primaryDefaultColor !important;\\n}\\n\\n/* Primary foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-1 {\\n    color: @primaryHue1Color !important;\\n}\\n\\n/* Primary foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-2 {\\n    color: @primaryHue2Color !important;\\n}\\n\\n/* Primary foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-primary-fg.md-hue-3 {\\n    color: @primaryHue3Color !important;\\n}\\n\\n/* Accent */\\n[md-theme=\"@themeName\"] .md-accent-bg {\\n    background-color: @accentDefaultColor;\\n    color: @accentDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .icon {\\n    color: @accentDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .disabled-text {\\n    color: @accentDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg .divider {\\n    color: @accentDefaultContrast4;\\n}\\n\\n/* Accent, Hue-1 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 {\\n    background-color: @accentHue1Color;\\n    color: @accentHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .icon {\\n    color: @accentHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .disabled-text {\\n    color: @accentHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-1 .divider {\\n    color: @accentHue1Contrast4;\\n}\\n\\n/* Accent, Hue-2 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 {\\n    background-color: @accentHue2Color;\\n    color: @accentHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .icon {\\n    color: @accentHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .disabled-text {\\n    color: @accentHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-2 .divider {\\n    color: @accentHue2Contrast4;\\n}\\n\\n/* Accent, Hue-3 */\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 {\\n    background-color: @accentHue3Color;\\n    color: @accentHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .icon {\\n    color: @accentHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .disabled-text {\\n    color: @accentHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-accent-bg.md-hue-3 .divider {\\n    color: @accentHue3Contrast4;\\n}\\n\\n/* Accent foreground */\\n[md-theme=\"@themeName\"] .md-accent-fg {\\n    color: @accentDefaultColor !important;\\n}\\n\\n/* Accent foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-1 {\\n    color: @accentHue1Color !important;\\n}\\n\\n/* Accent foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-2 {\\n    color: @accentHue2Color !important;\\n}\\n\\n/* Accent foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-accent-fg.md-hue-3 {\\n    color: @accentHue3Color !important;\\n}\\n\\n/* Warn */\\n[md-theme=\"@themeName\"] .md-warn-bg {\\n    background-color: @warnDefaultColor;\\n    color: @warnDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .icon {\\n    color: @warnDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .disabled-text {\\n    color: @warnDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg .divider {\\n    color: @warnDefaultContrast4;\\n}\\n\\n/* Warn, Hue-1 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 {\\n    background-color: @warnHue1Color;\\n    color: @warnHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .icon {\\n    color: @warnHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .disabled-text {\\n    color: @warnHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-1 .divider {\\n    color: @warnHue1Contrast4;\\n}\\n\\n/* Warn, Hue-2 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 {\\n    background-color: @warnHue2Color;\\n    color: @warnHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .icon {\\n    color: @warnHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .disabled-text {\\n    color: @warnHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-2 .divider {\\n    color: @warnHue2Contrast4;\\n}\\n\\n/* Warn, Hue-3 */\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 {\\n    background-color: @warnHue3Color;\\n    color: @warnHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .icon {\\n    color: @warnHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .disabled-text {\\n    color: @warnHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-warn-bg.md-hue-3 .divider {\\n    color: @warnHue3Contrast4;\\n}\\n\\n/* Warn foreground */\\n[md-theme=\"@themeName\"] .md-warn-fg {\\n    color: @warnDefaultColor !important;\\n}\\n\\n/* Warn foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-1 {\\n    color: @warnHue1Color !important;\\n}\\n\\n/* Warn foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-2 {\\n    color: @warnHue2Color !important;\\n}\\n\\n/* Warn foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-warn-fg.md-hue-3 {\\n    color: @warnHue3Color !important;\\n}\\n\\n/* Background */\\n[md-theme=\"@themeName\"] .md-background-bg {\\n    background-color: @backgroundDefaultColor;\\n    color: @backgroundDefaultContrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg .icon {\\n    color: @backgroundDefaultContrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg .disabled-text {\\n    color: @backgroundDefaultContrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg .divider {\\n    color: @backgroundDefaultContrast4;\\n}\\n\\n/* Background, Hue-1 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 {\\n    background-color: @backgroundHue1Color;\\n    color: @backgroundHue1Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .icon {\\n    color: @backgroundHue1Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .disabled-text {\\n    color: @backgroundHue1Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-1 .divider {\\n    color: @backgroundHue1Contrast4;\\n}\\n\\n/* Background, Hue-2 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 {\\n    background-color: @backgroundHue2Color;\\n    color: @backgroundHue2Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .icon {\\n    color: @backgroundHue2Contrast2;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .disabled-text {\\n    color: @backgroundHue2Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-2 .divider {\\n    color: @backgroundHue2Contrast4;\\n}\\n\\n/* Background, Hue-3 */\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 {\\n    background-color: @backgroundHue3Color;\\n    color: @backgroundHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .secondary-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .icon {\\n    color: @backgroundHue3Contrast1;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .hint-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .disabled-text {\\n    color: @backgroundHue3Contrast3;\\n}\\n\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .fade-text,\\n[md-theme=\"@themeName\"] .md-background-bg.md-hue-3 .divider {\\n    color: @backgroundHue3Contrast4;\\n}\\n\\n/* Background foreground */\\n[md-theme=\"@themeName\"] .md-background-fg {\\n    color: @backgroundDefaultColor !important;\\n}\\n\\n/* Background foreground, Hue-1 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-1 {\\n    color: @backgroundHue1Color !important;\\n}\\n\\n/* Background foreground, Hue-2 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-2 {\\n    color: @backgroundHue2Color !important;\\n}\\n\\n/* Background foreground, Hue-3 */\\n[md-theme=\"@themeName\"] .md-background-fg.md-hue-3 {\\n    color: @backgroundHue3Color !important;\\n}';\n\n            var regex = new RegExp(Object.keys(styleVars).join('|'), 'gi');\n            var css = cssTemplate.replace(regex, function (matched)\n            {\n                return styleVars[matched];\n            });\n\n            var headEl = angular.element('head');\n            var styleEl = angular.element('<style type=\"text/css\"></style>');\n            styleEl.html(css);\n            headEl.append(styleEl);\n        }\n\n        /**\n         * Convert color array to rgb/rgba\n         * Also apply contrasts if needed\n         *\n         * @param color\n         * @param _contrastLevel\n         * @returns {string}\n         */\n        function rgba(color, _contrastLevel)\n        {\n            var contrastLevel = _contrastLevel || false;\n\n            // Convert 255,255,255,0.XX to 255,255,255\n            // According to Google's Material design specs, white primary\n            // text must have opacity of 1 and we will fix that here\n            // because Angular Material doesn't care about that spec\n            if ( color.length === 4 && color[0] === 255 && color[1] === 255 && color[2] === 255 )\n            {\n                color.splice(3, 4);\n            }\n\n            // If contrast level provided, apply it to the current color\n            if ( contrastLevel )\n            {\n                color = applyContrast(color, contrastLevel);\n            }\n\n            // Convert color array to color string (rgb/rgba)\n            if ( color.length === 3 )\n            {\n                return 'rgb(' + color.join(',') + ')';\n            }\n            else if ( color.length === 4 )\n            {\n                return 'rgba(' + color.join(',') + ')';\n            }\n            else\n            {\n                $log.error('Invalid number of arguments supplied in the color array: ' + color.length + '\\n' + 'The array must have 3 or 4 colors.');\n            }\n        }\n\n        /**\n         * Apply given contrast level to the given color\n         *\n         * @param color\n         * @param contrastLevel\n         */\n        function applyContrast(color, contrastLevel)\n        {\n            var contrastLevels = {\n                'white': {\n                    '1': '1',\n                    '2': '0.7',\n                    '3': '0.3',\n                    '4': '0.12'\n                },\n                'black': {\n                    '1': '0.87',\n                    '2': '0.54',\n                    '3': '0.26',\n                    '4': '0.12'\n                }\n            };\n\n            // If white\n            if ( color[0] === 255 && color[1] === 255 && color[2] === 255 )\n            {\n                color[3] = contrastLevels.white[contrastLevel];\n            }\n            // If black\n            else if ( color[0] === 0 && color[1] === 0 && color[2] === 0 )\n            {\n                color[3] = contrastLevels.black[contrastLevel];\n            }\n\n            return color;\n        }\n\n        /**\n         * Uppercase first\n         */\n        function ucfirst(string)\n        {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .controller('MsThemeOptionsController', MsThemeOptionsController)\n        .directive('msThemeOptions', msThemeOptions);\n\n    /** @ngInject */\n    function MsThemeOptionsController($cookies, fuseTheming)\n    {\n        var vm = this;\n\n        // Data\n        vm.themes = fuseTheming.themes;\n\n        vm.layoutModes = [\n            {\n                label: 'Boxed',\n                value: 'boxed'\n            },\n            {\n                label: 'Wide',\n                value: 'wide'\n            }\n        ];\n        vm.layoutStyles = [\n            {\n                label : 'Vertical Navigation',\n                value : 'verticalNavigation',\n                figure: '/assets/images/theme-options/vertical-nav.jpg'\n            },\n            {\n                label : 'Vertical Navigation with Fullwidth Toolbar',\n                value : 'verticalNavigationFullwidthToolbar',\n                figure: '/assets/images/theme-options/vertical-nav-with-full-toolbar.jpg'\n            },\n            {\n                label : 'Vertical Navigation with Fullwidth Toolbar 2',\n                value : 'verticalNavigationFullwidthToolbar2',\n                figure: '/assets/images/theme-options/vertical-nav-with-full-toolbar-2.jpg'\n            },\n            {\n                label : 'Horizontal Navigation',\n                value : 'horizontalNavigation',\n                figure: '/assets/images/theme-options/horizontal-nav.jpg'\n            },\n            {\n                label : 'Content with Toolbar',\n                value : 'contentWithToolbar',\n                figure: '/assets/images/theme-options/content-with-toolbar.jpg'\n            },\n            {\n                label : 'Content Only',\n                value : 'contentOnly',\n                figure: '/assets/images/theme-options/content-only.jpg'\n            },\n        ];\n\n        vm.layoutMode = 'wide';\n        vm.layoutStyle = $cookies.get('layoutStyle') || 'verticalNavigation';\n\n        // Methods\n        vm.setActiveTheme = setActiveTheme;\n        vm.getActiveTheme = getActiveTheme;\n        vm.updateLayoutMode = updateLayoutMode;\n        vm.updateLayoutStyle = updateLayoutStyle;\n\n        //////////\n\n        /**\n         * Set active theme\n         *\n         * @param themeName\n         */\n        function setActiveTheme(themeName)\n        {\n            fuseTheming.setActiveTheme(themeName);\n        }\n\n        /**\n         * Get active theme\n         *\n         * @returns {service.themes.active|{name, theme}}\n         */\n        function getActiveTheme()\n        {\n            return fuseTheming.themes.active;\n        }\n\n        /**\n         * Update layout mode\n         */\n        function updateLayoutMode()\n        {\n            var bodyEl = angular.element('body');\n\n            // Update class on body element\n            bodyEl.toggleClass('boxed', (vm.layoutMode === 'boxed'));\n        }\n\n        /**\n         * Update layout style\n         */\n        function updateLayoutStyle()\n        {\n            // Update the cookie\n            $cookies.put('layoutStyle', vm.layoutStyle);\n\n            // Reload the page to apply the changes\n            location.reload();\n        }\n    }\n\n    /** @ngInject */\n    function msThemeOptions($mdSidenav)\n    {\n        return {\n            restrict   : 'E',\n            scope      : {},\n            controller : 'MsThemeOptionsController as vm',\n            templateUrl: 'app/core/theme-options/theme-options.html',\n            compile    : function (tElement)\n            {\n                tElement.addClass('ms-theme-options');\n\n                return function postLink(scope)\n                {\n                    /**\n                     * Toggle options sidenav\n                     */\n                    function toggleOptionsSidenav()\n                    {\n                        // Toggle the fuse theme options panel\n                        $mdSidenav('fuse-theme-options').toggle();\n                    }\n\n                    // Expose the toggle function\n                    scope.toggleOptionsSidenav = toggleOptionsSidenav;\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('msUtils', msUtils);\n\n    /** @ngInject */\n    function msUtils($window)\n    {\n        // Private variables\n        var mobileDetect = new MobileDetect($window.navigator.userAgent),\n            browserInfo = null;\n\n        var service = {\n            exists       : exists,\n            detectBrowser: detectBrowser,\n            guidGenerator: guidGenerator,\n            isMobile     : isMobile,\n            toggleInArray: toggleInArray\n        };\n\n        return service;\n\n        //////////\n\n        /**\n         * Check if item exists in a list\n         *\n         * @param item\n         * @param list\n         * @returns {boolean}\n         */\n        function exists(item, list)\n        {\n            return list.indexOf(item) > -1;\n        }\n\n        /**\n         * Returns browser information\n         * from user agent data\n         *\n         * Found at http://www.quirksmode.org/js/detect.html\n         * but modified and updated to fit for our needs\n         */\n        function detectBrowser()\n        {\n            // If we already tested, do not test again\n            if ( browserInfo )\n            {\n                return browserInfo;\n            }\n\n            var browserData = [\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Edge',\n                    versionSearch: 'Edge',\n                    identity     : 'Edge'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Chrome',\n                    identity : 'Chrome'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'OmniWeb',\n                    versionSearch: 'OmniWeb/',\n                    identity     : 'OmniWeb'\n                },\n                {\n                    string       : $window.navigator.vendor,\n                    subString    : 'Apple',\n                    versionSearch: 'Version',\n                    identity     : 'Safari'\n                },\n                {\n                    prop    : $window.opera,\n                    identity: 'Opera'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'iCab',\n                    identity : 'iCab'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'KDE',\n                    identity : 'Konqueror'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Firefox',\n                    identity : 'Firefox'\n                },\n                {\n                    string   : $window.navigator.vendor,\n                    subString: 'Camino',\n                    identity : 'Camino'\n                },\n                {\n                    string   : $window.navigator.userAgent,\n                    subString: 'Netscape',\n                    identity : 'Netscape'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'MSIE',\n                    identity     : 'Explorer',\n                    versionSearch: 'MSIE'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Trident/7',\n                    identity     : 'Explorer',\n                    versionSearch: 'rv'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Gecko',\n                    identity     : 'Mozilla',\n                    versionSearch: 'rv'\n                },\n                {\n                    string       : $window.navigator.userAgent,\n                    subString    : 'Mozilla',\n                    identity     : 'Netscape',\n                    versionSearch: 'Mozilla'\n                }\n            ];\n\n            var osData = [\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Win',\n                    identity : 'Windows'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Mac',\n                    identity : 'Mac'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Linux',\n                    identity : 'Linux'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPhone',\n                    identity : 'iPhone'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPod',\n                    identity : 'iPod'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'iPad',\n                    identity : 'iPad'\n                },\n                {\n                    string   : $window.navigator.platform,\n                    subString: 'Android',\n                    identity : 'Android'\n                }\n            ];\n\n            var versionSearchString = '';\n\n            function searchString(data)\n            {\n                for ( var i = 0; i < data.length; i++ )\n                {\n                    var dataString = data[i].string;\n                    var dataProp = data[i].prop;\n\n                    versionSearchString = data[i].versionSearch || data[i].identity;\n\n                    if ( dataString )\n                    {\n                        if ( dataString.indexOf(data[i].subString) !== -1 )\n                        {\n                            return data[i].identity;\n\n                        }\n                    }\n                    else if ( dataProp )\n                    {\n                        return data[i].identity;\n                    }\n                }\n            }\n\n            function searchVersion(dataString)\n            {\n                var index = dataString.indexOf(versionSearchString);\n\n                if ( index === -1 )\n                {\n                    return;\n                }\n\n                return parseInt(dataString.substring(index + versionSearchString.length + 1));\n            }\n\n            var browser = searchString(browserData) || 'unknown-browser';\n            var version = searchVersion($window.navigator.userAgent) || searchVersion($window.navigator.appVersion) || 'unknown-version';\n            var os = searchString(osData) || 'unknown-os';\n\n            // Prepare and store the object\n            browser = browser.toLowerCase();\n            version = browser + '-' + version;\n            os = os.toLowerCase();\n\n            browserInfo = {\n                browser: browser,\n                version: version,\n                os     : os\n            };\n\n            return browserInfo;\n        }\n\n        /**\n         * Generates a globally unique id\n         *\n         * @returns {*}\n         */\n        function guidGenerator()\n        {\n            var S4 = function ()\n            {\n                return (((1 + Math.random()) * 0x10000) || 0).toString(16).substring(1);\n            };\n            return (S4() + S4() + S4() + S4() + S4() + S4());\n        }\n\n        /**\n         * Return if current device is a\n         * mobile device or not\n         */\n        function isMobile()\n        {\n            return mobileDetect.mobile();\n        }\n\n        /**\n         * Toggle in array (push or splice)\n         *\n         * @param item\n         * @param array\n         */\n        function toggleInArray(item, array)\n        {\n            if ( array.indexOf(item) === -1 )\n            {\n                array.push(item);\n            }\n            else\n            {\n                array.splice(array.indexOf(item), 1);\n            }\n        }\n    }\n}());\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('msApi', msApiProvider);\n\n    /** @ngInject **/\n    function msApiProvider()\n    {\n        /* ----------------- */\n        /* Provider          */\n        /* ----------------- */\n        var provider = this;\n\n        // Inject the $log service\n        var $log = angular.injector(['ng']).get('$log');\n\n        // Data\n        var baseUrl = '';\n        var api = [];\n\n        // Methods\n        provider.setBaseUrl = setBaseUrl;\n        provider.getBaseUrl = getBaseUrl;\n        provider.getApiObject = getApiObject;\n        provider.register = register;\n\n        //////////\n\n        /**\n         * Set base url for API endpoints\n         *\n         * @param url {string}\n         */\n        function setBaseUrl(url)\n        {\n            baseUrl = url;\n        }\n\n        /**\n         * Return the base url\n         *\n         * @returns {string}\n         */\n        function getBaseUrl()\n        {\n            return baseUrl;\n        }\n\n        /**\n         * Return the api object\n         *\n         * @returns {object}\n         */\n        function getApiObject()\n        {\n            return api;\n        }\n\n        /**\n         * Register API endpoint\n         *\n         * @param key\n         * @param resource\n         */\n        function register(key, resource)\n        {\n            if ( !angular.isString(key) )\n            {\n                $log.error('\"path\" must be a string (eg. `dashboard.project`)');\n                return;\n            }\n\n            if ( !angular.isArray(resource) )\n            {\n                $log.error('\"resource\" must be an array and it must follow $resource definition');\n                return;\n            }\n\n            // Store the API object\n            api[key] = {\n                url          : baseUrl + (resource[0] || ''),\n                paramDefaults: resource[1] || [],\n                actions      : resource[2] || [],\n                options      : resource[3] || {}\n            };\n        }\n\n        /* ----------------- */\n        /* Service           */\n        /* ----------------- */\n        this.$get = function ($log, $q, $resource, $rootScope)\n        {\n            // Data\n\n            // Methods\n            var service = {\n                setBaseUrl: setBaseUrl,\n                getBaseUrl: getBaseUrl,\n                register  : register,\n                resolve   : resolve,\n                request   : request\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Resolve an API endpoint\n             *\n             * @param action {string}\n             * @param parameters {object}\n             * @returns {promise|boolean}\n             */\n            function resolve(action, parameters)\n            {\n                // Emit an event\n                $rootScope.$broadcast('msApi::resolveStart');\n                \n                var actionParts = action.split('@'),\n                    resource = actionParts[0],\n                    method = actionParts[1],\n                    params = parameters || {};\n\n                if ( !resource || !method )\n                {\n                    $log.error('msApi.resolve requires correct action parameter (resourceName@methodName)');\n                    return false;\n                }\n\n                // Create a new deferred object\n                var deferred = $q.defer();\n\n                // Get the correct resource definition from api object\n                var apiObject = api[resource];\n\n                if ( !apiObject )\n                {\n                    $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                    deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n                }\n                else\n                {\n                    // Generate the $resource object based on the stored API object\n                    var resourceObject = $resource(apiObject.url, apiObject.paramDefaults, apiObject.actions, apiObject.options);\n\n                    // Make the call...\n                    resourceObject[method](params,\n\n                        // Success\n                        function (response)\n                        {\n                            deferred.resolve(response);\n\n                            // Emit an event\n                            $rootScope.$broadcast('msApi::resolveSuccess');\n                        },\n\n                        // Error\n                        function (response)\n                        {\n                            deferred.reject(response);\n\n                            // Emit an event\n                            $rootScope.$broadcast('msApi::resolveError');\n                        }\n                    );\n                }\n\n                // Return the promise\n                return deferred.promise;\n            }\n\n            /**\n             * Make a request to an API endpoint\n             *\n             * @param action {string}\n             * @param [parameters] {object}\n             * @param [success] {function}\n             * @param [error] {function}\n             *\n             * @returns {promise|boolean}\n             */\n            function request(action, parameters, success, error)\n            {\n                // Emit an event\n                $rootScope.$broadcast('msApi::requestStart');\n                \n                var actionParts = action.split('@'),\n                    resource = actionParts[0],\n                    method = actionParts[1],\n                    params = parameters || {};\n\n                if ( !resource || !method )\n                {\n                    $log.error('msApi.resolve requires correct action parameter (resourceName@methodName)');\n                    return false;\n                }\n\n                // Create a new deferred object\n                var deferred = $q.defer();\n\n                // Get the correct resource definition from api object\n                var apiObject = api[resource];\n\n                if ( !apiObject )\n                {\n                    $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                    deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n                }\n                else\n                {\n                    // Generate the $resource object based on the stored API object\n                    var resourceObject = $resource(apiObject.url, apiObject.paramDefaults, apiObject.actions, apiObject.options);\n\n                    // Make the call...\n                    resourceObject[method](params,\n\n                        // SUCCESS\n                        function (response)\n                        {\n                            // Emit an event\n                            $rootScope.$broadcast('msApi::requestSuccess');\n                            \n                            // Resolve the promise\n                            deferred.resolve(response);\n\n                            // Call the success function if there is one\n                            if ( angular.isDefined(success) && angular.isFunction(success) )\n                            {\n                                success(response);\n                            }\n                        },\n\n                        // ERROR\n                        function (response)\n                        {\n                            // Emit an event\n                            $rootScope.$broadcast('msApi::requestError');\n                            \n                            // Reject the promise\n                            deferred.reject(response);\n\n                            // Call the error function if there is one\n                            if ( angular.isDefined(error) && angular.isFunction(error) )\n                            {\n                                error(response);\n                            }\n                        }\n                    );\n                }\n\n                // Return the promise\n                return deferred.promise;\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .factory('apiResolver', apiResolverService);\n\n    /** @ngInject */\n    function apiResolverService($q, $log, api)\n    {\n        var service = {\n            resolve: resolve\n        };\n\n        return service;\n\n        //////////\n        /**\n         * Resolve api\n         * @param action\n         * @param parameters\n         */\n        function resolve(action, parameters)\n        {\n            var actionParts = action.split('@'),\n                resource = actionParts[0],\n                method = actionParts[1],\n                params = parameters || {};\n\n            if ( !resource || !method )\n            {\n                $log.error('apiResolver.resolve requires correct action parameter (ResourceName@methodName)');\n                return false;\n            }\n\n            // Create a new deferred object\n            var deferred = $q.defer();\n\n            // Get the correct api object from api service\n            var apiObject = getApiObject(resource);\n\n            if ( !apiObject )\n            {\n                $log.error('Resource \"' + resource + '\" is not defined in the api service!');\n                deferred.reject('Resource \"' + resource + '\" is not defined in the api service!');\n            }\n            else\n            {\n                apiObject[method](params,\n\n                    // Success\n                    function (response)\n                    {\n                        deferred.resolve(response);\n                    },\n\n                    // Error\n                    function (response)\n                    {\n                        deferred.reject(response);\n                    }\n                );\n            }\n\n            // Return the promise\n            return deferred.promise;\n        }\n\n        /**\n         * Get correct api object\n         *\n         * @param resource\n         * @returns {*}\n         */\n        function getApiObject(resource)\n        {\n            // Split the resource in case if we have a dot notated object\n            var resourceParts = resource.split('.'),\n                apiObject = api;\n\n            // Loop through the resource parts and go all the way through\n            // the api object and return the correct one\n            for ( var l = 0; l < resourceParts.length; l++ )\n            {\n                if ( angular.isUndefined(apiObject[resourceParts[l]]) )\n                {\n                    $log.error('Resource part \"' + resourceParts[l] + '\" is not defined!');\n                    apiObject = false;\n                    break;\n                }\n\n                apiObject = apiObject[resourceParts[l]];\n            }\n\n            if ( !apiObject )\n            {\n                return false;\n            }\n\n            return apiObject;\n        }\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByTags', filterByTags)\n        .filter('filterSingleByTags', filterSingleByTags);\n\n    /** @ngInject */\n    function filterByTags()\n    {\n        return function (items, tags)\n        {\n            if ( items.length === 0 || tags.length === 0 )\n            {\n                return items;\n            }\n\n            var filtered = [];\n\n            items.forEach(function (item)\n            {\n                var match = tags.every(function (tag)\n                {\n                    var tagExists = false;\n\n                    item.tags.forEach(function (itemTag)\n                    {\n                        if ( itemTag.name === tag.name )\n                        {\n                            tagExists = true;\n                            return;\n                        }\n                    });\n\n                    return tagExists;\n                });\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n            });\n\n            return filtered;\n        };\n    }\n\n    /** @ngInject */\n    function filterSingleByTags()\n    {\n        return function (itemTags, tags)\n        {\n            if ( itemTags.length === 0 || tags.length === 0 )\n            {\n                return;\n            }\n\n            if ( itemTags.length < tags.length )\n            {\n                return [];\n            }\n\n            var filtered = [];\n\n            var match = tags.every(function (tag)\n            {\n                var tagExists = false;\n\n                itemTags.forEach(function (itemTag)\n                {\n                    if ( itemTag.name === tag.name )\n                    {\n                        tagExists = true;\n                        return;\n                    }\n                });\n\n                return tagExists;\n            });\n\n            if ( match )\n            {\n                filtered.push(itemTags);\n            }\n\n            return filtered;\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByPropIds', filterByPropIds);\n\n    /** @ngInject */\n    function filterByPropIds()\n    {\n        return function (items, parameter, ids)\n        {\n            if ( items.length === 0 || !ids || ids.length === 0 )\n            {\n                return items;\n            }\n\n            var filtered = [];\n\n            for ( var i = 0; i < items.length; i++ )\n            {\n                var item = items[i];\n                var match = false;\n\n                for ( var j = 0; j < ids.length; j++ )\n                {\n                    var id = ids[j];\n                    if ( item[parameter].indexOf(id) > -1 )\n                    {\n                        match = true;\n                        break;\n                    }\n                }\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n\n            }\n\n            return filtered;\n\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('filterByIds', filterByIds);\n\n    /** @ngInject */\n    function filterByIds()\n    {\n        return function (items, ids)\n        {\n\n            if ( items.length === 0 || !ids )\n            {\n                return items;\n            }\n\n            if ( ids.length === 0 )\n            {\n                return [];\n            }\n\n            var filtered = [];\n\n            for ( var i = 0; i < items.length; i++ )\n            {\n                var item = items[i];\n                var match = false;\n\n                for ( var j = 0; j < ids.length; j++ )\n                {\n                    var id = ids[j];\n                    if ( item.id === id )\n                    {\n                        match = true;\n                        break;\n                    }\n                }\n\n                if ( match )\n                {\n                    filtered.push(item);\n                }\n\n            }\n\n            return filtered;\n\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('toTrusted', toTrustedFilter)\n        .filter('htmlToPlaintext', htmlToPlainTextFilter)\n        .filter('nospace', nospaceFilter)\n        .filter('humanizeDoc', humanizeDocFilter);\n\n    /** @ngInject */\n    function toTrustedFilter($sce)\n    {\n        return function (value)\n        {\n            return $sce.trustAsHtml(value);\n        };\n    }\n\n    /** @ngInject */\n    function htmlToPlainTextFilter()\n    {\n        return function (text)\n        {\n            return String(text).replace(/<[^>]+>/gm, '');\n        };\n    }\n\n    /** @ngInject */\n    function nospaceFilter()\n    {\n        return function (value)\n        {\n            return (!value) ? '' : value.replace(/ /g, '');\n        };\n    }\n\n    /** @ngInject */\n    function humanizeDocFilter()\n    {\n        return function (doc)\n        {\n            if ( !doc )\n            {\n                return;\n            }\n            if ( doc.type === 'directive' )\n            {\n                return doc.name.replace(/([A-Z])/g, function ($1)\n                {\n                    return '-' + $1.toLowerCase();\n                });\n            }\n            return doc.label || doc.name;\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .filter('altDate', altDate);\n\n    /** @ngInject */\n    function altDate()\n    {\n        return function (value)\n        {\n            var diff = Date.now() - new Date(value);\n\n            /**\n             * If in a hour\n             * e.g. \"2 minutes ago\"\n             */\n            if ( diff < (60 * 60 * 1000) )\n            {\n                return moment(value).fromNow();\n            }\n            /*\n             * If in the day\n             * e.g. \"11:23\"\n             */\n            else if ( diff < (60 * 60 * 24 * 1000) )\n            {\n                return moment(value).format('HH:mm');\n            }\n            /*\n             * If in week\n             * e.g \"Tuesday\"\n             */\n            else if ( diff < (60 * 60 * 24 * 7 * 1000) )\n            {\n                return moment(value).format('dddd');\n            }\n            /*\n             * If more than a week\n             * e.g. 03/29/2016\n             */\n            else\n            {\n                return moment(value).calendar();\n            }\n\n        };\n    }\n\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app.core')\n        .directive('hljs', hljsDirective);\n\n    /** @ngInject */\n    function hljsDirective($timeout, $q, $interpolate) {\n        return {\n            restrict: 'E',\n            compile : function (element, attr) {\n                var code;\n                //No attribute? code is the content\n                if (!attr.code) {\n                    code = element.html();\n                    element.empty();\n                }\n\n                return function (scope, element, attr) {\n\n                    if (attr.code) {\n                        // Attribute? code is the evaluation\n                        code = scope.$eval(attr.code);\n                    }\n                    var shouldInterpolate = scope.$eval(attr.shouldInterpolate);\n\n                    $q.when(code).then(function (code) {\n                        if (code) {\n                            if (shouldInterpolate) {\n                                code = $interpolate(code)(scope);\n                            }\n                            var contentParent = angular.element(\n                                '<pre><code class=\"highlight\" ng-non-bindable></code></pre>'\n                            );\n                            element.append(contentParent);\n                            // Defer highlighting 1-frame to prevent GA interference...\n                            $timeout(function () {\n                                render(code, contentParent);\n                            }, 34, false);\n                        }\n                    });\n\n                    function render(contents, parent) {\n\n                        var codeElement = parent.find('code');\n                        var lines = contents.split('\\n');\n\n                        // Remove empty lines\n                        lines = lines.filter(function (line) {\n                            return line.trim().length;\n                        });\n\n                        // Make it so each line starts at 0 whitespace\n                        var firstLineWhitespace = lines[0].match(/^\\s*/)[0];\n                        var startingWhitespaceRegex = new RegExp('^' + firstLineWhitespace);\n                        lines = lines.map(function (line) {\n                            return line\n                                .replace(startingWhitespaceRegex, '')\n                                .replace(/\\s+$/, '');\n                        });\n\n                        var highlightedCode = hljs.highlight(attr.language || attr.lang, lines.join('\\n'), true);\n                        highlightedCode.value = highlightedCode.value\n                            .replace(/=<span class=\"hljs-value\">\"\"<\\/span>/gi, '')\n                            .replace('<head>', '')\n                            .replace('<head/>', '');\n                        codeElement.append(highlightedCode.value).addClass('highlight');\n                    }\n                };\n            }\n        };\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .provider('fuseConfig', fuseConfigProvider);\n\n    /** @ngInject */\n    function fuseConfigProvider()\n    {\n        // Default configuration\n        var fuseConfiguration = {\n            'disableCustomScrollbars'        : false,\n            'disableMdInkRippleOnMobile'     : true,\n            'disableCustomScrollbarsOnMobile': true\n        };\n\n        // Methods\n        this.config = config;\n\n        //////////\n\n        /**\n         * Extend default configuration with the given one\n         *\n         * @param configuration\n         */\n        function config(configuration)\n        {\n            fuseConfiguration = angular.extend({}, fuseConfiguration, configuration);\n        }\n\n        /**\n         * Service\n         */\n        this.$get = function ()\n        {\n            var service = {\n                getConfig: getConfig,\n                setConfig: setConfig\n            };\n\n            return service;\n\n            //////////\n\n            /**\n             * Returns a config value\n             */\n            function getConfig(configName)\n            {\n                if ( angular.isUndefined(fuseConfiguration[configName]) )\n                {\n                    return false;\n                }\n\n                return fuseConfiguration[configName];\n            }\n\n            /**\n             * Creates or updates config object\n             *\n             * @param configName\n             * @param configValue\n             */\n            function setConfig(configName, configValue)\n            {\n                fuseConfiguration[configName] = configValue;\n            }\n        };\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    /**\n     * Main module of the Fuse\n     */\n    angular\n        .module('fuse', [\n            // Common 3rd Party Dependencies\n            'uiGmapgoogle-maps',\n            'lbServices',\n\n\n            //Services\n            'app.services',\n\n            // Core\n            'app.core',\n\n            // Navigation\n            'app.navigation',\n\n            // Toolbar\n            'app.toolbar',\n\n\n            // login\n            'app.login',\n\n\n             // Home\n            'app.home'\n\n\n           \n        ]);\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('fuse')\n        .factory('uiHelper', uiHelper);\n\n    function uiHelper( $mdToast) {\n        var service = {\n            showToast: showToast\n        };\n        return service;\n\n        function showToast(text, time, position) {\n            $mdToast.show(\n\t\t      $mdToast.simple()\n\t\t        .textContent(text)\n\t\t        .position( position||'top right')\n\t\t        .hideDelay(time||3000)\n\t\t    );\n        }\n\n       \n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.toolbar', [])\n        .config(config);\n\n    /** @ngInject */\n    function config($translatePartialLoaderProvider)\n    {\n        $translatePartialLoaderProvider.addPart('app/toolbar');\n    }\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.toolbar')\n        .controller('ToolbarController', ToolbarController);\n\n    /** @ngInject */\n    function ToolbarController($rootScope, $q, $state, $timeout, $mdSidenav, $translate, $mdToast, msNavigationService,authService)\n    {\n        var vm = this;\n\n        \n\n        vm.bodyEl = angular.element('body');\n        vm.userStatusOptions = [\n            {\n                'title': 'Online',\n                'icon' : 'icon-checkbox-marked-circle',\n                'color': '#4CAF50'\n            },\n            {\n                'title': 'Away',\n                'icon' : 'icon-clock',\n                'color': '#FFC107'\n            },\n            {\n                'title': 'Do not Disturb',\n                'icon' : 'icon-minus-circle',\n                'color': '#F44336'\n            },\n            {\n                'title': 'Invisible',\n                'icon' : 'icon-checkbox-blank-circle-outline',\n                'color': '#BDBDBD'\n            },\n            {\n                'title': 'Offline',\n                'icon' : 'icon-checkbox-blank-circle-outline',\n                'color': '#616161'\n            }\n        ];\n\n\n        // Methods\n        vm.toggleSidenav = toggleSidenav;\n        vm.logout = logout;\n        vm.setUserStatus = setUserStatus;\n        vm.toggleHorizontalMobileMenu = toggleHorizontalMobileMenu;\n        vm.toggleMsNavigationFolded = toggleMsNavigationFolded;\n       \n        //////////\n\n        init();\n\n        /**\n         * Initialize\n         */\n        function init()\n        {\n            // Select the first status as a default\n            vm.userStatus = vm.userStatusOptions[0];\n            vm.customer= authService.getCurrentCustomer();\n        }\n\n\n        /**\n         * Toggle sidenav\n         *\n         * @param sidenavId\n         */\n        function toggleSidenav(sidenavId)\n        {\n            $mdSidenav(sidenavId).toggle();\n        }\n\n        /**\n         * Sets User Status\n         * @param status\n         */\n        function setUserStatus(status)\n        {\n            vm.userStatus = status;\n        }\n\n        /**\n         * Logout Function\n         */\n        function logout()\n        {\n            authService.logout().then(function(response){\n                $state.go('app.login');\n            });\n        }\n\n       \n\n        /**\n         * Toggle horizontal mobile menu\n         */\n        function toggleHorizontalMobileMenu()\n        {\n            vm.bodyEl.toggleClass('ms-navigation-horizontal-mobile-menu-active');\n        }\n\n        /**\n         * Toggle msNavigation folded\n         */\n        function toggleMsNavigationFolded()\n        {\n            msNavigationService.toggleFolded();\n        }\n\n       \n    }\n\n})();\n// CommonJS package manager support\nif (typeof module !== 'undefined' && typeof exports !== 'undefined' &&\n  module.exports === exports) {\n  // Export the *name* of this Angular module\n  // Sample usage:\n  //\n  //   import lbServices from './lb-services';\n  //   angular.module('app', [lbServices]);\n  //\n  module.exports = \"lbServices\";\n}\n\n(function(window, angular, undefined) {\n  'use strict';\n\n  var urlBase = \"/api\";\n  var authHeader = 'authorization';\n\n  function getHost(url) {\n    var m = url.match(/^(?:https?:)?\\/\\/([^\\/]+)/);\n    return m ? m[1] : null;\n  }\n\n  var urlBaseHost = getHost(urlBase) || location.host;\n\n/**\n * @ngdoc overview\n * @name lbServices\n * @module\n * @description\n *\n * The `lbServices` module provides services for interacting with\n * the models exposed by the LoopBack server via the REST API.\n *\n */\n  var module = angular.module(\"lbServices\", ['ngResource']);\n\n/**\n * @ngdoc object\n * @name lbServices.Customer\n * @header lbServices.Customer\n * @object\n *\n * @description\n *\n * A $resource object for interacting with the `Customer` model.\n *\n * ## Example\n *\n * See\n * {@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\n * for an example of using this object.\n *\n */\n  module.factory(\n    \"Customer\",\n    [\n      'LoopBackResource', 'LoopBackAuth', '$injector', '$q',\n      function(LoopBackResource, LoopBackAuth, $injector, $q) {\n        var R = LoopBackResource(\n        urlBase + \"/customers/:id\",\n          { 'id': '@id' },\n          {\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__findById__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Find a related item by id for accessTokens.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `fk` – `{*}` - Foreign key for accessTokens\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"prototype$__findById__accessTokens\": {\n              params: {\n                'fk': '@fk',\n              },\n              url: urlBase + \"/customers/:id/accessTokens/:fk\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__destroyById__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Delete a related item by id for accessTokens.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `fk` – `{*}` - Foreign key for accessTokens\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"prototype$__destroyById__accessTokens\": {\n              params: {\n                'fk': '@fk',\n              },\n              url: urlBase + \"/customers/:id/accessTokens/:fk\",\n              method: \"DELETE\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__updateById__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Update a related item by id for accessTokens.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `fk` – `{*}` - Foreign key for accessTokens\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `data` – `{object=}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"prototype$__updateById__accessTokens\": {\n              params: {\n                'fk': '@fk',\n              },\n              url: urlBase + \"/customers/:id/accessTokens/:fk\",\n              method: \"PUT\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__get__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Queries accessTokens of Customer.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `filter` – `{object=}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Array.<Object>,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Array.<Object>} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"prototype$__get__accessTokens\": {\n              isArray: true,\n              url: urlBase + \"/customers/:id/accessTokens\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__create__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Creates a new instance in accessTokens of this model.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `data` – `{object=}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"prototype$__create__accessTokens\": {\n              url: urlBase + \"/customers/:id/accessTokens\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__delete__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Deletes all accessTokens of this model.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `where` – `{object=}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"prototype$__delete__accessTokens\": {\n              url: urlBase + \"/customers/:id/accessTokens\",\n              method: \"DELETE\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$__count__accessTokens\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Counts accessTokens of Customer.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `count` – `{number=}` -\n             */\n            \"prototype$__count__accessTokens\": {\n              url: urlBase + \"/customers/:id/accessTokens/count\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#create\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Create a new instance of the model and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"create\": {\n              url: urlBase + \"/customers\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#createMany\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Create a new instance of the model and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Array.<Object>,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Array.<Object>} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"createMany\": {\n              isArray: true,\n              url: urlBase + \"/customers\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#patchOrCreate\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Patch an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"patchOrCreate\": {\n              url: urlBase + \"/customers\",\n              method: \"PATCH\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#replaceOrCreate\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Replace an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"replaceOrCreate\": {\n              url: urlBase + \"/customers/replaceOrCreate\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#upsertWithWhere\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Update an existing model instance or insert a new one into the data source based on the where criteria.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"upsertWithWhere\": {\n              url: urlBase + \"/customers/upsertWithWhere\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#exists\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Check whether a model instance exists in the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `exists` – `{boolean=}` -\n             */\n            \"exists\": {\n              url: urlBase + \"/customers/:id/exists\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#findById\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Find a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `filter` – `{object=}` - Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"findById\": {\n              url: urlBase + \"/customers/:id\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#replaceById\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Replace attributes for a model instance and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"replaceById\": {\n              url: urlBase + \"/customers/:id/replace\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#find\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Find all instances of the model matched by filter from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Array.<Object>,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Array.<Object>} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"find\": {\n              isArray: true,\n              url: urlBase + \"/customers\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#findOne\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Find first instance of the model matched by filter from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"findOne\": {\n              url: urlBase + \"/customers/findOne\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#updateAll\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Update instances of the model matched by {{where}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Information related to the outcome of the operation\n             */\n            \"updateAll\": {\n              url: urlBase + \"/customers/update\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#deleteById\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Delete a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"deleteById\": {\n              url: urlBase + \"/customers/:id\",\n              method: \"DELETE\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#count\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Count instances of the model matched by where from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `count` – `{number=}` -\n             */\n            \"count\": {\n              url: urlBase + \"/customers/count\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$patchAttributes\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Patch attributes for a model instance and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n            \"prototype$patchAttributes\": {\n              url: urlBase + \"/customers/:id\",\n              method: \"PATCH\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#createChangeStream\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Create a change stream.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `changes` – `{ReadableStream=}` -\n             */\n            \"createChangeStream\": {\n              url: urlBase + \"/customers/change-stream\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#login\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Login a user with username/email and password.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `include` – `{string=}` - Related objects to include in the response. See the description of return value for more details.\n             *   Default value: `user`.\n             *\n             *  - `rememberMe` - `boolean` - Whether the authentication credentials\n             *     should be remembered in localStorage across app/browser restarts.\n             *     Default: `true`.\n             *\n             * @param {Object} postData Request data.\n             *\n             * This method expects a subset of model properties as request parameters.\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * The response body contains properties of the AccessToken created on login.\n             * Depending on the value of `include` parameter, the body may contain additional properties:\n             *   - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n             *\n             */\n            \"login\": {\n              params: {\n                include: 'user',\n              },\n              interceptor: {\n                response: function(response) {\n                  var accessToken = response.data;\n                  LoopBackAuth.setUser(\n                    accessToken.id, accessToken.userId, accessToken.user);\n                  LoopBackAuth.rememberMe =\n                    response.config.params.rememberMe !== false;\n                  LoopBackAuth.save();\n                  return response.resource;\n                },\n              },\n              url: urlBase + \"/customers/login\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#logout\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Logout a user with access token.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `access_token` – `{string=}` - Do not supply this argument, it is automatically extracted from request headers.\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"logout\": {\n              interceptor: {\n                response: function(response) {\n                  LoopBackAuth.clearUser();\n                  LoopBackAuth.clearStorage();\n                  return response.resource;\n                },\n                responseError: function(responseError) {\n                  LoopBackAuth.clearUser();\n                  LoopBackAuth.clearStorage();\n                  return responseError.resource;\n                },\n              },\n              url: urlBase + \"/customers/logout\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#prototype$verify\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Trigger user's identity verification with configured verifyOptions\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `verifyOptions` – `{object=}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"prototype$verify\": {\n              url: urlBase + \"/customers/:id/verify\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#confirm\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Confirm a user registration with identity verification token.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `uid` – `{string}` -\n             *\n             *  - `token` – `{string}` -\n             *\n             *  - `redirect` – `{string=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"confirm\": {\n              url: urlBase + \"/customers/confirm\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#resetPassword\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Reset password for a user with email.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             * This method expects a subset of model properties as request parameters.\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"resetPassword\": {\n              url: urlBase + \"/customers/reset\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#changePassword\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Change a user's password.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `id` – `{*=}` -\n             *\n             *  - `oldPassword` – `{string}` -\n             *\n             *  - `newPassword` – `{string}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"changePassword\": {\n              url: urlBase + \"/customers/change-password\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#setPassword\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Reset user's password via a password-reset token.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `id` – `{*=}` -\n             *\n             *  - `newPassword` – `{string}` -\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * This method returns no data.\n             */\n            \"setPassword\": {\n              url: urlBase + \"/customers/reset-password\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#getCurrent\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Get data of the currently logged user. Fail with HTTP result 401\n             * when there is no user logged in.\n             *\n             * @param {function(Object,Object)=} successCb\n             *    Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *    `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             */\n            'getCurrent': {\n              url: urlBase + \"/customers\" + '/:id',\n              method: 'GET',\n              params: {\n                id: function() {\n                  var id = LoopBackAuth.currentUserId;\n                  if (id == null) id = '__anonymous__';\n                  return id;\n                },\n              },\n              interceptor: {\n                response: function(response) {\n                  LoopBackAuth.currentUserData = response.data;\n                  return response.resource;\n                },\n                responseError: function(responseError) {\n                  LoopBackAuth.clearUser();\n                  LoopBackAuth.clearStorage();\n                  return $q.reject(responseError);\n                },\n              },\n              __isGetCurrentUser__: true,\n            },\n          }\n        );\n\n\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#upsert\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Patch an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n        R[\"upsert\"] = R[\"patchOrCreate\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#updateOrCreate\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Patch an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n        R[\"updateOrCreate\"] = R[\"patchOrCreate\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#patchOrCreateWithWhere\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Update an existing model instance or insert a new one into the data source based on the where criteria.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n        R[\"patchOrCreateWithWhere\"] = R[\"upsertWithWhere\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#update\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Update instances of the model matched by {{where}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Information related to the outcome of the operation\n             */\n        R[\"update\"] = R[\"updateAll\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#destroyById\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Delete a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n        R[\"destroyById\"] = R[\"deleteById\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#removeById\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Delete a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n        R[\"removeById\"] = R[\"deleteById\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Customer#updateAttributes\n             * @methodOf lbServices.Customer\n             *\n             * @description\n             *\n             * Patch attributes for a model instance and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Customer id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Customer` object.)\n             * </em>\n             */\n        R[\"updateAttributes\"] = R[\"prototype$patchAttributes\"];\n\n        /**\n         * @ngdoc method\n         * @name lbServices.Customer#getCachedCurrent\n         * @methodOf lbServices.Customer\n         *\n         * @description\n         *\n         * Get data of the currently logged user that was returned by the last\n         * call to {@link lbServices.Customer#login} or\n         * {@link lbServices.Customer#getCurrent}. Return null when there\n         * is no user logged in or the data of the current user were not fetched\n         * yet.\n         *\n         * @returns {Object} A Customer instance.\n         */\n        R.getCachedCurrent = function() {\n          var data = LoopBackAuth.currentUserData;\n          return data ? new R(data) : null;\n        };\n\n        /**\n         * @ngdoc method\n         * @name lbServices.Customer#isAuthenticated\n         * @methodOf lbServices.Customer\n         *\n         * @returns {boolean} True if the current user is authenticated (logged in).\n         */\n        R.isAuthenticated = function() {\n          return this.getCurrentId() != null;\n        };\n\n        /**\n         * @ngdoc method\n         * @name lbServices.Customer#getCurrentId\n         * @methodOf lbServices.Customer\n         *\n         * @returns {Object} Id of the currently logged-in user or null.\n         */\n        R.getCurrentId = function() {\n          return LoopBackAuth.currentUserId;\n        };\n\n        /**\n        * @ngdoc property\n        * @name lbServices.Customer#modelName\n        * @propertyOf lbServices.Customer\n        * @description\n        * The name of the model represented by this $resource,\n        * i.e. `Customer`.\n        */\n        R.modelName = \"Customer\";\n\n\n\n        return R;\n      }]);\n\n/**\n * @ngdoc object\n * @name lbServices.Car\n * @header lbServices.Car\n * @object\n *\n * @description\n *\n * A $resource object for interacting with the `Car` model.\n *\n * ## Example\n *\n * See\n * {@link http://docs.angularjs.org/api/ngResource.$resource#example $resource}\n * for an example of using this object.\n *\n */\n  module.factory(\n    \"Car\",\n    [\n      'LoopBackResource', 'LoopBackAuth', '$injector', '$q',\n      function(LoopBackResource, LoopBackAuth, $injector, $q) {\n        var R = LoopBackResource(\n        urlBase + \"/cars/:id\",\n          { 'id': '@id' },\n          {\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#create\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Create a new instance of the model and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"create\": {\n              url: urlBase + \"/cars\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#createMany\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Create a new instance of the model and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Array.<Object>,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Array.<Object>} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"createMany\": {\n              isArray: true,\n              url: urlBase + \"/cars\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#patchOrCreate\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Patch an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"patchOrCreate\": {\n              url: urlBase + \"/cars\",\n              method: \"PATCH\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#replaceOrCreate\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Replace an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"replaceOrCreate\": {\n              url: urlBase + \"/cars/replaceOrCreate\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#upsertWithWhere\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Update an existing model instance or insert a new one into the data source based on the where criteria.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"upsertWithWhere\": {\n              url: urlBase + \"/cars/upsertWithWhere\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#exists\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Check whether a model instance exists in the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `exists` – `{boolean=}` -\n             */\n            \"exists\": {\n              url: urlBase + \"/cars/:id/exists\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#findById\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Find a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `filter` – `{object=}` - Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"findById\": {\n              url: urlBase + \"/cars/:id\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#replaceById\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Replace attributes for a model instance and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"replaceById\": {\n              url: urlBase + \"/cars/:id/replace\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#find\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Find all instances of the model matched by filter from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Array.<Object>,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Array.<Object>} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"find\": {\n              isArray: true,\n              url: urlBase + \"/cars\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#findOne\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Find first instance of the model matched by filter from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `filter` – `{object=}` - Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"findOne\": {\n              url: urlBase + \"/cars/findOne\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#updateAll\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Update instances of the model matched by {{where}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Information related to the outcome of the operation\n             */\n            \"updateAll\": {\n              url: urlBase + \"/cars/update\",\n              method: \"POST\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#deleteById\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Delete a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"deleteById\": {\n              url: urlBase + \"/cars/:id\",\n              method: \"DELETE\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#count\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Count instances of the model matched by where from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `count` – `{number=}` -\n             */\n            \"count\": {\n              url: urlBase + \"/cars/count\",\n              method: \"GET\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#prototype$patchAttributes\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Patch attributes for a model instance and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Car id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n            \"prototype$patchAttributes\": {\n              url: urlBase + \"/cars/:id\",\n              method: \"PATCH\",\n            },\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#createChangeStream\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Create a change stream.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *   This method does not accept any parameters.\n             *   Supply an empty object or omit this argument altogether.\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Data properties:\n             *\n             *  - `changes` – `{ReadableStream=}` -\n             */\n            \"createChangeStream\": {\n              url: urlBase + \"/cars/change-stream\",\n              method: \"POST\",\n            },\n          }\n        );\n\n\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#upsert\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Patch an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n        R[\"upsert\"] = R[\"patchOrCreate\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#updateOrCreate\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Patch an existing model instance or insert a new one into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `data` – `{object=}` - Model instance data\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n        R[\"updateOrCreate\"] = R[\"patchOrCreate\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#patchOrCreateWithWhere\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Update an existing model instance or insert a new one into the data source based on the where criteria.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n        R[\"patchOrCreateWithWhere\"] = R[\"upsertWithWhere\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#update\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Update instances of the model matched by {{where}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `where` – `{object=}` - Criteria to match model instances\n             *\n             * @param {Object} postData Request data.\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * Information related to the outcome of the operation\n             */\n        R[\"update\"] = R[\"updateAll\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#destroyById\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Delete a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n        R[\"destroyById\"] = R[\"deleteById\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#removeById\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Delete a model instance by {{id}} from the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Model id\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n        R[\"removeById\"] = R[\"deleteById\"];\n\n            /**\n             * @ngdoc method\n             * @name lbServices.Car#updateAttributes\n             * @methodOf lbServices.Car\n             *\n             * @description\n             *\n             * Patch attributes for a model instance and persist it into the data source.\n             *\n             * @param {Object=} parameters Request parameters.\n             *\n             *  - `id` – `{*}` - Car id\n             *\n             *  - `options` – `{object=}` -\n             *\n             *  - `data` – `{object=}` - An object of model property name/value pairs\n             *\n             *  - `options` – `{object=}` -\n             *\n             * @param {function(Object,Object)=} successCb\n             *   Success callback with two arguments: `value`, `responseHeaders`.\n             *\n             * @param {function(Object)=} errorCb Error callback with one argument:\n             *   `httpResponse`.\n             *\n             * @returns {Object} An empty reference that will be\n             *   populated with the actual data once the response is returned\n             *   from the server.\n             *\n             * <em>\n             * (The remote method definition does not provide any description.\n             * This usually means the response is a `Car` object.)\n             * </em>\n             */\n        R[\"updateAttributes\"] = R[\"prototype$patchAttributes\"];\n\n\n        /**\n        * @ngdoc property\n        * @name lbServices.Car#modelName\n        * @propertyOf lbServices.Car\n        * @description\n        * The name of the model represented by this $resource,\n        * i.e. `Car`.\n        */\n        R.modelName = \"Car\";\n\n\n\n        return R;\n      }]);\n\n\n  module\n  .factory('LoopBackAuth', function() {\n    var props = ['accessTokenId', 'currentUserId', 'rememberMe'];\n    var propsPrefix = '$LoopBack$';\n\n    function LoopBackAuth() {\n      var self = this;\n      props.forEach(function(name) {\n        self[name] = load(name);\n      });\n      this.currentUserData = null;\n    }\n\n    LoopBackAuth.prototype.save = function() {\n      var self = this;\n      var storage = this.rememberMe ? localStorage : sessionStorage;\n      props.forEach(function(name) {\n        save(storage, name, self[name]);\n      });\n    };\n\n    LoopBackAuth.prototype.setUser = function(accessTokenId, userId, userData) {\n      this.accessTokenId = accessTokenId;\n      this.currentUserId = userId;\n      this.currentUserData = userData;\n    };\n\n    LoopBackAuth.prototype.clearUser = function() {\n      this.accessTokenId = null;\n      this.currentUserId = null;\n      this.currentUserData = null;\n    };\n\n    LoopBackAuth.prototype.clearStorage = function() {\n      props.forEach(function(name) {\n        save(sessionStorage, name, null);\n        save(localStorage, name, null);\n      });\n    };\n\n    return new LoopBackAuth();\n\n    // Note: LocalStorage converts the value to string\n    // We are using empty string as a marker for null/undefined values.\n    function save(storage, name, value) {\n      try {\n        var key = propsPrefix + name;\n        if (value == null) value = '';\n        storage[key] = value;\n      } catch (err) {\n        console.log('Cannot access local/session storage:', err);\n      }\n    }\n\n    function load(name) {\n      var key = propsPrefix + name;\n      return localStorage[key] || sessionStorage[key] || null;\n    }\n  })\n  .config(['$httpProvider', function($httpProvider) {\n    $httpProvider.interceptors.push('LoopBackAuthRequestInterceptor');\n  }])\n  .factory('LoopBackAuthRequestInterceptor', ['$q', 'LoopBackAuth',\n    function($q, LoopBackAuth) {\n      return {\n        'request': function(config) {\n          // filter out external requests\n          var host = getHost(config.url);\n          if (host && host !== urlBaseHost) {\n            return config;\n          }\n\n          if (LoopBackAuth.accessTokenId) {\n            config.headers[authHeader] = LoopBackAuth.accessTokenId;\n          } else if (config.__isGetCurrentUser__) {\n            // Return a stub 401 error for User.getCurrent() when\n            // there is no user logged in\n            var res = {\n              body: { error: { status: 401 }},\n              status: 401,\n              config: config,\n              headers: function() { return undefined; },\n            };\n            return $q.reject(res);\n          }\n          return config || $q.when(config);\n        },\n      };\n    }])\n\n  /**\n   * @ngdoc object\n   * @name lbServices.LoopBackResourceProvider\n   * @header lbServices.LoopBackResourceProvider\n   * @description\n   * Use `LoopBackResourceProvider` to change the global configuration\n   * settings used by all models. Note that the provider is available\n   * to Configuration Blocks only, see\n   * {@link https://docs.angularjs.org/guide/module#module-loading-dependencies Module Loading & Dependencies}\n   * for more details.\n   *\n   * ## Example\n   *\n   * ```js\n   * angular.module('app')\n   *  .config(function(LoopBackResourceProvider) {\n   *     LoopBackResourceProvider.setAuthHeader('X-Access-Token');\n   *  });\n   * ```\n   */\n  .provider('LoopBackResource', function LoopBackResourceProvider() {\n    /**\n     * @ngdoc method\n     * @name lbServices.LoopBackResourceProvider#setAuthHeader\n     * @methodOf lbServices.LoopBackResourceProvider\n     * @param {string} header The header name to use, e.g. `X-Access-Token`\n     * @description\n     * Configure the REST transport to use a different header for sending\n     * the authentication token. It is sent in the `Authorization` header\n     * by default.\n     */\n    this.setAuthHeader = function(header) {\n      authHeader = header;\n    };\n\n    /**\n     * @ngdoc method\n     * @name lbServices.LoopBackResourceProvider#getAuthHeader\n     * @methodOf lbServices.LoopBackResourceProvider\n     * @description\n     * Get the header name that is used for sending the authentication token.\n     */\n    this.getAuthHeader = function() {\n      return authHeader;\n    };\n\n    /**\n     * @ngdoc method\n     * @name lbServices.LoopBackResourceProvider#setUrlBase\n     * @methodOf lbServices.LoopBackResourceProvider\n     * @param {string} url The URL to use, e.g. `/api` or `//example.com/api`.\n     * @description\n     * Change the URL of the REST API server. By default, the URL provided\n     * to the code generator (`lb-ng` or `grunt-loopback-sdk-angular`) is used.\n     */\n    this.setUrlBase = function(url) {\n      urlBase = url;\n      urlBaseHost = getHost(urlBase) || location.host;\n    };\n\n    /**\n     * @ngdoc method\n     * @name lbServices.LoopBackResourceProvider#getUrlBase\n     * @methodOf lbServices.LoopBackResourceProvider\n     * @description\n     * Get the URL of the REST API server. The URL provided\n     * to the code generator (`lb-ng` or `grunt-loopback-sdk-angular`) is used.\n     */\n    this.getUrlBase = function() {\n      return urlBase;\n    };\n\n    this.$get = ['$resource', function($resource) {\n      var LoopBackResource = function(url, params, actions) {\n        var resource = $resource(url, params, actions);\n\n        // Angular always calls POST on $save()\n        // This hack is based on\n        // http://kirkbushell.me/angular-js-using-ng-resource-in-a-more-restful-manner/\n        resource.prototype.$save = function(success, error) {\n          // Fortunately, LoopBack provides a convenient `upsert` method\n          // that exactly fits our needs.\n          var result = resource.upsert.call(this, {}, this, success, error);\n          return result.$promise || result;\n        };\n        return resource;\n      };\n\n      LoopBackResource.getUrlBase = function() {\n        return urlBase;\n      };\n\n      LoopBackResource.getAuthHeader = function() {\n        return authHeader;\n      };\n\n      return LoopBackResource;\n    }];\n  });\n})(window, window.angular);\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.services',[]);\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('app.services')\n        .factory('authService', authService);\n\n    function authService(Customer, $rootScope) {\n        var service = {\n            login: login,\n            logout: logout,\n            register: register,\n            isAuthenticated: isAuthenticated,\n            getCurrentUser: getCurrentUser\n        };\n        return service;\n\n        function login(credentials,rememberMe) {\n            return Customer\n                .login({ rememberMe: rememberMe},credentials)\n                .$promise;\n        }\n\n        function logout() {\n            return Customer\n                .logout().$promise;\n        }\n\n        function register(newUser) {\n            return Customer.create(newUser).$promise;\n        }\n\n        function isAuthenticated() {\n            return Customer.isAuthenticated();\n        }\n\n        function getCurrentUser() {\n            return Customer.getCachedCurrent() || Customer.getCurrent();\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.navigation', [])\n        .config(config);\n\n    /** @ngInject */\n    function config()\n    {\n        \n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.navigation')\n        .controller('NavigationController', NavigationController);\n\n    /** @ngInject */\n    function NavigationController($scope)\n    {\n        var vm = this;\n\n        // Data\n        vm.bodyEl = angular.element('body');\n        vm.folded = false;\n        vm.msScrollOptions = {\n            suppressScrollX: true\n        };\n\n        // Methods\n        vm.toggleMsNavigationFolded = toggleMsNavigationFolded;\n\n        //////////\n\n        /**\n         * Toggle folded status\n         */\n        function toggleMsNavigationFolded()\n        {\n            vm.folded = !vm.folded;\n        }\n\n        // Close the mobile menu on $stateChangeSuccess\n        $scope.$on('$stateChangeSuccess', function ()\n        {\n            vm.bodyEl.removeClass('ms-navigation-horizontal-mobile-menu-active');\n        });\n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController($scope, $rootScope)\n    {\n        // Data\n\n        //////////\n\n        // Remove the splash screen\n        $scope.$on('$viewContentAnimationEnded', function (event)\n        {\n            if ( event.targetScope.$id === $scope.$id )\n            {\n                $rootScope.$broadcast('msSplashScreen::remove');\n            }\n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock(msUtils, fuseGenerator, fuseConfig)\n    {\n        /**\n         * Generate extra classes based on registered themes so we\n         * can use same colors with non-angular-material elements\n         */\n        fuseGenerator.generate();\n\n        /**\n         * Disable md-ink-ripple effects on mobile\n         * if 'disableMdInkRippleOnMobile' config enabled\n         */\n        if ( fuseConfig.getConfig('disableMdInkRippleOnMobile') && msUtils.isMobile() )\n        {\n            var bodyEl = angular.element('body');\n            bodyEl.attr('md-no-ink', true);\n        }\n\n        /**\n         * Put isMobile() to the html as a class\n         */\n        if ( msUtils.isMobile() )\n        {\n            angular.element('html').addClass('is-mobile');\n        }\n\n        /**\n         * Put browser information to the html as a class\n         */\n        var browserInfo = msUtils.detectBrowser();\n        if ( browserInfo )\n        {\n            var htmlClass = browserInfo.browser + ' ' + browserInfo.version + ' ' + browserInfo.os;\n            angular.element('html').addClass(htmlClass);\n        }\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('app.core')\n        .config(config);\n\n    /** @ngInject */\n    function config($ariaProvider, $logProvider, msScrollConfigProvider, fuseConfigProvider)\n    {\n        // Enable debug logging\n        $logProvider.debugEnabled(true);\n\n        /*eslint-disable */\n\n        // ng-aria configuration\n        $ariaProvider.config({\n            tabindex: false\n        });\n\n        // Fuse theme configurations\n        fuseConfigProvider.config({\n            'disableCustomScrollbars'        : false,\n            'disableCustomScrollbarsOnMobile': true,\n            'disableMdInkRippleOnMobile'     : true\n        });\n\n        // msScroll configuration\n        msScrollConfigProvider.config({\n            wheelPropagation: true\n        });\n\n        /*eslint-enable */\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $timeout, $state,$location,authService)\n    {\n\n      \n\n        // Activate loading indicator\n        var stateChangeStartEvent = $rootScope.$on('$stateChangeStart', function ()\n        {\n            $rootScope.loadingProgress = true;\n        });\n\n        // De-activate loading indicator\n        var stateChangeSuccessEvent = $rootScope.$on('$stateChangeSuccess', function ()\n        {\n            $timeout(function ()\n            {\n                $rootScope.loadingProgress = false;\n            });\n        });\n\n        // Store state in the root scope for easy access\n        $rootScope.state = $state;\n\n        // Cleanup\n        $rootScope.$on('$destroy', function ()\n        {\n            stateChangeStartEvent();\n            stateChangeSuccessEvent();\n        });\n\n\n\n        var restrictedPage = $.inArray($location.path(), ['/login','/register']) === -1;\n        $rootScope.$on('$locationChangeStart', function (event, next, current) {\n            console.log(authService.isAuthenticated());\n            if (restrictedPage && !authService.isAuthenticated()) {\n                console.log(\"Not Authenticated\");\n                $location.path('/login');\n            }            \n        });\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .config(routeConfig);\n\n    /** @ngInject */\n    function routeConfig($stateProvider, $urlRouterProvider, $locationProvider)\n    {\n        $locationProvider.html5Mode(true);\n\n        $urlRouterProvider.otherwise(function($injector, $location) {\n          var $state = $injector.get(\"$state\");\n          $state.go('app.login');\n        });\n\n\n        // Get active layout\n        var layoutStyle = 'verticalNavigation';\n\n        var layouts = {\n            verticalNavigation  : {\n                main      : 'app/core/layouts/vertical-navigation.html',\n                toolbar   : 'app/toolbar/layouts/vertical-navigation/toolbar.html',\n                navigation: 'app/navigation/layouts/vertical-navigation/navigation.html'\n            },\n            contentOnly         : {\n                main      : 'app/core/layouts/content-only.html',\n                toolbar   : '',\n                navigation: ''\n            },\n            contentWithToolbar  : {\n                main      : 'app/core/layouts/content-with-toolbar.html',\n                toolbar   : 'app/toolbar/layouts/content-with-toolbar/toolbar.html',\n                navigation: ''\n            }\n        };\n        // END - Layout Style Switcher\n\n        // State definitions\n        $stateProvider\n            .state('app', {\n                abstract: true,\n                views   : {\n                    'main@'         : {\n                        templateUrl: layouts[layoutStyle].main,\n                        controller : 'MainController as vm'\n                    },\n                    'toolbar@app'   : {\n                        templateUrl: layouts[layoutStyle].toolbar,\n                        controller : 'ToolbarController as vm'\n                    },\n                    'navigation@app': {\n                        templateUrl: layouts[layoutStyle].navigation,\n                        controller : 'NavigationController as vm'\n                    }\n                }\n            });\n    }\n\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .controller('IndexController', IndexController);\n\n    /** @ngInject */\n    function IndexController(fuseTheming)\n    {\n        var vm = this;\n\n        // Data\n        vm.themes = fuseTheming.themes;\n\n        //////////\n    }\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .constant('BASEURL', 'http://ec2-52-15-106-159.us-east-2.compute.amazonaws.com/api');\n})();\n\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .config(config);\n\n    /** @ngInject */\n    function config(uiGmapGoogleMapApiProvider,LoopBackResourceProvider,BASEURL)\n    {\n        \n        //URL where to access the LoopBack REST API server\n        LoopBackResourceProvider.setUrlBase(BASEURL)\n\n\n        // Change the URL where to access the LoopBack REST API server\n\n\n        // Put your common app configurations here\n        // uiGmapgoogle-maps configuration\n        uiGmapGoogleMapApiProvider.configure({\n            //    key: 'your api key',\n            v        : '3.exp',\n            libraries: 'weather,geometry,visualization'\n        });\n\n\n       \n\n\n      \n    }\n\n})();\n(function ()\n{\n    'use strict';\n\n    angular\n        .module('fuse')\n        .factory('api', apiService);\n\n    /** @ngInject */\n    function apiService($resource)\n    {\n        /**\n         * You can use this service to define your API urls. The \"api\" service\n         * is designed to work in parallel with \"apiResolver\" service which you can\n         * find in the \"app/core/services/api-resolver.service.js\" file.\n         *\n         * You can structure your API urls whatever the way you want to structure them.\n         * You can either use very simple definitions, or you can use multi-dimensional\n         * objects.\n         *\n         * Here's a very simple API url definition example:\n         *\n         *      api.getBlogList = $resource('http://api.example.com/getBlogList');\n         *\n         * While this is a perfectly valid $resource definition, most of the time you will\n         * find yourself in a more complex situation where you want url parameters:\n         *\n         *      api.getBlogById = $resource('http://api.example.com/blog/:id', {id: '@id'});\n         *\n         * You can also define your custom methods. Custom method definitions allow you to\n         * add hardcoded parameters to your API calls that you want to sent every time you\n         * make that API call:\n         *\n         *      api.getBlogById = $resource('http://api.example.com/blog/:id', {id: '@id'}, {\n         *         'getFromHomeCategory' : {method: 'GET', params: {blogCategory: 'home'}}\n         *      });\n         *\n         * In addition to these definitions, you can also create multi-dimensional objects.\n         * They are nothing to do with the $resource object, it's just a more convenient\n         * way that we have created for you to packing your related API urls together:\n         *\n         *      api.blog = {\n         *                   list     : $resource('http://api.example.com/blog'),\n         *                   getById  : $resource('http://api.example.com/blog/:id', {id: '@id'}),\n         *                   getByDate: $resource('http://api.example.com/blog/:date', {id: '@date'}, {\n         *                       get: {\n         *                            method: 'GET',\n         *                            params: {\n         *                                getByDate: true\n         *                            }\n         *                       }\n         *                   })\n         *       }\n         *\n         * If you look at the last example from above, we overrode the 'get' method to put a\n         * hardcoded parameter. Now every time we make the \"getByDate\" call, the {getByDate: true}\n         * object will also be sent along with whatever data we are sending.\n         *\n         * All the above methods are using standard $resource service. You can learn more about\n         * it at: https://docs.angularjs.org/api/ngResource/service/$resource\n         *\n         * -----\n         *\n         * After you defined your API urls, you can use them in Controllers, Services and even\n         * in the UIRouter state definitions.\n         *\n         * If we use the last example from above, you can do an API call in your Controllers and\n         * Services like this:\n         *\n         *      function MyController (api)\n         *      {\n         *          // Get the blog list\n         *          api.blog.list.get({},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *\n         *          // Get the blog with the id of 3\n         *          var id = 3;\n         *          api.blog.getById.get({'id': id},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *\n         *          // Get the blog with the date by using custom defined method\n         *          var date = 112314232132;\n         *          api.blog.getByDate.get({'date': date},\n         *\n         *              // Success\n         *              function (response)\n         *              {\n         *                  console.log(response);\n         *              },\n         *\n         *              // Error\n         *              function (response)\n         *              {\n         *                  console.error(response);\n         *              }\n         *          );\n         *      }\n         *\n         * Because we are directly using $resource service, all your API calls will return a\n         * $promise object.\n         *\n         * --\n         *\n         * If you want to do the same calls in your UI Router state definitions, you need to use\n         * \"apiResolver\" service we have prepared for you:\n         *\n         *      $stateProvider.state('app.blog', {\n         *          url      : '/blog',\n         *          views    : {\n         *               'content@app': {\n         *                   templateUrl: 'app/main/apps/blog/blog.html',\n         *                   controller : 'BlogController as vm'\n         *               }\n         *          },\n         *          resolve  : {\n         *              Blog: function (apiResolver)\n         *              {\n         *                  return apiResolver.resolve('blog.list@get');\n         *              }\n         *          }\n         *      });\n         *\n         *  You can even use parameters with apiResolver service:\n         *\n         *      $stateProvider.state('app.blog.show', {\n         *          url      : '/blog/:id',\n         *          views    : {\n         *               'content@app': {\n         *                   templateUrl: 'app/main/apps/blog/blog.html',\n         *                   controller : 'BlogController as vm'\n         *               }\n         *          },\n         *          resolve  : {\n         *              Blog: function (apiResolver, $stateParams)\n         *              {\n         *                  return apiResolver.resolve('blog.getById@get', {'id': $stateParams.id);\n         *              }\n         *          }\n         *      });\n         *\n         *  And the \"Blog\" object will be available in your BlogController:\n         *\n         *      function BlogController(Blog)\n         *      {\n         *          var vm = this;\n         *\n         *          // Data\n         *          vm.blog = Blog;\n         *\n         *          ...\n         *      }\n         */\n\n        var api = {};\n\n        // Base Url\n        api.baseUrl = 'app/data/';\n\n        // api.sample = $resource(api.baseUrl + 'sample/sample.json');\n\n        return api;\n    }\n\n})();\nangular.module(\"fuse\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/core/layouts/content-only.html\",\"<div id=\\\"layout-content-only\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-hue-2\\\" ui-view=\\\"content\\\" flex></md-content></div>\");\n$templateCache.put(\"app/core/layouts/content-with-toolbar.html\",\"<div id=\\\"layout-content-with-toolbar\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-hue-2\\\" ui-view=\\\"content\\\" flex></md-content><md-sidenav id=\\\"quick-panel\\\" \\nclass=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav>\\n</div>\");\n$templateCache.put(\"app/core/layouts/horizontal-navigation.html\",\"<div id=\\\"layout-horizontal-navigation\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><div \\nid=\\\"toolbar-navigation-container\\\" class=\\\"md-whiteframe-1dp\\\" layout=\\\"column\\\" layout-align=\\\"space-between start\\\">\\n<md-toolbar id=\\\"toolbar\\\" class=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div \\nid=\\\"horizontal-navigation\\\" ui-view=\\\"navigation\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" flex></div></div><div \\nid=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" class=\\\"animate-slide-up md-hue-2\\\" ms-scroll \\nui-view=\\\"content\\\" flex></md-content></div><md-sidenav id=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" \\nmd-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation-fullwidth-toolbar-2.html\",\"<div id=\\\"layout-vertical-navigation-fullwidth-toolbar-2\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar \\nid=\\\"toolbar\\\" class=\\\"md-menu-toolbar md-whiteframe-1dp md-accent\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div \\nid=\\\"main-container\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" class=\\\"md-primary-bg\\\" \\nmd-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll ui-view=\\\"navigation\\\"></md-sidenav><div \\nid=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" class=\\\"animate-slide-up md-hue-2\\\" ms-scroll \\nui-view=\\\"content\\\" flex></md-content></div><md-sidenav id=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" \\nmd-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav></div></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation-fullwidth-toolbar.html\",\"<div id=\\\"layout-vertical-navigation-fullwidth-toolbar\\\" class=\\\"template-layout\\\" layout=\\\"column\\\" flex><md-toolbar \\nid=\\\"toolbar\\\" class=\\\"md-menu-toolbar md-whiteframe-1dp md-accent\\\" ui-view=\\\"toolbar\\\"></md-toolbar><div \\nid=\\\"main-container\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" class=\\\"md-primary-bg\\\" \\nmd-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll ui-view=\\\"navigation\\\"></md-sidenav><div \\nid=\\\"content-container\\\" flex layout=\\\"column\\\"><md-content id=\\\"content\\\" class=\\\"animate-slide-up md-hue-2\\\" ms-scroll \\nui-view=\\\"content\\\" flex></md-content></div><md-sidenav id=\\\"quick-panel\\\" class=\\\"md-sidenav-right md-whiteframe-4dp\\\" \\nmd-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav></div></div>\");\n$templateCache.put(\"app/core/layouts/vertical-navigation.html\",\"<div id=\\\"layout-vertical-navigation\\\" class=\\\"template-layout\\\" layout=\\\"row\\\" flex><md-sidenav id=\\\"vertical-navigation\\\" \\nclass=\\\"md-primary-bg\\\" md-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" md-component-id=\\\"navigation\\\" ms-scroll \\nui-view=\\\"navigation\\\"></md-sidenav><div id=\\\"content-container\\\" flex layout=\\\"column\\\"><md-toolbar id=\\\"toolbar\\\" \\nclass=\\\"md-menu-toolbar md-whiteframe-1dp\\\" ui-view=\\\"toolbar\\\"></md-toolbar><md-content id=\\\"content\\\" \\nclass=\\\"animate-slide-up md-hue-2\\\" ms-scroll ui-view=\\\"content\\\" flex></md-content></div><md-sidenav id=\\\"quick-panel\\\" \\nclass=\\\"md-sidenav-right md-whiteframe-4dp\\\" md-component-id=\\\"quick-panel\\\" ms-scroll ui-view=\\\"quickPanel\\\"></md-sidenav>\\n</div>\");\n$templateCache.put(\"app/core/theme-options/theme-options.html\",\"<div class=\\\"ms-theme-options-button md-primary-bg\\\" ng-click=\\\"toggleOptionsSidenav()\\\"><md-icon md-font-icon=\\\"icon-cog\\\" \\nclass=\\\"white-text\\\"></md-icon></div><md-sidenav md-component-id=\\\"fuse-theme-options\\\" class=\\\"md-sidenav-right\\\"><div \\nclass=\\\"ms-theme-options-list\\\" layout=\\\"column\\\"><div class=\\\"theme-option layout-options\\\"><div class=\\\"option-title\\\">\\nLayout Style:</div><md-radio-group layout=\\\"row\\\" layout-align=\\\"start start\\\" layout-wrap ng-model=\\\"vm.layoutStyle\\\" \\nng-change=\\\"vm.updateLayoutStyle()\\\"><md-radio-button ng-repeat=\\\"layoutStyle in vm.layoutStyles\\\" \\nng-value=\\\"layoutStyle.value\\\"><div layout=\\\"column\\\" layout-align=\\\"center center\\\"><img ng-src=\\\"{{layoutStyle.figure}}\\\"> \\n<span class=\\\"text-center font-size-12 mt-8\\\">{{layoutStyle.label}}</span></div></md-radio-button></md-radio-group></div>\\n<md-divider></md-divider><div class=\\\"theme-option\\\"><div class=\\\"option-title\\\">Layout Mode:</div><md-radio-group \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\" ng-model=\\\"vm.layoutMode\\\" ng-change=\\\"vm.updateLayoutMode()\\\"><md-radio-button \\nng-repeat=\\\"layoutMode in vm.layoutModes\\\" ng-value=\\\"layoutMode.value\\\">{{layoutMode.label}}</md-radio-button>\\n</md-radio-group></div><md-divider></md-divider><div class=\\\"theme-option color-palettes\\\"><div class=\\\"option-title\\\">\\nColor Palette:</div><div layout=\\\"row\\\" layout-align=\\\"start start\\\" layout-wrap><md-button \\nng-repeat=\\\"(themeName, theme) in vm.themes.list\\\" class=\\\"md-raised theme-button\\\" layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\" aria-label=\\\"{{themeName}}\\\" ng-click=\\\"vm.setActiveTheme(themeName)\\\" \\nng-style=\\\"{\\'background-color\\': theme.primary.color,\\'border-color\\': theme.accent.color,\\'color\\': theme.primary.contrast1}\\\" \\nng-class=\\\"{active: vm.getActiveTheme().name === themeName}\\\"><md-icon ng-style=\\\"{\\'color\\': theme.primary.contrast1}\\\" \\nmd-font-icon=\\\"icon-palette\\\" class=\\\"icon s32\\\"></md-icon></md-button></div></div></div></md-sidenav>\");\n$templateCache.put(\"app/main/home/home.html\",\"<div id=\\\"simple-table\\\" class=\\\"page-layout simple fullwidth doc-page element-doc-page\\\"><div class=\\\"content\\\"><div \\nclass=\\\"md-title mb-32\\\">Autos disponibles</div><div class=\\\"white-bg md-whiteframe-4dp\\\"><table \\nclass=\\\"dataTable row-border hover\\\" datatable=\\\"ng\\\" dt-options=\\\"vm.dtOptions\\\"><thead><tr><th class=\\\"secondary-text\\\"><div \\nclass=\\\"table-header\\\"><span class=\\\"column-title\\\">Patente</span></div></th><th class=\\\"secondary-text\\\"><div \\nclass=\\\"table-header\\\"><span class=\\\"column-title\\\">Modelo</span></div></th><th class=\\\"secondary-text\\\"><div \\nclass=\\\"table-header\\\"><span class=\\\"column-title\\\">Año</span></div></th><th class=\\\"secondary-text\\\"><div \\nclass=\\\"table-header\\\"><span class=\\\"column-title\\\">Vigente</span></div></th><th class=\\\"secondary-text\\\"><div \\nclass=\\\"table-header\\\"><span class=\\\"column-title\\\">Mantencion programada</span></div></th></tr></thead><tbody><tr \\nng-repeat=\\\"car in ::[0,1,2,3,4,5]\\\"><td>DRHO-18</td><td>HILUX</td><td>2010</td><td>SI</td><td>45000km</td></tr></tbody>\\n</table></div></div></div>\");\n$templateCache.put(\"app/main/login/login.html\",\"<div id=\\\"login\\\" layout=\\\"row\\\" layout-align=\\\"start\\\"><div id=\\\"login-intro\\\" flex hide show-gt-sm><div \\nclass=\\\"logo md-accent-bg\\\"><span>S</span></div><div class=\\\"title\\\">Bienvenido</div><div class=\\\"description\\\">\\nSistema de inspección v 0.0.1</div></div><div id=\\\"login-form-wrapper\\\" class=\\\"flex-scrollable md-whiteframe-8dp\\\" \\nms-scroll><div id=\\\"login-form\\\"><div class=\\\"logo md-accent-bg\\\" hide-gt-sm><span>S</span></div><div class=\\\"title\\\">\\nIngresa con tu cuenta</div><form name=\\\"loginForm\\\" novalidate ng-submit=\\\"vm.login()\\\"><md-input-container \\nclass=\\\"md-block\\\" md-no-float><input type=\\\"text\\\" name=\\\"email\\\" ng-model=\\\"vm.loginForm.email\\\" placeholder=\\\"Correo\\\" \\nng-pattern=\\\"/^.+@.+\\\\..+$/\\\" required><div ng-messages=\\\"loginForm.email.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\">\\n<span>El correo es requerido.</span></div><div ng-message=\\\"pattern\\\"><span>Debe ser un correo valido.</span></div></div>\\n</md-input-container><md-input-container class=\\\"md-block\\\" md-no-float><input type=\\\"password\\\" name=\\\"password\\\" \\nng-model=\\\"vm.loginForm.password\\\" placeholder=\\\"Password\\\" server-validation=\\\"[\\'LOGIN_FAILED\\']\\\" required><div \\nng-messages=\\\"loginForm.password.$error\\\" role=\\\"alert\\\"><div ng-message=\\\"required\\\"><span>La contraseña es requerida.\\n</span></div><div ng-message=\\\"LOGIN_FAILED\\\"><span>Correo o contraseña incorrecta.</span></div></div>\\n</md-input-container><div class=\\\"remember-forgot-password\\\" layout=\\\"row\\\" layout-xs=\\\"column\\\" \\nlayout-align=\\\"space-between center\\\"><md-checkbox class=\\\"remember-me\\\" ng-model=\\\"vm.rememberMe\\\" aria-label=\\\"Remember Me\\\">\\n<span>Rercordarme</span></md-checkbox></div><md-button type=\\\"submit\\\" class=\\\"md-raised md-accent submit-button\\\" \\naria-label=\\\"LOG IN\\\" ng-disabled=\\\"loginForm.$invalid\\\">Ingresar</md-button></form><div class=\\\"register\\\" layout=\\\"row\\\" \\nlayout-sm=\\\"column\\\" layout-align=\\\"center center\\\"><span class=\\\"text\\\">¿No tienes una cuenta?</span> <a class=\\\"link\\\">\\nCrear una cuenta</a></div></div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-material-color-picker/ms-material-color-picker.html\",\"<md-menu md-position-mode=\\\"target-right target\\\"><div ng-click=\\\"$mdOpenMenu($event)\\\"><ms-color-picker-button><md-button \\naria-label=\\\"Row Color\\\" md-menu-origin ng-click=\\\"$mdOpenMenu($event)\\\" ng-class=\\\"vm.selectedColor.class\\\"><span \\nng-show=\\\"vm.selectedColor.palette\\\">{{vm.selectedColor.palette}} {{vm.selectedColor.hue}} </span><span \\nng-show=\\\"!vm.selectedColor.palette\\\">Select Color</span></md-button></ms-color-picker-button></div><md-menu-content \\nclass=\\\"ms-material-color-picker-menu-content\\\" layout-column><header \\nng-class=\\\"vm.selectedColor.class || \\'md-accent-bg\\'\\\" class=\\\"md-whiteframe-4dp\\\" layout=\\\"row\\\" \\nlayout-align=\\\"space-between center\\\"><md-button md-prevent-menu-close ng-click=\\\"vm.activateHueSelection(false,false)\\\" \\nclass=\\\"md-icon-button\\\" ng-class=\\\"{\\'hidden\\':!vm.selectedPalette}\\\" aria-label=\\\"Palette\\\"><md-icon \\nmd-font-icon=\\\"icon-arrow-left\\\" class=\\\"s20\\\"></md-icon></md-button><span ng-if=\\\"vm.selectedColor.palette\\\">\\n{{vm.selectedColor.palette}} {{vm.selectedColor.hue}} </span><span ng-if=\\\"!vm.selectedColor.palette\\\">Select Color\\n</span><md-button class=\\\"remove-color-button md-icon-button\\\" ng-click=\\\"vm.removeColor()\\\" aria-label=\\\"Remove Color\\\">\\n<md-icon md-font-icon=\\\"icon-delete\\\" class=\\\"s20\\\"></md-icon></md-button></header><div class=\\\"colors\\\" ms-scroll><div \\nng-show=\\\"!vm.selectedPalette\\\" layout=\\\"row\\\" layout-wrap><div class=\\\"color\\\" ng-class=\\\"\\'md-\\'+palette+\\'-500-bg\\'\\\" \\nng-repeat=\\\"(palette, hues) in vm.palettes\\\" ng-click=\\\"vm.activateHueSelection(palette,hues)\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start end\\\" md-prevent-menu-close md-ink-ripple><span class=\\\"label\\\">{{palette}}</span></div></div><div \\nng-show=\\\"vm.selectedPalette\\\" layout=\\\"row\\\" layout-wrap><div class=\\\"color\\\" \\nng-class=\\\"\\'md-\\'+vm.selectedPalette+\\'-\\'+hue+\\'-bg\\'\\\" ng-repeat=\\\"(hue, values) in vm.selectedHues\\\" \\nng-click=\\\"vm.selectColor(vm.selectedPalette,hue)\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" md-ink-ripple><span \\nclass=\\\"label\\\">{{hue}} </span><i ng-if=\\\"vm.selectedPalette == vm.selectedColor.palette && hue == vm.selectedColor.hue\\\" \\nclass=\\\"s16 icon-check\\\"></i></div></div></div></md-menu-content></md-menu>\");\n$templateCache.put(\"app/core/directives/ms-search-bar/ms-search-bar.html\",\"<div flex layout=\\\"row\\\" layout-align=\\\"start center\\\"><label for=\\\"ms-search-bar-input\\\"><md-button \\nclass=\\\"ms-search-bar-expander md-icon-button\\\" aria-label=\\\"Expand Search Bar\\\" ng-click=\\\"MsSearchBar.expand()\\\" \\nng-if=\\\"!MsSearchBar.resultsLoading || MsSearchBar.collapsed\\\"><md-icon md-font-icon=\\\"icon-magnify\\\" class=\\\"icon s24\\\">\\n</md-icon></md-button><div class=\\\"ms-search-bar-loader\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\" \\nng-if=\\\"MsSearchBar.resultsLoading && !MsSearchBar.collapsed\\\"><md-progress-circular class=\\\"md-accent\\\" md-diameter=\\\"32\\\" \\nmd-mode=\\\"indeterminate\\\"></md-progress-circular></div></label><input id=\\\"ms-search-bar-input\\\" type=\\\"text\\\" \\nplaceholder=\\\"Search\\\" flex ng-model=\\\"MsSearchBar.query\\\" ng-model-options=\\\"MsSearchBar.queryOptions\\\" \\nng-blur=\\\"MsSearchBar.collapse()\\\" ng-keydown=\\\"MsSearchBar.handleKeydown($event)\\\"><md-button \\nclass=\\\"ms-search-bar-collapser md-icon-button\\\" ng-click=\\\"MsSearchBar.collapse()\\\" aria-label=\\\"Collapse Search Bar\\\">\\n<md-icon md-font-icon=\\\"icon-close\\\" class=\\\"icon s24\\\"></md-icon></md-button><div class=\\\"ms-search-bar-results\\\" \\nng-if=\\\"MsSearchBar.results\\\" ms-scroll><div class=\\\"no-results\\\" ng-if=\\\"MsSearchBar.results.length === 0\\\">No Results!\\n</div><div class=\\\"result\\\" ng-repeat=\\\"result in MsSearchBar.results\\\" ng-click=\\\"MsSearchBar.handleResultClick(result)\\\" \\nng-mouseenter=\\\"MsSearchBar.handleMouseenter($index)\\\" ng-mousedown=\\\"MsSearchBar.absorbEvent($event)\\\" \\nng-class=\\\"{\\'selected\\': $index == MsSearchBar.selectedResultIndex}\\\" md-ink-ripple><div layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><div class=\\\"icon-container\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><i \\nng-if=\\\"result.icon\\\" class=\\\"icon {{result.icon}}\\\"></i><div ng-if=\\\"!result.icon\\\" class=\\\"square md-accent-bg\\\"></div></div>\\n<div><div class=\\\"title\\\">{{result.title}}</div><div class=\\\"description\\\" ng-if=\\\"result.description\\\">\\n{{result.description}}</div></div></div></div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-info-bar/ms-info-bar.html\",\"<div id=\\\"ms-info-bar\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><div id=\\\"ms-info-bar-message\\\" ng-transclude flex>\\n</div><md-button id=\\\"ms-info-bar-close\\\" class=\\\"md-icon-button\\\" aria-label=\\\"Close\\\" ng-click=\\\"removeInfoBar()\\\"><md-icon \\nmd-font-icon=\\\"icon-close s24\\\"></md-icon></md-button></div>\");\n$templateCache.put(\"app/core/directives/ms-shortcuts/ms-shortcuts.html\",\"<div class=\\\"shortcuts-container\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\" flex \\nng-class=\\\"{\\'mobile-bar-active\\': MsShortcuts.mobileBarActive}\\\"><div class=\\\"flex-noshrink\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\" flex><div class=\\\"shortcuts hide show-gt-xs\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\" \\nms-scroll ng-if=\\\"MsShortcuts.shortcuts.length > 0\\\" ng-sortable=\\\"MsShortcuts.sortableOptions\\\"><div \\nng-repeat=\\\"shortcut in MsShortcuts.shortcuts\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button \\nclass=\\\"md-icon-button shortcut\\\" aria-label=\\\"{{shortcut.title}}\\\" ui-sref=\\\"{{shortcut.uisref}}\\\"><md-icon \\nng-if=\\\"shortcut.icon\\\" md-font-icon=\\\"{{shortcut.icon}}\\\" class=\\\"icon s24\\\"></md-icon><div ng-if=\\\"!shortcut.icon\\\" \\nclass=\\\"first-letter\\\">{{shortcut.title.charAt(0)}}</div><md-tooltip md-direction=\\\"bottom\\\">{{shortcut.title}}\\n</md-tooltip></md-button></div></div><md-menu md-offset=\\\"8 56\\\" class=\\\"shortcut-menu hide show-gt-xs\\\"><md-button \\nclass=\\\"md-icon-button add-shortcut-button\\\" aria-label=\\\"Add shortcut\\\" ng-click=\\\"$mdOpenMenu($event)\\\"><md-icon \\nmd-menu-origin md-font-icon=\\\"icon-star\\\" class=\\\"icon amber-600-fg s24\\\"></md-icon><md-tooltip md-direction=\\\"bottom\\\">\\nClick to add/remove shortcut</md-tooltip></md-button><md-menu-content><div id=\\\"ms-shortcut-add-menu\\\"><div \\nclass=\\\"shortcut-search\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div class=\\\"search-icon\\\" layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\" ng-if=\\\"!MsShortcuts.resultsLoading\\\"><md-icon md-menu-align-target \\nmd-font-icon=\\\"icon-magnify\\\" class=\\\"icon s24\\\"></md-icon></div><div class=\\\"shortcut-loader\\\" layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\" ng-if=\\\"MsShortcuts.resultsLoading\\\"><md-progress-circular class=\\\"md-accent\\\" \\nmd-diameter=\\\"20\\\" md-mode=\\\"indeterminate\\\"></md-progress-circular></div><input type=\\\"text\\\" placeholder=\\\"Search\\\" flex \\nng-model=\\\"MsShortcuts.query\\\" ng-model-options=\\\"MsShortcuts.queryOptions\\\" \\nng-keydown=\\\"MsShortcuts.handleKeydown($event)\\\"></div><div class=\\\"results\\\" ng-if=\\\"MsShortcuts.results\\\" ms-scroll><div \\nclass=\\\"no-results\\\" ng-if=\\\"MsShortcuts.results.length === 0\\\">No Results!</div><div class=\\\"result\\\" \\nng-repeat=\\\"result in MsShortcuts.results\\\" ng-click=\\\"MsShortcuts.handleResultClick(result)\\\" \\nng-mouseenter=\\\"MsShortcuts.handleMouseenter($index)\\\" ng-mousedown=\\\"MsShortcuts.absorbEvent($event)\\\" \\nng-class=\\\"{\\'selected\\': $index == MsShortcuts.selectedResultIndex}\\\" md-prevent-menu-close=\\\"md-prevent-menu-close\\\" \\nmd-ink-ripple><div layout=\\\"row\\\" layout-align=\\\"start space-between\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex>\\n<div class=\\\"icon icon-container\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><i ng-if=\\\"result.icon\\\" \\nclass=\\\"{{result.icon}}\\\"></i><div ng-if=\\\"!result.icon\\\" class=\\\"square md-accent-bg\\\"></div></div><div><div class=\\\"title\\\">\\n{{result.title}}</div></div></div><md-icon md-font-icon=\\\"icon-pin\\\" class=\\\"icon s18\\\" \\nng-class=\\\"{\\'fade-text\\': !result.hasShortcut}\\\"></md-icon></div></div></div></div></md-menu-content></md-menu></div>\\n<md-button class=\\\"md-icon-button toggle-mobile-menu hide-gt-xs\\\" aria-label=\\\"Add shortcut\\\" \\nng-click=\\\"MsShortcuts.toggleMobileBar()\\\"><md-icon md-menu-origin md-font-icon=\\\"icon-star\\\" \\nclass=\\\"icon amber-600-fg s24\\\" ng-hide=\\\"MsShortcuts.mobileBarActive\\\"></md-icon><md-icon md-menu-origin \\nmd-font-icon=\\\"icon-close\\\" class=\\\"icon s24\\\" ng-hide=\\\"!MsShortcuts.mobileBarActive\\\"></md-icon></md-button></div>\");\n$templateCache.put(\"app/navigation/layouts/vertical-navigation/navigation.html\",\"<md-toolbar class=\\\"navigation-header md-whiteframe-1dp\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div \\nclass=\\\"logo\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">S</span> <span class=\\\"logo-text\\\">\\nSistema Inspección</span></div><md-icon class=\\\"fold-toggle s18\\\" md-font-icon=\\\"icon-backburger\\\" hide show-gt-sm \\nng-click=\\\"vm.toggleMsNavigationFolded()\\\"></md-icon></md-toolbar><ms-navigation class=\\\"scrollable\\\" folded=\\\"vm.folded\\\" \\nms-scroll=\\\"vm.msScrollOptions\\\"></ms-navigation>\");\n$templateCache.put(\"app/toolbar/layouts/content-with-toolbar/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div class=\\\"logo\\\" \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><span class=\\\"logo-image\\\">F</span> <span class=\\\"logo-text\\\">FUSE</span></div>\\n<div class=\\\"toolbar-separator\\\"></div><ms-shortcuts></ms-shortcuts><div class=\\\"toolbar-separator\\\"></div></div><div \\nlayout=\\\"row\\\" layout-align=\\\"start center\\\"><md-progress-circular id=\\\"toolbar-progress\\\" ng-if=\\\"$root.loadingProgress\\\" \\nclass=\\\"md-accent\\\" md-mode=\\\"indeterminate\\\" md-diameter=\\\"32\\\"></md-progress-circular><div class=\\\"toolbar-separator\\\"></div>\\n<md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\"><md-button class=\\\"user-button\\\" \\nng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" translate translate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div \\nlayout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div class=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" \\nsrc=\\\"assets/images/avatars/profile.jpg\\\"><md-icon md-font-icon ng-class=\\\"vm.userStatus.icon\\\" \\nng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon status s16\\\"></md-icon></div><span class=\\\"username\\\" hide-sm>\\nJohn Doe</span><md-icon md-font-icon=\\\"icon-chevron-down\\\" class=\\\"icon s16\\\" hide-sm></md-icon></div></md-button>\\n<md-menu-content width=\\\"3\\\"><md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.pages_profile\\\"><md-icon \\nmd-font-icon=\\\"icon-account\\\" class=\\\"icon\\\"></md-icon><md-button>My Profile</md-button></md-menu-item><md-menu-item \\nclass=\\\"md-indent\\\" ui-sref=\\\"app.mail\\\"><md-icon md-font-icon=\\\"icon-email\\\" class=\\\"icon\\\"></md-icon><md-button>Inbox\\n</md-button></md-menu-item><md-menu-divider></md-menu-divider><md-menu-item class=\\\"md-indent\\\"><md-icon \\nmd-font-icon=\\\"icon-logout\\\" class=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">Logout</md-button></md-menu-item>\\n</md-menu-content></md-menu></md-menu-bar><div class=\\\"toolbar-separator\\\"></div><ms-search-bar \\non-search=\\\"vm.search(query)\\\" on-result-click=\\\"vm.searchResultClick(item)\\\" debounce=\\\"300\\\"></ms-search-bar><div \\nclass=\\\"toolbar-separator\\\"></div><md-menu id=\\\"language-menu\\\" md-offset=\\\"0 72\\\" md-position-mode=\\\"target-right target\\\">\\n<md-button class=\\\"language-button\\\" ng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"Language\\\" md-menu-origin md-menu-align-target>\\n<div layout=\\\"row\\\" layout-align=\\\"center center\\\"><img class=\\\"flag\\\" \\nng-src=\\\"assets/images/flags/{{vm.selectedLanguage.flag}}.png\\\"> <span class=\\\"iso\\\">{{vm.selectedLanguage.code}}</span>\\n</div></md-button><md-menu-content width=\\\"3\\\" id=\\\"language-menu-content\\\"><md-menu-item \\nng-repeat=\\\"(iso, lang) in vm.languages\\\"><md-button ng-click=\\\"vm.changeLanguage(lang)\\\" aria-label=\\\"{{lang.title}}\\\" \\ntranslate translate-attr-aria-label=\\\"{{lang.title}}\\\"><span layout=\\\"row\\\" layout-align=\\\"start center\\\"><img class=\\\"flag\\\" \\nng-src=\\\"assets/images/flags/{{lang.flag}}.png\\\"> <span translate=\\\"{{lang.translation}}\\\">{{lang.title}}</span></span>\\n</md-button></md-menu-item></md-menu-content></md-menu><div class=\\\"toolbar-separator\\\"></div><md-button \\nid=\\\"quick-panel-toggle\\\" class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'quick-panel\\')\\\" \\naria-label=\\\"Toggle quick panel\\\" translate translate-attr-aria-label=\\\"TOOLBAR.TOGGLE_QUICK_PANEL\\\"><md-icon \\nmd-font-icon=\\\"icon-format-list-bulleted\\\" class=\\\"icon\\\"></md-icon></md-button></div></div>\");\n$templateCache.put(\"app/toolbar/layouts/vertical-navigation/toolbar.html\",\"<div layout=\\\"row\\\" layout-align=\\\"start center\\\"><div layout=\\\"row\\\" layout-align=\\\"start center\\\" flex><md-button \\nid=\\\"navigation-toggle\\\" class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleSidenav(\\'navigation\\')\\\" hide-gt-sm \\naria-label=\\\"Toggle navigation\\\" translate translate-attr-aria-label=\\\"TOOLBAR.TOGGLE_NAVIGATION\\\"><md-icon \\nmd-font-icon=\\\"icon-menu\\\" class=\\\"icon\\\"></md-icon></md-button><ms-shortcuts></ms-shortcuts><div \\nclass=\\\"toolbar-separator\\\"></div></div><div layout=\\\"row\\\" layout-align=\\\"start center\\\"><md-progress-circular \\nid=\\\"toolbar-progress\\\" ng-disabled=\\\"!$root.loadingProgress\\\" class=\\\"md-accent\\\" md-diameter=\\\"32\\\"></md-progress-circular>\\n<md-menu-bar id=\\\"user-menu\\\"><md-menu md-position-mode=\\\"left bottom\\\"><md-button class=\\\"user-button\\\" \\nng-click=\\\"$mdOpenMenu()\\\" aria-label=\\\"User settings\\\" translate translate-attr-aria-label=\\\"TOOLBAR.USER_SETTINGS\\\"><div \\nlayout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div class=\\\"avatar-wrapper\\\"><img md-menu-align-target class=\\\"avatar\\\" \\nsrc=\\\"assets/images/avatars/profile.jpg\\\"><md-icon md-font-icon ng-class=\\\"vm.userStatus.icon\\\" \\nng-style=\\\"{\\'color\\': vm.userStatus.color }\\\" class=\\\"icon status s16\\\"></md-icon></div><span class=\\\"username\\\" hide \\nshow-gt-sm>{{vm.customer.firstName}} {{vm.customer.firstName.secondName}}</span><md-icon \\nmd-font-icon=\\\"icon-chevron-down\\\" class=\\\"icon s16\\\" hide-xs></md-icon></div></md-button><md-menu-content width=\\\"3\\\">\\n<md-menu-item class=\\\"md-indent\\\" ui-sref=\\\"app.pages_profile\\\"><md-icon md-font-icon=\\\"icon-account\\\" class=\\\"icon\\\">\\n</md-icon><md-button>Mi perfil</md-button></md-menu-item><md-menu-divider></md-menu-divider><md-menu-item \\nclass=\\\"md-indent\\\"><md-icon md-font-icon=\\\"icon-logout\\\" class=\\\"icon\\\"></md-icon><md-button ng-click=\\\"vm.logout()\\\">\\nCerrar Sesión</md-button></md-menu-item></md-menu-content></md-menu></md-menu-bar></div></div>\");\n$templateCache.put(\"app/core/directives/ms-navigation/templates/horizontal.html\",\"<div class=\\\"navigation-toggle\\\" hide-gt-sm><md-button class=\\\"md-icon-button\\\" ng-click=\\\"vm.toggleHorizontalMobileMenu()\\\" \\naria-label=\\\"Toggle Mobile Navigation\\\"><md-icon md-font-icon=\\\"icon-menu\\\"></md-icon></md-button></div><ul \\nclass=\\\"horizontal\\\"><li ng-repeat=\\\"node in vm.navigation\\\" ms-navigation-horizontal-node=\\\"node\\\" \\nng-class=\\\"{\\'has-children\\': vm.hasChildren}\\\" ng-include=\\\"\\'navigation-horizontal-nested.html\\'\\\"></li></ul><script \\ntype=\\\"text/ng-template\\\" id=\\\"navigation-horizontal-nested.html\\\">\\n<div ms-navigation-horizontal-item layout=\\\"row\\\" ng-if=\\\"!vm.isHidden()\\\">\\n\\n        <div class=\\\"ms-navigation-horizontal-button\\\" ng-if=\\\"!node.uisref && node.title\\\"\\n             ng-class=\\\"{\\'active md-accent-bg md-accent-fg\\': vm.isActive}\\\">\\n            <i class=\\\"icon s18 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" style=\\\"background: {{node.badge.color}}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s18 arrow\\\" ng-if=\\\"vm.hasChildren\\\"></i>\\n        </div>\\n\\n        <a class=\\\"ms-navigation-horizontal-button\\\" ui-sref=\\\"{{node.uisref}}\\\" ui-sref-active=\\\"active md-accent-bg\\\"\\n           ng-class=\\\"{\\'active md-accent-bg md-accent-fg\\': vm.isActive}\\\"\\n           ng-if=\\\"node.uisref && node.title\\\">\\n            <i class=\\\"icon s18 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" style=\\\"background: {{node.badge.color}}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s18 arrow\\\" ng-if=\\\"vm.hasChildren\\\"></i>\\n        </a>\\n\\n    </div>\\n\\n    <ul ng-if=\\\"vm.hasChildren && !vm.isHidden()\\\">\\n        <li ng-repeat=\\\"node in node.children\\\" ms-navigation-horizontal-node=\\\"node\\\"\\n            ng-class=\\\"{\\'has-children\\': vm.hasChildren}\\\"\\n            ng-include=\\\"\\'navigation-horizontal-nested.html\\'\\\"></li>\\n    </ul>\\n</script>\");\n$templateCache.put(\"app/core/directives/ms-navigation/templates/vertical.html\",\"<ul><li ng-repeat=\\\"node in vm.navigation\\\" ms-navigation-node=\\\"node\\\" \\nng-class=\\\"{\\'collapsed\\': vm.collapsed, \\'has-children\\': vm.hasChildren}\\\" ng-include=\\\"\\'navigation-nested.html\\'\\\"></li></ul>\\n<script type=\\\"text/ng-template\\\" id=\\\"navigation-nested.html\\\">\\n<div ms-navigation-item layout=\\\"row\\\" ng-if=\\\"!vm.isHidden()\\\">\\n\\n        <div class=\\\"ms-navigation-button\\\" ng-if=\\\"!node.uisref && node.title\\\">\\n            <i class=\\\"icon s16 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" ng-style=\\\"{\\'background\\': node.badge.color}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s16 arrow\\\" ng-if=\\\"vm.collapsable && vm.hasChildren\\\"></i>\\n        </div>\\n\\n        <a class=\\\"ms-navigation-button\\\" ui-sref=\\\"{{node.uisref}}\\\" ui-sref-active=\\\"active md-accent-bg\\\"\\n           ng-if=\\\"node.uisref && node.title\\\">\\n            <i class=\\\"icon s16 {{node.icon}}\\\" ng-if=\\\"node.icon\\\"></i>\\n            <span class=\\\"title\\\" translate=\\\"{{node.translate}}\\\" flex>{{node.title}}</span>\\n            <span class=\\\"badge white-fg\\\" ng-style=\\\"{\\'background\\': node.badge.color}\\\" ng-if=\\\"node.badge\\\">{{node.badge.content}}</span>\\n            <i class=\\\"icon-chevron-right s16 arrow\\\" ng-if=\\\"vm.collapsable && vm.hasChildren\\\"></i>\\n        </a>\\n\\n    </div>\\n\\n    <ul ng-if=\\\"vm.hasChildren && !vm.isHidden()\\\">\\n        <li ng-repeat=\\\"node in node.children\\\" ms-navigation-node=\\\"node\\\"\\n            ng-class=\\\"{\\'collapsed\\': vm.collapsed, \\'has-children\\': vm.hasChildren}\\\"\\n            ng-include=\\\"\\'navigation-nested.html\\'\\\"></li>\\n    </ul>\\n</script>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-1/template-1.html\",\"<div class=\\\"template-1\\\"><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"title h1\\\" \\nng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}\\n</div><div class=\\\"text pt-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-10/template-10.html\",\"<div class=\\\"template-10 p-16\\\"><div class=\\\"pb-16\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div class=\\\"info\\\">\\n<div class=\\\"title secondary-text\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle h2\\\" \\nng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div></div><div class=\\\"media ml-16\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div><div \\nclass=\\\"text\\\">{{card.text}}</div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-2/template-2.html\",\"<div class=\\\"template-2\\\"><div class=\\\"header p-16\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div ng-if=\\\"card.avatar\\\"><img\\n class=\\\"avatar mr-16\\\" ng-src=\\\"{{card.avatar.src}}\\\" alt=\\\"{{card.avatar.alt}}\\\"></div><div class=\\\"info\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div></div></div><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"text p-16\\\" ng-if=\\\"card.text\\\">{{card.text}}\\n</div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-3/template-3.html\",\"<div class=\\\"template-3 p-16 teal-bg white-fg\\\" layout=\\\"row\\\" layout-align=\\\"space-between\\\"><div layout=\\\"column\\\" \\nlayout-align=\\\"space-between\\\"><div class=\\\"info\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div \\nclass=\\\"subtitle h3 secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div></div><div class=\\\"cta\\\"><md-button \\nclass=\\\"m-0\\\">{{card.cta}}</md-button></div></div><div class=\\\"media pl-16\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-4/template-4.html\",\"<div class=\\\"template-4\\\"><div class=\\\"info white-fg ph-16 pv-24\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}\\n</div><div class=\\\"text\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div><div class=\\\"media\\\"><img class=\\\"image\\\" \\nng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-5/template-5.html\",\"<div class=\\\"template-5 p-16\\\" layout=\\\"row\\\" layout-align=\\\"space-between start\\\"><div class=\\\"info\\\"><div \\nclass=\\\"title secondary-text\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"event h2\\\" ng-if=\\\"card.event\\\">\\n{{card.event}}</div></div><div class=\\\"media ml-16\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-6/template-6.html\",\"<div class=\\\"template-6\\\"><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div><div class=\\\"title h2\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"text pt-8\\\" \\nng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-7/template-7.html\",\"<div class=\\\"template-7\\\" layout=\\\"row\\\" layout-align=\\\"space-between\\\"><div class=\\\"info\\\" layout=\\\"column\\\" \\nlayout-align=\\\"space-between\\\" layout-fill flex><div class=\\\"p-16\\\"><div class=\\\"title h1\\\" ng-if=\\\"card.title\\\">{{card.title}}\\n</div><div class=\\\"subtitle h4 secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}</div><div class=\\\"text h4 pt-8\\\" \\nng-if=\\\"card.text\\\">{{card.text}}</div></div><div><md-divider></md-divider><div class=\\\"p-8\\\" layout=\\\"row\\\"><md-icon \\nmd-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\">\\n</md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" \\nclass=\\\"mh-5\\\"></md-icon><md-icon md-font-icon=\\\"icon-star-outline\\\" class=\\\"mh-5\\\"></md-icon></div></div></div><div \\nclass=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" \\nng-show=\\\"card.media.image\\\"></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-8/template-8.html\",\"<div class=\\\"template-8\\\"><div class=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" \\nalt=\\\"{{card.media.image.alt}}\\\" ng-show=\\\"card.media.image\\\"></div><div class=\\\"content pv-24 ph-16\\\"><div class=\\\"title h1\\\" \\nng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">{{card.subtitle}}\\n</div><div class=\\\"buttons pt-16\\\"><md-button class=\\\"m-0\\\">{{card.button1}}</md-button><md-button class=\\\"m-0 md-accent\\\">\\n{{card.button2}}</md-button></div><div class=\\\"text pt-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div></div></div>\");\n$templateCache.put(\"app/core/directives/ms-card/templates/template-9/template-9.html\",\"<div class=\\\"template-9\\\"><div class=\\\"header p-16\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div ng-if=\\\"card.avatar\\\"><img\\n class=\\\"avatar mr-16\\\" ng-src=\\\"{{card.avatar.src}}\\\" alt=\\\"{{card.avatar.alt}}\\\"></div><div class=\\\"info\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"card.title\\\">{{card.title}}</div><div class=\\\"subtitle secondary-text\\\" ng-if=\\\"card.subtitle\\\">\\n{{card.subtitle}}</div></div></div><div class=\\\"text ph-16 pb-16\\\" ng-if=\\\"card.text\\\">{{card.text}}</div><div \\nclass=\\\"media\\\"><img class=\\\"image\\\" ng-src=\\\"{{card.media.image.src}}\\\" alt=\\\"{{card.media.image.alt}}\\\" \\nng-show=\\\"card.media.image\\\"></div><div class=\\\"buttons m-8\\\"><md-button class=\\\"md-icon-button mr-16\\\" \\naria-label=\\\"Favorite\\\"><md-icon md-font-icon=\\\"icon-heart-outline\\\" class=\\\"s24\\\"></md-icon></md-button><md-button \\nclass=\\\"md-icon-button\\\" aria-label=\\\"Share\\\"><md-icon md-font-icon=\\\"icon-share\\\" class=\\\"s24\\\"></md-icon></md-button></div>\\n</div>\");\n$templateCache.put(\"app/core/directives/ms-stepper/templates/horizontal/horizontal.html\",\"<div class=\\\"ms-stepper-horizontal\\\"><div class=\\\"ms-stepper-navigation-wrapper\\\"><div class=\\\"ms-stepper-navigation\\\" \\nlayout=\\\"row\\\" layout-align=\\\"center center\\\"><md-button class=\\\"ms-stepper-navigation-item\\\" \\nng-class=\\\"{\\'current\\': MsStepper.isStepCurrent(step.stepNumber), \\'valid\\': MsStepper.isStepValid(step.stepNumber), \\'disabled\\': MsStepper.isStepDisabled(step.stepNumber), \\'optional\\': MsStepper.isStepOptional(step.stepNumber)}\\\" \\nng-click=\\\"MsStepper.gotoStep(step.stepNumber)\\\" ng-disabled=\\\"MsStepper.isStepDisabled(step.stepNumber)\\\" \\nng-repeat=\\\"step in MsStepper.steps | filter:MsStepper.filterHiddenStep\\\" layout=\\\"row\\\" layout-align=\\\"start center\\\"><div \\nclass=\\\"step md-accent-bg\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><span \\nng-if=\\\"!MsStepper.isStepValid(step.stepNumber) || MsStepper.isStepOptional(step.stepNumber)\\\">{{$index + 1}} </span>\\n<span ng-if=\\\"MsStepper.isStepValid(step.stepNumber) && !MsStepper.isStepOptional(step.stepNumber)\\\"><i \\nclass=\\\"icon icon-check s18\\\"></i></span></div><div layout=\\\"column\\\" layout-align=\\\"start start\\\"><div class=\\\"title\\\" \\ntranslate=\\\"{{step.stepTitleTranslate}}\\\">{{step.stepTitle}}</div><div class=\\\"subtitle\\\" \\nng-if=\\\"MsStepper.isStepOptional(step.stepNumber)\\\">Optional</div></div></md-button></div></div><div \\nclass=\\\"ms-stepper-steps\\\" ng-transclude></div><div class=\\\"ms-stepper-controls\\\" layout=\\\"row\\\" \\nlayout-align=\\\"center center\\\"><md-button class=\\\"md-accent md-raised\\\" ng-disabled=\\\"MsStepper.isFirstStep()\\\" \\nng-click=\\\"MsStepper.gotoPreviousStep()\\\">Back</md-button><div class=\\\"ms-stepper-dots\\\"><span \\nng-repeat=\\\"step in MsStepper.steps\\\" ng-hide=\\\"MsStepper.isStepHidden(step.stepNumber)\\\" \\nng-class=\\\"{\\'selected md-accent-bg\\':MsStepper.currentStepNumber === $index + 1}\\\"></span></div><md-button \\nclass=\\\"md-accent md-raised\\\" ng-if=\\\"!MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isStepValid(MsStepper.currentStepNumber)\\\" ng-click=\\\"MsStepper.gotoNextStep()\\\">Next</md-button>\\n<md-button type=\\\"submit\\\" class=\\\"md-accent md-raised\\\" ng-click=\\\"MsStepper.resetForm()\\\" ng-if=\\\"MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isFormValid()\\\">Submit</md-button></div></div>\");\n$templateCache.put(\"app/core/directives/ms-stepper/templates/vertical/vertical.html\",\"<div class=\\\"ms-stepper-vertical\\\"><div class=\\\"ms-stepper-vertical-line\\\"></div><div class=\\\"ms-stepper-steps\\\" \\nng-transclude></div></div>\");\n$templateCache.put(\"app/core/directives/ms-stepper/templates/vertical/step/vertical-step.html\",\"<md-button class=\\\"ms-stepper-navigation-item\\\" \\nng-class=\\\"{\\'current\\': MsStepper.isStepCurrent(stepInfo.stepNumber), \\'valid\\': MsStepper.isStepValid(stepInfo.stepNumber), \\'disabled\\': MsStepper.isStepDisabled(stepInfo.stepNumber), \\'optional\\': MsStepper.isStepOptional(stepInfo.stepNumber)}\\\" \\nng-click=\\\"MsStepper.gotoStep(stepInfo.stepNumber)\\\" ng-disabled=\\\"MsStepper.isStepDisabled(stepInfo.stepNumber)\\\" \\nng-hide=\\\"MsStepper.isStepHidden(stepInfo.stepNumber)\\\" aria-label=\\\"Stepper navigation button\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\"><div class=\\\"step\\\" layout=\\\"row\\\" layout-align=\\\"center center\\\"><span \\nng-if=\\\"!MsStepper.isStepValid(stepInfo.stepNumber) || MsStepper.isStepOptional(stepInfo.stepNumber)\\\"><i \\nclass=\\\"icon icon-checkbox-blank-circle-outline s18 md-accent-fg\\\"></i> </span><span \\nng-if=\\\"MsStepper.isStepValid(stepInfo.stepNumber) && !MsStepper.isStepOptional(stepInfo.stepNumber)\\\"><i \\nclass=\\\"icon icon-check-circle s18 md-accent-fg\\\"></i></span></div><div layout=\\\"column\\\" layout-align=\\\"start start\\\"><div \\nclass=\\\"title\\\" ng-if=\\\"stepInfo.stepTitleTranslate\\\">{{stepInfo.stepTitleTranslate | translate }}</div><div class=\\\"title\\\" \\nng-if=\\\"!stepInfo.stepTitleTranslate\\\">{{stepInfo.stepTitle}}</div><div class=\\\"subtitle\\\" \\nng-if=\\\"MsStepper.isStepOptional(stepInfo.stepNumber)\\\">Optional</div></div></md-button><div \\nclass=\\\"ms-stepper-step-content\\\" ng-transclude></div><div class=\\\"ms-stepper-controls\\\" layout=\\\"row\\\" \\nlayout-align=\\\"start center\\\" ng-show=\\\"MsStepper.isStepCurrent(stepInfo.stepNumber)\\\"><md-button \\nclass=\\\"md-accent md-raised\\\" ng-disabled=\\\"MsStepper.isFirstStep()\\\" ng-click=\\\"MsStepper.gotoPreviousStep()\\\">Back\\n</md-button><md-button class=\\\"md-accent md-raised\\\" ng-if=\\\"!MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isStepValid(MsStepper.currentStepNumber)\\\" ng-click=\\\"MsStepper.gotoNextStep()\\\">Next</md-button>\\n<md-button type=\\\"submit\\\" class=\\\"md-accent md-raised\\\" ng-click=\\\"MsStepper.resetForm()\\\" ng-if=\\\"MsStepper.isLastStep()\\\" \\nng-disabled=\\\"!MsStepper.isFormValid()\\\">Submit</md-button></div>\");}]);"],"sourceRoot":"/source/"}